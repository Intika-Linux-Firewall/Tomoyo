<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="ja-JP">
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="content-style-type" content="text/css">
<link rel="stylesheet" href="../media/tomoyolinux.css" media="all" type="text/css">
<title>TOMOYO Linux 2.5.x : TOMOYO Linux on Yocto</title>
</head>

<body>

<div id="titlebar">
<a href="../index.html.ja"><img src="../media/tomoyotitle.png" alt="tomoyotitle.png" width="320" height="40" border="0" align="left" title="TOMOYO Linux"></a>
</div>

<div id="navbar" class="tomoyo-documentation">
<ul id="navbarlist">
<li id="tomoyo-home"><a href="../index.html.ja" title="TOMOYO Linux ホーム">ホーム</a></li>
<li id="tomoyo-about"><a href="../about.html.ja" title="TOMOYO Linux の詳細">詳細</a></li>
<li id="tomoyo-download"><a href="../download.html.ja" title="TOMOYO Linux を入手">ダウンロード</a></li>
<li id="tomoyo-changelogs"><a href="../changelogs.html.ja" title="TOMOYO Linux 変更履歴">変更履歴</a></li>
<li id="tomoyo-documentation"><a href="../documentation.html.ja" title="公式ドキュメント">ドキュメント</a></li>
<li id="tomoyo-support"><a href="../support.html.ja" title="サポート情報">サポート</a></li>
<li id="tomoyo-links"><a href="../links.html.ja" title="Links">リンク</a></li>
</ul>
<ul id="switch-language">
<li id="tomoyo-switch-language"><a href="yocto-arm.html.en" title="Go to English page">English page</a></li>
</ul>
</div>

<div id="content">

<div id="regular-content">

<h2>TOMOYO Linux on Yocto</h2>

<p>このページでは、 <a href="https://www.yoctoproject.org/" target="_blank">Yocto</a> でビルドするイメージに TOMOYO Linux を含める手順について説明します。ホスト環境として x86 上で動作している Ubuntu 14.04 を使用します。ターゲット環境の例として Qemu for ARM または Raspberry Pi 2 または Raspberry Pi 3 を使用します。</p>

<ul>
<li><a href="#step1">ステップ１： Proxy の設定を行う（必要な環境のみ）</a></li>
<li><a href="#step2">ステップ２： Yocto 環境を構築する</a></li>
<li><a href="#step3">ステップ３： Raspberry Pi 用のレシピを入手する</a></li>
<li><a href="#step4">ステップ４： TOMOYO Linux 用のレシピを作成する</a></li>
<li><a href="#step5">ステップ５：ターゲットの設定を行う</a></li>
<li><a href="#step6">ステップ６： rpi-basic-image をビルドする</a></li>
<li><a href="#step7">ステップ７：エミュレータから実行する（ Qemu for ARM の場合のみ）</a></li>
<li><a href="#step8">ステップ８：マイクロＳＤカードにコピーする（ Raspberry Pi 2 または Raspberry Pi 3 の場合のみ）</a></li>
<li><a href="#step9">ステップ９： TOMOYO Linux の初期設定を行う</a></li>
</ul>

<h3><a name="step1">ステップ１： Proxy の設定を行う（必要な環境のみ）</a></h3>

<p>Proxy を使用している環境の場合、 Proxy の設定を行ってください。以下に、設定例を示します。</p>

<pre class="command">
kumaneko@ubuntu:~$ git config --global http.proxy http://xxx.xxx.xxx.xxx:yyyyy
kumaneko@ubuntu:~$ git config --global https.proxy http://xxx.xxx.xxx.xxx:yyyyy
kumaneko@ubuntu:~$ git config --global url."https://".insteadOf git://
kumaneko@ubuntu:~$ git config --global url."https://git.yoctoproject.org/git/".insteadOf git://git.yoctoproject.org/
kumaneko@ubuntu:~$ cat ~/.gitconfig
[http]
        proxy = http://xxx.xxx.xxx.xxx:yyyyy
[https]
        proxy = http://xxx.xxx.xxx.xxx:yyyyy
[url "https://"]
        insteadOf = git://
[url "https://git.yoctoproject.org/git/"]
        insteadOf = git://git.yoctoproject.org/
kumaneko@ubuntu:~$ echo 'export http_proxy=http://xxx.xxx.xxx.xxx:yyyyy/' &gt;&gt; ~/.bashrc
kumaneko@ubuntu:~$ echo 'export https_proxy=http://xxx.xxx.xxx.xxx:yyyyy/' &gt;&gt; ~/.bashrc
kumaneko@ubuntu:~$ echo 'export ftp_proxy=http://xxx.xxx.xxx.xxx:yyyyy/' &gt;&gt; ~/.bashrc
kumaneko@ubuntu:~$ grep _proxy ~/.bashrc
export http_proxy=http://xxx.xxx.xxx.xxx:yyyyy/
export https_proxy=http://xxx.xxx.xxx.xxx:yyyyy/
export ftp_proxy=http://xxx.xxx.xxx.xxx:yyyyy/
kumaneko@ubuntu:~$ source ~/.bashrc
</pre>

<h3><a name="step2">ステップ２： Yocto 環境を構築する</a></h3>

<p>作業用のディレクトリを作成し、 poky のレポジトリをダウンロードします。以下に、 yocto というディレクトリを使用する場合の例を示します。</p>

<pre class="command">
kumaneko@ubuntu:~$ mkdir yocto
kumaneko@ubuntu:~$ cd yocto/
kumaneko@ubuntu:~/yocto$ git clone git://git.yoctoproject.org/poky.git
Cloning into 'poky'...
remote: Counting objects: 335667, done.
remote: Compressing objects: 100% (81383/81383), done.
remote: Total 335667 (delta 248493), reused 335382 (delta 248209)
Receiving objects: 100% (335667/335667), 126.50 MiB | 249.00 KiB/s, done.
Resolving deltas: 100% (248493/248493), done.
Checking connectivity... done.
kumaneko@ubuntu:~/yocto$ cd poky/
</pre>

<p>Jethro ブランチ（ Yocto Project 2.0 ）を使う場合は以下のコマンドを実行します。</p>

<pre class="command">
kumaneko@ubuntu:~/yocto/poky$ git checkout -b jethro origin/jethro
Branch jethro set up to track remote branch jethro from origin.
Switched to a new branch 'jethro'
</pre>

<p>Krogoth ブランチ（ Yocto Project 2.1 ）を使う場合は以下のコマンドを実行します。</p>

<pre class="command">
kumaneko@ubuntu:~/yocto/poky$ git checkout -b krogoth origin/krogoth
Branch krogoth set up to track remote branch krogoth from origin.
Switched to a new branch 'krogoth'
</pre>

<h3><a name="step3">ステップ３： Raspberry Pi 用のレシピを入手する</a></h3>

<p>poky のレポジトリのあるディレクトリに、 Raspberry Pi 用のレシピを追加します。</p>

<pre class="command">
kumaneko@ubuntu:~/yocto/poky$ git clone git://git.yoctoproject.org/meta-raspberrypi
Cloning into 'meta-raspberrypi'...
remote: Counting objects: 2847, done.
remote: Compressing objects: 100% (1543/1543), done.
remote: Total 2847 (delta 1335), reused 2604 (delta 1092)
Receiving objects: 100% (2847/2847), 833.91 KiB | 268.00 KiB/s, done.
Resolving deltas: 100% (1335/1335), done.
Checking connectivity... done.
</pre>

<h3><a name="step4">ステップ４： TOMOYO Linux 用のレシピを作成する</a></h3>

<p>poky のレポジトリのあるディレクトリに、 TOMOYO Linux 用のレシピを追加します。</p>

<p>TOMOYO Linux を使うには、「カーネルのコンフィグオプションで TOMOYO Linux を有効化する」という設定と「イメージファイルの中に TOMOYO Linux を使うためのツールを含める」という設定を行います。前者は linux%.bbappend というレシピを作成することで、後者は OpenEmbedded 用のレシピをダウンロードすることで行います。</p>

<pre class="command">
kumaneko@ubuntu:~/yocto/poky$ mkdir -p meta-tomoyo/conf meta-tomoyo/recipes-tomoyo
kumaneko@ubuntu:~/yocto/poky$ vi meta-tomoyo/conf/layer.conf
kumaneko@ubuntu:~/yocto/poky$ cat meta-tomoyo/conf/layer.conf
BBPATH .= ":${LAYERDIR}"
BBFILES += "${LAYERDIR}/recipes-tomoyo/*.bb ${LAYERDIR}/recipes-tomoyo/*.bbappend"

kumaneko@ubuntu:~/yocto/poky$ vi meta-tomoyo/recipes-tomoyo/linux%.bbappend
kumaneko@ubuntu:~/yocto/poky$ cat meta-tomoyo/recipes-tomoyo/linux%.bbappend
# This .bbappend file is intended for providing a hook for automatically
# enabling TOMOYO 2.5 when compiling a Linux kernel using bitbake.
# In order to automatically apply this hook as much as possible by appending
# meta-tomoyo repository regardless of the .bb file used for compiling
# a Linux kernel, this .bbappend file's filename is intentionally blurred.
# If either this hook is unintentionally applied or you know the .bb file's
# filename, please rename this .bbappend file's filename.

do_configure_append() {
  if [ -f .config ] &amp;&amp; grep -qF CONFIG_SECURITY .config
  then
    (
      echo 'CONFIG_SECURITY=y'
      echo 'CONFIG_SECURITY_TOMOYO=y'
      echo 'CONFIG_DEFAULT_SECURITY_TOMOYO=y'
      echo '# CONFIG_DEFAULT_SECURITY_DAC is not set'
    ) &gt;&gt; .config
    yes '' | oe_runmake oldconfig
  fi
}
kumaneko@ubuntu:~/yocto/poky$ wget -q -O meta-tomoyo/recipes-tomoyo/tomoyo-tools_2.5.0.bb https://raw.githubusercontent.com/openembedded/meta-openembedded/master/meta-oe/recipes-support/tomoyo-tools/tomoyo-tools_2.5.0.bb
kumaneko@ubuntu:~/yocto/poky$ cat meta-tomoyo/recipes-tomoyo/tomoyo-tools_2.5.0.bb
SUMMARY = "TOMOYO Linux tools"
DESCRIPTION = "TOMOYO Linux is a Mandatory Access Control (MAC) implementation \
for Linux that can be used to increase the security of a system, while also \
being useful purely as a system analysis tool."
HOMEPAGE = "http://tomoyo.osdn.jp/"
SECTION = "System Environment/Kernel"

SRC_URI = "http://jaist.dl.osdn.jp/tomoyo/53357/${BP}-20170102.tar.gz"
SRC_URI[md5sum] = "888804d58742452fe213a68f7eadd0ad"
SRC_URI[sha256sum] = "00fedfac5e514321250bbe69eaccc732c8a8158596f77a785c2e3ae9f9968283"

S = "${WORKDIR}/${BPN}"

LICENSE = "GPLv2"
LIC_FILES_CHKSUM = "file://COPYING.tomoyo;md5=751419260aa954499f7abaabaa882bbe"

FILES_${PN}     += "${libdir}/tomoyo"
FILES_${PN}-dbg += "${libdir}/tomoyo/.debug"

DEPENDS = "linux-libc-headers ncurses"

EXTRA_OEMAKE = "-e USRLIBDIR=${libdir}"

do_compile () {
    oe_runmake 'CC=${CC}'
}

do_install() {
    oe_runmake install INSTALLDIR=${D}
}
kumaneko@ubuntu:~/yocto/poky$ ls -lrtR meta-tomoyo/
meta-tomoyo/:
total 8
drwxrwxr-x 2 kumaneko kumaneko 4096 Sep 18 13:17 conf
drwxrwxr-x 2 kumaneko kumaneko 4096 Sep 18 13:18 recipes-tomoyo

meta-tomoyo/conf:
total 4
-rw-rw-r-- 1 kumaneko kumaneko 109 Sep 18 13:17 layer.conf

meta-tomoyo/recipes-tomoyo:
total 8
-rw-rw-r-- 1 kumaneko kumaneko 818 Sep 18 13:17 linux%.bbappend
-rw-rw-r-- 1 kumaneko kumaneko 930 Sep 18 13:18 tomoyo-tools_2.5.0.bb
</pre>

<h3><a name="step5">ステップ５：ターゲットの設定を行う</a></h3>

<p>ビルド用のディレクトリへ移動するために、 oe-init-build-env を読み込みます。</p>

<pre class="command">
kumaneko@ubuntu:~/yocto/poky$ source oe-init-build-env
You had no conf/local.conf file. This configuration file has therefore been
created for you with some default values. You may wish to edit it to use a
different MACHINE (target hardware) or enable parallel build options to take
advantage of multiple cores for example. See the file for more information as
common configuration options are commented.

You had no conf/bblayers.conf file. The configuration file has been created for
you with some default values. To add additional metadata layers into your
configuration please add entries to this file.

The Yocto Project has extensive documentation about OE including a reference
manual which can be found at:
    http://yoctoproject.org/documentation

For more information about OpenEmbedded see their website:
    http://www.openembedded.org/


### Shell environment set up for builds. ###

You can now run 'bitbake &lt;target&gt;'

Common targets are:
    core-image-minimal
    core-image-sato
    meta-toolchain
    adt-installer
    meta-ide-support

You can also run generated qemu images with a command like 'runqemu qemux86'
</pre>

<p>oe-init-build-env により生成された conf/bblayers.conf に対して、 Raspberry Pi 用のレシピと TOMOYO Linux 用のレシピを参照するように指定します。</p>

<pre class="command">
kumaneko@ubuntu:~/yocto/poky/build$ bitbake-layers add-layer ../meta-raspberrypi/
kumaneko@ubuntu:~/yocto/poky/build$ bitbake-layers add-layer ../meta-tomoyo/
</pre>

<p>oe-init-build-env により生成された conf/local.conf に対して以下の設定を追加します。</p>

<ol>
<li>ターゲットとなるハードウェアとして Qemu for ARM を使用する場合は MACHINE = "qemuarm" を、 Raspberry Pi 2 を使用する場合は MACHINE = "raspberrypi2" を、 Raspberry Pi 3 を使用する場合は MACHINE = "raspberrypi3" を指定します。</li>
<li>ソースコードのダウンロードなどを並列に処理できるようにするために、 BB_NUMBER_THREADS という変数に妥当な整数値を指定します。</li>
<li>イメージに TOMOYO Linux のツール（ tomoyo-tools ）を追加するために、 IMAGE_INSTALL_append = "tomoyo-tools" を指定します。</li>
</ol>

<pre class="command">
kumaneko@ubuntu:~/yocto/poky/build$ cp -p conf/local.conf conf/local.conf.orig
kumaneko@ubuntu:~/yocto/poky/build$ vi conf/local.conf
kumaneko@ubuntu:~/yocto/poky/build$ diff -u conf/local.conf.orig conf/local.conf
--- conf/local.conf.orig        2016-09-18 13:18:55.371511496 +0900
+++ conf/local.conf     2016-09-18 13:20:59.489417182 +0900
@@ -237,3 +237,7 @@
 # track the version of this file when it was generated. This can safely be ignored if
 # this doesn't mean anything to you.
 CONF_VERSION = "1"
+
+MACHINE = "raspberrypi2"
+BB_NUMBER_THREADS = "16"
+IMAGE_INSTALL_append = "tomoyo-tools"
</pre>

<h3><a name="step6">ステップ６： rpi-basic-image をビルドする</a></h3>

<p>bitbake コマンドを用いて、 Raspberry Pi 用のレシピとして定義されている rpi-basic-image を実行します。コンパイルだけでなくソースコードなどのダウンロードも行われるため、数時間かかります。</p>

<p>bitbake コマンドが正常に終了した場合、 tmp/deploy/images/ ディレクトリ配下に rpi-basic-image- という名前で始まるイメージファイルが作成されています。</p>

<p>MACHINE = "raspberrypi2" を指定した場合は、以下のようになります。</p>

<pre class="command">
kumaneko@ubuntu:~/yocto/poky/build$ bitbake rpi-basic-image
Parsing recipes: 100% |######################################################################################################################################################################################################| Time: 00:00:40
Parsing of 920 .bb files complete (0 cached, 920 parsed). 1351 targets, 58 skipped, 0 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies

Build Configuration:
BB_VERSION        = "1.28.0"
BUILD_SYS         = "x86_64-linux"
NATIVELSBSTRING   = "Ubuntu-14.04"
TARGET_SYS        = "arm-poky-linux-gnueabi"
MACHINE           = "raspberrypi2"
DISTRO            = "poky"
DISTRO_VERSION    = "2.0.2"
TUNE_FEATURES     = "arm armv7a vfp thumb neon callconvention-hard vfpv4 cortexa7"
TARGET_FPU        = "vfp-vfpv4-neon"
meta
meta-yocto
meta-yocto-bsp    = "jethro:37eb21b2b1d5977a028a448e52551607fae99bf7"
meta-raspberrypi  = "master:4c02c7ce07121c2f5367204445f93199d828bb10"
meta-tomoyo       = "jethro:37eb21b2b1d5977a028a448e52551607fae99bf7"

NOTE: Preparing RunQueue
NOTE: Executing SetScene Tasks
NOTE: Executing RunQueue Tasks
NOTE: Tasks Summary: Attempted 2013 tasks of which 10 didn't need to be rerun and all succeeded.
kumaneko@ubuntu:~/yocto/poky/build$ ls -lrtR tmp/deploy/images/
tmp/deploy/images/:
total 4
drwxr-xr-x 3 kumaneko kumaneko 4096 Sep 18 14:50 raspberrypi2

tmp/deploy/images/raspberrypi2:
total 247220
-rw-r--r-- 2 kumaneko kumaneko   9113600 Sep 18 14:47 Image-1-4.1.21+git0+ff45bc0e89-r0-raspberrypi2-20160918043730.bin
-rw-rw-r-- 2 kumaneko kumaneko  16411321 Sep 18 14:47 modules-1-4.1.21+git0+ff45bc0e89-r0-raspberrypi2-20160918043730.tgz
-rw-r--r-- 2 kumaneko kumaneko     10849 Sep 18 14:47 Image-1-4.1.21+git0+ff45bc0e89-r0-bcm2708-rpi-b-20160918043730.dtb
-rw-r--r-- 2 kumaneko kumaneko     11128 Sep 18 14:47 Image-1-4.1.21+git0+ff45bc0e89-r0-bcm2708-rpi-b-plus-20160918043730.dtb
-rw-r--r-- 2 kumaneko kumaneko     12116 Sep 18 14:47 Image-1-4.1.21+git0+ff45bc0e89-r0-bcm2709-rpi-2-b-20160918043730.dtb
-rw-r--r-- 2 kumaneko kumaneko     12870 Sep 18 14:47 Image-1-4.1.21+git0+ff45bc0e89-r0-bcm2710-rpi-3-b-20160918043730.dtb
-rw-r--r-- 2 kumaneko kumaneko       779 Sep 18 14:47 Image-1-4.1.21+git0+ff45bc0e89-r0-hifiberry-amp-overlay-20160918043730.dtb
-rw-r--r-- 2 kumaneko kumaneko       655 Sep 18 14:47 Image-1-4.1.21+git0+ff45bc0e89-r0-hifiberry-dac-overlay-20160918043730.dtb
-rw-r--r-- 2 kumaneko kumaneko      1378 Sep 18 14:47 Image-1-4.1.21+git0+ff45bc0e89-r0-hifiberry-dacplus-overlay-20160918043730.dtb
-rw-r--r-- 2 kumaneko kumaneko       783 Sep 18 14:47 Image-1-4.1.21+git0+ff45bc0e89-r0-hifiberry-digi-overlay-20160918043730.dtb
-rw-r--r-- 2 kumaneko kumaneko      2313 Sep 18 14:47 Image-1-4.1.21+git0+ff45bc0e89-r0-i2c-rtc-overlay-20160918043730.dtb
-rw-r--r-- 2 kumaneko kumaneko       775 Sep 18 14:47 Image-1-4.1.21+git0+ff45bc0e89-r0-iqaudio-dac-overlay-20160918043730.dtb
-rw-r--r-- 2 kumaneko kumaneko      1051 Sep 18 14:47 Image-1-4.1.21+git0+ff45bc0e89-r0-iqaudio-dacplus-overlay-20160918043730.dtb
-rw-r--r-- 2 kumaneko kumaneko      1428 Sep 18 14:47 Image-1-4.1.21+git0+ff45bc0e89-r0-lirc-rpi-overlay-20160918043730.dtb
-rw-r--r-- 2 kumaneko kumaneko      1576 Sep 18 14:47 Image-1-4.1.21+git0+ff45bc0e89-r0-pitft22-overlay-20160918043730.dtb
-rw-r--r-- 2 kumaneko kumaneko      2658 Sep 18 14:47 Image-1-4.1.21+git0+ff45bc0e89-r0-pitft28-resistive-overlay-20160918043730.dtb
-rw-r--r-- 2 kumaneko kumaneko      1003 Sep 18 14:47 Image-1-4.1.21+git0+ff45bc0e89-r0-pps-gpio-overlay-20160918043730.dtb
-rw-r--r-- 2 kumaneko kumaneko       484 Sep 18 14:47 Image-1-4.1.21+git0+ff45bc0e89-r0-rpi-ft5406-overlay-20160918043730.dtb
-rw-r--r-- 2 kumaneko kumaneko      1124 Sep 18 14:47 Image-1-4.1.21+git0+ff45bc0e89-r0-w1-gpio-overlay-20160918043730.dtb
-rw-r--r-- 2 kumaneko kumaneko      1291 Sep 18 14:47 Image-1-4.1.21+git0+ff45bc0e89-r0-w1-gpio-pullup-overlay-20160918043730.dtb
-rw-r--r-- 2 kumaneko kumaneko      1097 Sep 18 14:47 Image-1-4.1.21+git0+ff45bc0e89-r0-pi3-miniuart-bt-overlay-20160918043730.dtb
lrwxrwxrwx 1 kumaneko kumaneko        67 Sep 18 14:47 modules-raspberrypi2.tgz -&gt; modules-1-4.1.21+git0+ff45bc0e89-r0-raspberrypi2-20160918043730.tgz
lrwxrwxrwx 1 kumaneko kumaneko        75 Sep 18 14:47 Image-w1-gpio-pullup-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-w1-gpio-pullup-overlay-20160918043730.dtb
lrwxrwxrwx 1 kumaneko kumaneko        68 Sep 18 14:47 Image-w1-gpio-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-w1-gpio-overlay-20160918043730.dtb
lrwxrwxrwx 1 kumaneko kumaneko        71 Sep 18 14:47 Image-rpi-ft5406-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-rpi-ft5406-overlay-20160918043730.dtb
lrwxrwxrwx 1 kumaneko kumaneko        65 Sep 18 14:47 Image-raspberrypi2.bin -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-raspberrypi2-20160918043730.bin
lrwxrwxrwx 1 kumaneko kumaneko        69 Sep 18 14:47 Image-pps-gpio-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-pps-gpio-overlay-20160918043730.dtb
lrwxrwxrwx 1 kumaneko kumaneko        78 Sep 18 14:47 Image-pitft28-resistive-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-pitft28-resistive-overlay-20160918043730.dtb
lrwxrwxrwx 1 kumaneko kumaneko        68 Sep 18 14:47 Image-pitft22-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-pitft22-overlay-20160918043730.dtb
lrwxrwxrwx 1 kumaneko kumaneko        76 Sep 18 14:47 Image-pi3-miniuart-bt-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-pi3-miniuart-bt-overlay-20160918043730.dtb
lrwxrwxrwx 1 kumaneko kumaneko        69 Sep 18 14:47 Image-lirc-rpi-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-lirc-rpi-overlay-20160918043730.dtb
lrwxrwxrwx 1 kumaneko kumaneko        76 Sep 18 14:47 Image-iqaudio-dacplus-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-iqaudio-dacplus-overlay-20160918043730.dtb
lrwxrwxrwx 1 kumaneko kumaneko        72 Sep 18 14:47 Image-iqaudio-dac-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-iqaudio-dac-overlay-20160918043730.dtb
lrwxrwxrwx 1 kumaneko kumaneko        68 Sep 18 14:47 Image-i2c-rtc-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-i2c-rtc-overlay-20160918043730.dtb
lrwxrwxrwx 1 kumaneko kumaneko        75 Sep 18 14:47 Image-hifiberry-digi-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-hifiberry-digi-overlay-20160918043730.dtb
lrwxrwxrwx 1 kumaneko kumaneko        78 Sep 18 14:47 Image-hifiberry-dacplus-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-hifiberry-dacplus-overlay-20160918043730.dtb
lrwxrwxrwx 1 kumaneko kumaneko        74 Sep 18 14:47 Image-hifiberry-dac-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-hifiberry-dac-overlay-20160918043730.dtb
lrwxrwxrwx 1 kumaneko kumaneko        74 Sep 18 14:47 Image-hifiberry-amp-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-hifiberry-amp-overlay-20160918043730.dtb
lrwxrwxrwx 1 kumaneko kumaneko        68 Sep 18 14:47 Image-bcm2710-rpi-3-b.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-bcm2710-rpi-3-b-20160918043730.dtb
lrwxrwxrwx 1 kumaneko kumaneko        68 Sep 18 14:47 Image-bcm2709-rpi-2-b.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-bcm2709-rpi-2-b-20160918043730.dtb
lrwxrwxrwx 1 kumaneko kumaneko        71 Sep 18 14:47 Image-bcm2708-rpi-b-plus.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-bcm2708-rpi-b-plus-20160918043730.dtb
lrwxrwxrwx 1 kumaneko kumaneko        66 Sep 18 14:47 Image-bcm2708-rpi-b.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-bcm2708-rpi-b-20160918043730.dtb
lrwxrwxrwx 1 kumaneko kumaneko        65 Sep 18 14:47 Image -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-raspberrypi2-20160918043730.bin
drwxr-xr-x 2 kumaneko kumaneko      4096 Sep 18 14:47 bcm2835-bootfiles
-rw-r--r-- 2 kumaneko kumaneko       294 Sep 18 14:49 README_-_DO_NOT_DELETE_FILES_IN_THIS_DIRECTORY.txt
-rw-r--r-- 1 kumaneko kumaneko     90315 Sep 18 14:50 rpi-basic-image-raspberrypi2-20160918043730.rootfs.manifest
-rw-r--r-- 1 kumaneko kumaneko  21155409 Sep 18 14:50 rpi-basic-image-raspberrypi2-20160918043730.rootfs.tar.bz2
-rw-r--r-- 1 kumaneko kumaneko  92274688 Sep 18 14:50 rpi-basic-image-raspberrypi2-20160918043730.rootfs.ext3
lrwxrwxrwx 1 kumaneko kumaneko        58 Sep 18 14:50 rpi-basic-image-raspberrypi2.tar.bz2 -&gt; rpi-basic-image-raspberrypi2-20160918043730.rootfs.tar.bz2
lrwxrwxrwx 1 kumaneko kumaneko        59 Sep 18 14:50 rpi-basic-image-raspberrypi2.manifest -&gt; rpi-basic-image-raspberrypi2-20160918043730.rootfs.manifest
lrwxrwxrwx 1 kumaneko kumaneko        55 Sep 18 14:50 rpi-basic-image-raspberrypi2.ext3 -&gt; rpi-basic-image-raspberrypi2-20160918043730.rootfs.ext3
-rw-r--r-- 1 kumaneko kumaneko 138412032 Sep 18 14:50 rpi-basic-image-raspberrypi2-20160918043730.rootfs.rpi-sdimg
lrwxrwxrwx 1 kumaneko kumaneko        60 Sep 18 14:50 rpi-basic-image-raspberrypi2.rpi-sdimg -&gt; rpi-basic-image-raspberrypi2-20160918043730.rootfs.rpi-sdimg

tmp/deploy/images/raspberrypi2/bcm2835-bootfiles:
total 11984
-rw-r--r-- 2 kumaneko kumaneko   36159 Sep 18 14:21 config.txt
-rw-r--r-- 2 kumaneko kumaneko 2746552 Sep 18 14:21 start.elf
-rw-r--r-- 2 kumaneko kumaneko  617432 Sep 18 14:21 start_cd.elf
-rw-r--r-- 2 kumaneko kumaneko 4926264 Sep 18 14:21 start_db.elf
-rw-r--r-- 2 kumaneko kumaneko 3877720 Sep 18 14:21 start_x.elf
-rw-r--r-- 2 kumaneko kumaneko    6482 Sep 18 14:21 fixup.dat
-rw-r--r-- 2 kumaneko kumaneko    9717 Sep 18 14:21 fixup_db.dat
-rw-r--r-- 2 kumaneko kumaneko    2504 Sep 18 14:21 fixup_cd.dat
-rw-r--r-- 2 kumaneko kumaneko    9717 Sep 18 14:21 fixup_x.dat
-rw-r--r-- 2 kumaneko kumaneko   17932 Sep 18 14:21 bootcode.bin
-rw-rw-r-- 2 kumaneko kumaneko       0 Sep 18 14:21 bcm2835-bootfiles-20160622.stamp
-rw-rw-r-- 2 kumaneko kumaneko      96 Sep 18 14:47 cmdline.txt
kumaneko@ubuntu:~/yocto/poky/build$ tar -vvtf tmp/deploy/images/raspberrypi2/rpi-basic-image-raspberrypi2.tar.bz2 | grep tomoyo
-rwxr-xr-x root/root     22900 2016-09-18 14:27 ./usr/lib/libtomoyotools.so.3.0.2
lrwxrwxrwx root/root         0 2016-09-18 14:50 ./usr/lib/libtomoyotools.so.3 -&gt; libtomoyotools.so.3.0.2
drwxr-xr-x root/root         0 2016-09-18 14:50 ./usr/lib/tomoyo/
-rwxr-xr-x root/root      5892 2016-09-18 14:27 ./usr/lib/tomoyo/convert-audit-log
-rw-r--r-- root/root     17987 2016-09-18 14:27 ./usr/lib/tomoyo/COPYING.tomoyo
-rwxr-xr-x root/root     46332 2016-09-18 14:27 ./usr/lib/tomoyo/init_policy
-rwxr-xr-x root/root      4148 2016-09-18 14:27 ./usr/lib/tomoyo/audit-exec-param
-rwxr-xr-x root/root      9348 2016-09-18 14:27 ./usr/lib/tomoyo/tomoyo-editpolicy-agent
-rwxr-xr-x root/root      5304 2016-09-18 14:27 ./usr/lib/tomoyo/convert-exec-param
-rw-r--r-- root/root      1694 2016-09-18 14:27 ./usr/lib/tomoyo/README.tomoyo
-rwxr-xr-x root/root      3648 2016-09-18 14:27 ./usr/sbin/tomoyo-sortpolicy
-rwxr-xr-x root/root     12608 2016-09-18 14:27 ./usr/sbin/tomoyo-queryd
-rwxr-xr-x root/root      8420 2016-09-18 14:27 ./usr/sbin/tomoyo-savepolicy
-rwxr-xr-x root/root      8096 2016-09-18 14:27 ./usr/sbin/tomoyo-loadpolicy
-rwxr-xr-x root/root      4444 2016-09-18 14:27 ./usr/sbin/tomoyo-selectpolicy
-rwxr-xr-x root/root      5456 2016-09-18 14:27 ./usr/sbin/tomoyo-pstree
-rwxr-xr-x root/root     13268 2016-09-18 14:27 ./usr/sbin/tomoyo-checkpolicy
-rwxr-xr-x root/root      4688 2016-09-18 14:27 ./usr/sbin/tomoyo-domainmatch
-rwxr-xr-x root/root      5180 2016-09-18 14:27 ./usr/sbin/tomoyo-findtemp
-rwxr-xr-x root/root     10068 2016-09-18 14:27 ./usr/sbin/tomoyo-patternize
-rwxr-xr-x root/root     10480 2016-09-18 14:27 ./usr/sbin/tomoyo-auditd
-rwxr-xr-x root/root      4768 2016-09-18 14:27 ./usr/sbin/tomoyo-diffpolicy
-rwxr-xr-x root/root      5520 2016-09-18 14:27 ./usr/sbin/tomoyo-setlevel
-rwxr-xr-x root/root      5916 2016-09-18 14:27 ./usr/sbin/tomoyo-setprofile
-rwxr-xr-x root/root      8784 2016-09-18 14:27 ./usr/sbin/tomoyo-notifyd
-rwxr-xr-x root/root     85180 2016-09-18 14:27 ./usr/sbin/tomoyo-editpolicy
-rwx------ root/root     10676 2016-09-18 14:27 ./sbin/tomoyo-init
</pre>

<p>MACHINE = "raspberrypi3" を指定した場合は、以下のようになります。</p>

<pre class="command">
kumaneko@ubuntu:~/yocto/poky/build$ bitbake rpi-basic-image
Parsing recipes: 100% |######################################################################################################################################################################################################| Time: 00:00:25
Parsing of 920 .bb files complete (0 cached, 920 parsed). 1351 targets, 58 skipped, 0 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies

Build Configuration:
BB_VERSION        = "1.28.0"
BUILD_SYS         = "x86_64-linux"
NATIVELSBSTRING   = "Ubuntu-14.04"
TARGET_SYS        = "arm-poky-linux-gnueabi"
MACHINE           = "raspberrypi3"
DISTRO            = "poky"
DISTRO_VERSION    = "2.0.2"
TUNE_FEATURES     = "arm armv7a vfp thumb neon callconvention-hard vfpv4 cortexa7"
TARGET_FPU        = "vfp-vfpv4-neon"
meta
meta-yocto
meta-yocto-bsp    = "jethro:37eb21b2b1d5977a028a448e52551607fae99bf7"
meta-raspberrypi  = "master:4c02c7ce07121c2f5367204445f93199d828bb10"
meta-tomoyo       = "jethro:37eb21b2b1d5977a028a448e52551607fae99bf7"

NOTE: Preparing RunQueue
NOTE: Executing SetScene Tasks
NOTE: Executing RunQueue Tasks
NOTE: Tasks Summary: Attempted 2013 tasks of which 1876 didn't need to be rerun and all succeeded.
kumaneko@ubuntu:~/yocto/poky/build$ ls -lrtR tmp/deploy/images/
tmp/deploy/images/:
total 4
drwxr-xr-x 3 kumaneko kumaneko 4096 Sep 18 15:51 raspberrypi3

tmp/deploy/images/raspberrypi3:
total 247220
-rw-r--r-- 2 kumaneko kumaneko   9113600 Sep 18 15:48 Image-1-4.1.21+git0+ff45bc0e89-r0-raspberrypi3-20160918063631.bin
-rw-rw-r-- 2 kumaneko kumaneko  16411443 Sep 18 15:48 modules-1-4.1.21+git0+ff45bc0e89-r0-raspberrypi3-20160918063631.tgz
-rw-r--r-- 2 kumaneko kumaneko     10849 Sep 18 15:48 Image-1-4.1.21+git0+ff45bc0e89-r0-bcm2708-rpi-b-20160918063631.dtb
-rw-r--r-- 2 kumaneko kumaneko     11128 Sep 18 15:48 Image-1-4.1.21+git0+ff45bc0e89-r0-bcm2708-rpi-b-plus-20160918063631.dtb
-rw-r--r-- 2 kumaneko kumaneko     12116 Sep 18 15:48 Image-1-4.1.21+git0+ff45bc0e89-r0-bcm2709-rpi-2-b-20160918063631.dtb
-rw-r--r-- 2 kumaneko kumaneko     12870 Sep 18 15:48 Image-1-4.1.21+git0+ff45bc0e89-r0-bcm2710-rpi-3-b-20160918063631.dtb
-rw-r--r-- 2 kumaneko kumaneko       779 Sep 18 15:48 Image-1-4.1.21+git0+ff45bc0e89-r0-hifiberry-amp-overlay-20160918063631.dtb
-rw-r--r-- 2 kumaneko kumaneko       655 Sep 18 15:48 Image-1-4.1.21+git0+ff45bc0e89-r0-hifiberry-dac-overlay-20160918063631.dtb
-rw-r--r-- 2 kumaneko kumaneko      1378 Sep 18 15:48 Image-1-4.1.21+git0+ff45bc0e89-r0-hifiberry-dacplus-overlay-20160918063631.dtb
-rw-r--r-- 2 kumaneko kumaneko       783 Sep 18 15:48 Image-1-4.1.21+git0+ff45bc0e89-r0-hifiberry-digi-overlay-20160918063631.dtb
-rw-r--r-- 2 kumaneko kumaneko      2313 Sep 18 15:48 Image-1-4.1.21+git0+ff45bc0e89-r0-i2c-rtc-overlay-20160918063631.dtb
-rw-r--r-- 2 kumaneko kumaneko       775 Sep 18 15:48 Image-1-4.1.21+git0+ff45bc0e89-r0-iqaudio-dac-overlay-20160918063631.dtb
-rw-r--r-- 2 kumaneko kumaneko      1051 Sep 18 15:48 Image-1-4.1.21+git0+ff45bc0e89-r0-iqaudio-dacplus-overlay-20160918063631.dtb
-rw-r--r-- 2 kumaneko kumaneko      1003 Sep 18 15:48 Image-1-4.1.21+git0+ff45bc0e89-r0-pps-gpio-overlay-20160918063631.dtb
-rw-r--r-- 2 kumaneko kumaneko      2658 Sep 18 15:48 Image-1-4.1.21+git0+ff45bc0e89-r0-pitft28-resistive-overlay-20160918063631.dtb
-rw-r--r-- 2 kumaneko kumaneko      1576 Sep 18 15:48 Image-1-4.1.21+git0+ff45bc0e89-r0-pitft22-overlay-20160918063631.dtb
-rw-r--r-- 2 kumaneko kumaneko      1428 Sep 18 15:48 Image-1-4.1.21+git0+ff45bc0e89-r0-lirc-rpi-overlay-20160918063631.dtb
-rw-r--r-- 2 kumaneko kumaneko       484 Sep 18 15:48 Image-1-4.1.21+git0+ff45bc0e89-r0-rpi-ft5406-overlay-20160918063631.dtb
-rw-r--r-- 2 kumaneko kumaneko      1124 Sep 18 15:48 Image-1-4.1.21+git0+ff45bc0e89-r0-w1-gpio-overlay-20160918063631.dtb
-rw-r--r-- 2 kumaneko kumaneko      1291 Sep 18 15:48 Image-1-4.1.21+git0+ff45bc0e89-r0-w1-gpio-pullup-overlay-20160918063631.dtb
-rw-r--r-- 2 kumaneko kumaneko      1097 Sep 18 15:48 Image-1-4.1.21+git0+ff45bc0e89-r0-pi3-miniuart-bt-overlay-20160918063631.dtb
lrwxrwxrwx 1 kumaneko kumaneko        67 Sep 18 15:48 modules-raspberrypi3.tgz -&gt; modules-1-4.1.21+git0+ff45bc0e89-r0-raspberrypi3-20160918063631.tgz
lrwxrwxrwx 1 kumaneko kumaneko        75 Sep 18 15:48 Image-w1-gpio-pullup-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-w1-gpio-pullup-overlay-20160918063631.dtb
lrwxrwxrwx 1 kumaneko kumaneko        68 Sep 18 15:48 Image-w1-gpio-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-w1-gpio-overlay-20160918063631.dtb
lrwxrwxrwx 1 kumaneko kumaneko        71 Sep 18 15:48 Image-rpi-ft5406-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-rpi-ft5406-overlay-20160918063631.dtb
lrwxrwxrwx 1 kumaneko kumaneko        65 Sep 18 15:48 Image-raspberrypi3.bin -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-raspberrypi3-20160918063631.bin
lrwxrwxrwx 1 kumaneko kumaneko        69 Sep 18 15:48 Image-pps-gpio-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-pps-gpio-overlay-20160918063631.dtb
lrwxrwxrwx 1 kumaneko kumaneko        78 Sep 18 15:48 Image-pitft28-resistive-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-pitft28-resistive-overlay-20160918063631.dtb
lrwxrwxrwx 1 kumaneko kumaneko        68 Sep 18 15:48 Image-pitft22-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-pitft22-overlay-20160918063631.dtb
lrwxrwxrwx 1 kumaneko kumaneko        76 Sep 18 15:48 Image-pi3-miniuart-bt-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-pi3-miniuart-bt-overlay-20160918063631.dtb
lrwxrwxrwx 1 kumaneko kumaneko        69 Sep 18 15:48 Image-lirc-rpi-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-lirc-rpi-overlay-20160918063631.dtb
lrwxrwxrwx 1 kumaneko kumaneko        76 Sep 18 15:48 Image-iqaudio-dacplus-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-iqaudio-dacplus-overlay-20160918063631.dtb
lrwxrwxrwx 1 kumaneko kumaneko        72 Sep 18 15:48 Image-iqaudio-dac-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-iqaudio-dac-overlay-20160918063631.dtb
lrwxrwxrwx 1 kumaneko kumaneko        68 Sep 18 15:48 Image-i2c-rtc-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-i2c-rtc-overlay-20160918063631.dtb
lrwxrwxrwx 1 kumaneko kumaneko        75 Sep 18 15:48 Image-hifiberry-digi-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-hifiberry-digi-overlay-20160918063631.dtb
lrwxrwxrwx 1 kumaneko kumaneko        78 Sep 18 15:48 Image-hifiberry-dacplus-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-hifiberry-dacplus-overlay-20160918063631.dtb
lrwxrwxrwx 1 kumaneko kumaneko        74 Sep 18 15:48 Image-hifiberry-dac-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-hifiberry-dac-overlay-20160918063631.dtb
lrwxrwxrwx 1 kumaneko kumaneko        74 Sep 18 15:48 Image-hifiberry-amp-overlay.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-hifiberry-amp-overlay-20160918063631.dtb
lrwxrwxrwx 1 kumaneko kumaneko        68 Sep 18 15:48 Image-bcm2710-rpi-3-b.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-bcm2710-rpi-3-b-20160918063631.dtb
lrwxrwxrwx 1 kumaneko kumaneko        68 Sep 18 15:48 Image-bcm2709-rpi-2-b.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-bcm2709-rpi-2-b-20160918063631.dtb
lrwxrwxrwx 1 kumaneko kumaneko        71 Sep 18 15:48 Image-bcm2708-rpi-b-plus.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-bcm2708-rpi-b-plus-20160918063631.dtb
lrwxrwxrwx 1 kumaneko kumaneko        66 Sep 18 15:48 Image-bcm2708-rpi-b.dtb -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-bcm2708-rpi-b-20160918063631.dtb
lrwxrwxrwx 1 kumaneko kumaneko        65 Sep 18 15:48 Image -&gt; Image-1-4.1.21+git0+ff45bc0e89-r0-raspberrypi3-20160918063631.bin
drwxr-xr-x 2 kumaneko kumaneko      4096 Sep 18 15:48 bcm2835-bootfiles
-rw-r--r-- 2 kumaneko kumaneko       294 Sep 18 15:50 README_-_DO_NOT_DELETE_FILES_IN_THIS_DIRECTORY.txt
-rw-r--r-- 1 kumaneko kumaneko     90315 Sep 18 15:51 rpi-basic-image-raspberrypi3-20160918063631.rootfs.manifest
-rw-r--r-- 1 kumaneko kumaneko  21153614 Sep 18 15:51 rpi-basic-image-raspberrypi3-20160918063631.rootfs.tar.bz2
-rw-r--r-- 1 kumaneko kumaneko  92274688 Sep 18 15:51 rpi-basic-image-raspberrypi3-20160918063631.rootfs.ext3
lrwxrwxrwx 1 kumaneko kumaneko        58 Sep 18 15:51 rpi-basic-image-raspberrypi3.tar.bz2 -&gt; rpi-basic-image-raspberrypi3-20160918063631.rootfs.tar.bz2
lrwxrwxrwx 1 kumaneko kumaneko        59 Sep 18 15:51 rpi-basic-image-raspberrypi3.manifest -&gt; rpi-basic-image-raspberrypi3-20160918063631.rootfs.manifest
lrwxrwxrwx 1 kumaneko kumaneko        55 Sep 18 15:51 rpi-basic-image-raspberrypi3.ext3 -&gt; rpi-basic-image-raspberrypi3-20160918063631.rootfs.ext3
-rw-r--r-- 1 kumaneko kumaneko 138412032 Sep 18 15:51 rpi-basic-image-raspberrypi3-20160918063631.rootfs.rpi-sdimg
lrwxrwxrwx 1 kumaneko kumaneko        60 Sep 18 15:51 rpi-basic-image-raspberrypi3.rpi-sdimg -&gt; rpi-basic-image-raspberrypi3-20160918063631.rootfs.rpi-sdimg

tmp/deploy/images/raspberrypi3/bcm2835-bootfiles:
total 11984
-rw-r--r-- 2 kumaneko kumaneko   36159 Sep 18 15:38 config.txt
-rw-r--r-- 2 kumaneko kumaneko 2746552 Sep 18 15:38 start.elf
-rw-r--r-- 2 kumaneko kumaneko  617432 Sep 18 15:38 start_cd.elf
-rw-r--r-- 2 kumaneko kumaneko 4926264 Sep 18 15:38 start_db.elf
-rw-r--r-- 2 kumaneko kumaneko 3877720 Sep 18 15:38 start_x.elf
-rw-r--r-- 2 kumaneko kumaneko    9717 Sep 18 15:38 fixup_x.dat
-rw-r--r-- 2 kumaneko kumaneko    9717 Sep 18 15:38 fixup_db.dat
-rw-r--r-- 2 kumaneko kumaneko    6482 Sep 18 15:38 fixup.dat
-rw-r--r-- 2 kumaneko kumaneko    2504 Sep 18 15:38 fixup_cd.dat
-rw-r--r-- 2 kumaneko kumaneko   17932 Sep 18 15:38 bootcode.bin
-rw-rw-r-- 2 kumaneko kumaneko       0 Sep 18 15:38 bcm2835-bootfiles-20160622.stamp
-rw-rw-r-- 2 kumaneko kumaneko      96 Sep 18 15:48 cmdline.txt
kumaneko@ubuntu:~/yocto/poky/build$ tar -vvtf tmp/deploy/images/raspberrypi3/rpi-basic-image-raspberrypi3.tar.bz2 | grep tomoyo
-rwxr-xr-x root/root     22900 2016-09-18 14:27 ./usr/lib/libtomoyotools.so.3.0.2
lrwxrwxrwx root/root         0 2016-09-18 15:51 ./usr/lib/libtomoyotools.so.3 -&gt; libtomoyotools.so.3.0.2
drwxr-xr-x root/root         0 2016-09-18 15:51 ./usr/lib/tomoyo/
-rwxr-xr-x root/root      5892 2016-09-18 14:27 ./usr/lib/tomoyo/convert-audit-log
-rw-r--r-- root/root     17987 2016-09-18 14:27 ./usr/lib/tomoyo/COPYING.tomoyo
-rwxr-xr-x root/root     46332 2016-09-18 14:27 ./usr/lib/tomoyo/init_policy
-rwxr-xr-x root/root      4148 2016-09-18 14:27 ./usr/lib/tomoyo/audit-exec-param
-rwxr-xr-x root/root      9348 2016-09-18 14:27 ./usr/lib/tomoyo/tomoyo-editpolicy-agent
-rwxr-xr-x root/root      5304 2016-09-18 14:27 ./usr/lib/tomoyo/convert-exec-param
-rw-r--r-- root/root      1694 2016-09-18 14:27 ./usr/lib/tomoyo/README.tomoyo
-rwxr-xr-x root/root      3648 2016-09-18 14:27 ./usr/sbin/tomoyo-sortpolicy
-rwxr-xr-x root/root     12608 2016-09-18 14:27 ./usr/sbin/tomoyo-queryd
-rwxr-xr-x root/root      8420 2016-09-18 14:27 ./usr/sbin/tomoyo-savepolicy
-rwxr-xr-x root/root      8096 2016-09-18 14:27 ./usr/sbin/tomoyo-loadpolicy
-rwxr-xr-x root/root      4444 2016-09-18 14:27 ./usr/sbin/tomoyo-selectpolicy
-rwxr-xr-x root/root      5456 2016-09-18 14:27 ./usr/sbin/tomoyo-pstree
-rwxr-xr-x root/root     13268 2016-09-18 14:27 ./usr/sbin/tomoyo-checkpolicy
-rwxr-xr-x root/root      4688 2016-09-18 14:27 ./usr/sbin/tomoyo-domainmatch
-rwxr-xr-x root/root      5180 2016-09-18 14:27 ./usr/sbin/tomoyo-findtemp
-rwxr-xr-x root/root     10068 2016-09-18 14:27 ./usr/sbin/tomoyo-patternize
-rwxr-xr-x root/root     10480 2016-09-18 14:27 ./usr/sbin/tomoyo-auditd
-rwxr-xr-x root/root      4768 2016-09-18 14:27 ./usr/sbin/tomoyo-diffpolicy
-rwxr-xr-x root/root      5520 2016-09-18 14:27 ./usr/sbin/tomoyo-setlevel
-rwxr-xr-x root/root      5916 2016-09-18 14:27 ./usr/sbin/tomoyo-setprofile
-rwxr-xr-x root/root      8784 2016-09-18 14:27 ./usr/sbin/tomoyo-notifyd
-rwxr-xr-x root/root     85180 2016-09-18 14:27 ./usr/sbin/tomoyo-editpolicy
-rwx------ root/root     10676 2016-09-18 14:27 ./sbin/tomoyo-init
</pre>

<p>MACHINE = "qemuarm" を指定した場合は、以下のようになります。</p>

<pre class="command">
kumaneko@ubuntu:~/yocto/poky/build$ bitbake rpi-basic-image
Parsing recipes: 100% |######################################################################################################################################################################################################| Time: 00:01:01
Parsing of 920 .bb files complete (0 cached, 920 parsed). 1351 targets, 71 skipped, 0 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies

Build Configuration:
BB_VERSION        = "1.28.0"
BUILD_SYS         = "x86_64-linux"
NATIVELSBSTRING   = "Ubuntu-14.04"
TARGET_SYS        = "arm-poky-linux-gnueabi"
MACHINE           = "qemuarm"
DISTRO            = "poky"
DISTRO_VERSION    = "2.0.2"
TUNE_FEATURES     = "arm armv5 thumb dsp"
TARGET_FPU        = "soft"
meta
meta-yocto
meta-yocto-bsp    = "jethro:37eb21b2b1d5977a028a448e52551607fae99bf7"
meta-raspberrypi  = "master:4c02c7ce07121c2f5367204445f93199d828bb10"
meta-tomoyo       = "jethro:37eb21b2b1d5977a028a448e52551607fae99bf7"

NOTE: Preparing RunQueue
NOTE: Executing SetScene Tasks
NOTE: Executing RunQueue Tasks
NOTE: Tasks Summary: Attempted 2089 tasks of which 786 didn't need to be rerun and all succeeded.
kumaneko@ubuntu:~/yocto/poky/build$ ls -lrtR tmp/deploy/images/
tmp/deploy/images/:
total 4
drwxrwxr-x 2 kumaneko kumaneko 4096 Sep 18 17:26 qemuarm

tmp/deploy/images/qemuarm:
total 49892
-rw-r--r-- 2 kumaneko kumaneko  4521120 Sep 18 17:09 zImage--4.1.15+git0+46bb64d605_cf760f381c-r0-qemuarm-20160918073412.bin
-rw-rw-r-- 2 kumaneko kumaneko 30194130 Sep 18 17:09 modules--4.1.15+git0+46bb64d605_cf760f381c-r0-qemuarm-20160918073412.tgz
lrwxrwxrwx 1 kumaneko kumaneko       71 Sep 18 17:09 zImage-qemuarm.bin -&gt; zImage--4.1.15+git0+46bb64d605_cf760f381c-r0-qemuarm-20160918073412.bin
lrwxrwxrwx 1 kumaneko kumaneko       71 Sep 18 17:09 zImage -&gt; zImage--4.1.15+git0+46bb64d605_cf760f381c-r0-qemuarm-20160918073412.bin
lrwxrwxrwx 1 kumaneko kumaneko       72 Sep 18 17:09 modules-qemuarm.tgz -&gt; modules--4.1.15+git0+46bb64d605_cf760f381c-r0-qemuarm-20160918073412.tgz
-rw-r--r-- 2 kumaneko kumaneko      294 Sep 18 17:26 README_-_DO_NOT_DELETE_FILES_IN_THIS_DIRECTORY.txt
-rw-r--r-- 1 kumaneko kumaneko    17367 Sep 18 17:26 rpi-basic-image-qemuarm-20160918073412.rootfs.manifest
-rw-r--r-- 1 kumaneko kumaneko  4124961 Sep 18 17:26 rpi-basic-image-qemuarm-20160918073412.rootfs.tar.bz2
-rw-r--r-- 1 kumaneko kumaneko 16752640 Sep 18 17:26 rpi-basic-image-qemuarm-20160918073412.rootfs.ext4
lrwxrwxrwx 1 kumaneko kumaneko       53 Sep 18 17:26 rpi-basic-image-qemuarm.tar.bz2 -&gt; rpi-basic-image-qemuarm-20160918073412.rootfs.tar.bz2
lrwxrwxrwx 1 kumaneko kumaneko       54 Sep 18 17:26 rpi-basic-image-qemuarm.manifest -&gt; rpi-basic-image-qemuarm-20160918073412.rootfs.manifest
lrwxrwxrwx 1 kumaneko kumaneko       50 Sep 18 17:26 rpi-basic-image-qemuarm.ext4 -&gt; rpi-basic-image-qemuarm-20160918073412.rootfs.ext4
kumaneko@ubuntu:~/yocto/poky/build$ tar -vvtf tmp/deploy/images/qemuarm/rpi-basic-image-qemuarm.tar.bz2 | grep tomoyo
-rwxr-xr-x root/root     23048 2016-09-18 17:10 ./usr/lib/libtomoyotools.so.3.0.2
lrwxrwxrwx root/root         0 2016-09-18 17:26 ./usr/lib/libtomoyotools.so.3 -&gt; libtomoyotools.so.3.0.2
drwxr-xr-x root/root         0 2016-09-18 17:26 ./usr/lib/tomoyo/
-rwxr-xr-x root/root      5880 2016-09-18 17:10 ./usr/lib/tomoyo/convert-audit-log
-rw-r--r-- root/root     17987 2016-09-18 17:10 ./usr/lib/tomoyo/COPYING.tomoyo
-rwxr-xr-x root/root     46008 2016-09-18 17:10 ./usr/lib/tomoyo/init_policy
-rwxr-xr-x root/root      4136 2016-09-18 17:10 ./usr/lib/tomoyo/audit-exec-param
-rwxr-xr-x root/root      9332 2016-09-18 17:10 ./usr/lib/tomoyo/tomoyo-editpolicy-agent
-rwxr-xr-x root/root      5248 2016-09-18 17:10 ./usr/lib/tomoyo/convert-exec-param
-rw-r--r-- root/root      1694 2016-09-18 17:10 ./usr/lib/tomoyo/README.tomoyo
-rwxr-xr-x root/root      3628 2016-09-18 17:10 ./usr/sbin/tomoyo-sortpolicy
-rwxr-xr-x root/root     12632 2016-09-18 17:10 ./usr/sbin/tomoyo-queryd
-rwxr-xr-x root/root      8400 2016-09-18 17:10 ./usr/sbin/tomoyo-savepolicy
-rwxr-xr-x root/root      8016 2016-09-18 17:10 ./usr/sbin/tomoyo-loadpolicy
-rwxr-xr-x root/root      4412 2016-09-18 17:10 ./usr/sbin/tomoyo-selectpolicy
-rwxr-xr-x root/root      5396 2016-09-18 17:10 ./usr/sbin/tomoyo-pstree
-rwxr-xr-x root/root     13236 2016-09-18 17:10 ./usr/sbin/tomoyo-checkpolicy
-rwxr-xr-x root/root      4664 2016-09-18 17:10 ./usr/sbin/tomoyo-domainmatch
-rwxr-xr-x root/root      5176 2016-09-18 17:10 ./usr/sbin/tomoyo-findtemp
-rwxr-xr-x root/root     10060 2016-09-18 17:10 ./usr/sbin/tomoyo-patternize
-rwxr-xr-x root/root     10356 2016-09-18 17:10 ./usr/sbin/tomoyo-auditd
-rwxr-xr-x root/root      4732 2016-09-18 17:10 ./usr/sbin/tomoyo-diffpolicy
-rwxr-xr-x root/root      5480 2016-09-18 17:10 ./usr/sbin/tomoyo-setlevel
-rwxr-xr-x root/root      5904 2016-09-18 17:10 ./usr/sbin/tomoyo-setprofile
-rwxr-xr-x root/root      8680 2016-09-18 17:10 ./usr/sbin/tomoyo-notifyd
-rwxr-xr-x root/root     85172 2016-09-18 17:10 ./usr/sbin/tomoyo-editpolicy
-rwx------ root/root     10456 2016-09-18 17:10 ./sbin/tomoyo-init
</pre>

<h3><a name="step7">ステップ７：エミュレータから実行する（ Qemu for ARM の場合のみ）</a></h3>

<p>conf/local.conf で MACHINE = "qemuarm" を指定した場合、ビルドを行ったディレクトリから以下のコマンドラインを実行することで実行できます。</p>

<pre class="command">
kumaneko@ubuntu:~/yocto/poky/build$ runqemu qemuarm

Continuing with the following parameters:
KERNEL: [/home/kumaneko/yocto/poky/build/tmp/deploy/images/qemuarm/zImage-qemuarm.bin]
ROOTFS: [/home/kumaneko/yocto/poky/build/tmp/deploy/images/qemuarm/rpi-basic-image-qemuarm-20160918073412.rootfs.ext4]
FSTYPE: [ext4]
Setting up tap interface under sudo
[sudo] password for kumaneko:
Acquiring lockfile for tap0...
Running qemu-system-arm...
/home/kumaneko/yocto/poky/build/tmp/sysroots/x86_64-linux/usr/bin/qemu-system-arm -kernel /home/kumaneko/yocto/poky/build/tmp/deploy/images/qemuarm/zImage-qemuarm.bin -net nic,model=virtio -net tap,vlan=0,ifname=tap0,script=no,downscript=no -M versatilepb -drive file=/home/kumaneko/yocto/poky/build/tmp/deploy/images/qemuarm/rpi-basic-image-qemuarm-20160918073412.rootfs.ext4,if=virtio,format=raw -no-reboot -show-cursor -usb -usbdevice wacom-tablet -no-reboot -m 128 -serial mon:vc -serial null --append "root=/dev/vda rw console=ttyAMA0,115200 console=tty ip=192.168.7.2::192.168.7.1:255.255.255.0 mem=128M highres=off rootfstype=ext4 "
qemu-system-arm: unable to init msix vectors to 3
qemu-system-arm: -drive file=/home/kumaneko/yocto/poky/build/tmp/deploy/images/qemuarm/rpi-basic-image-qemuarm-20160918073412.rootfs.ext4,if=virtio,format=raw: unable to init msix vectors to 2
</pre>

<h3><a name="step8">ステップ８：マイクロＳＤカードにコピーする（ Raspberry Pi 2 または Raspberry Pi 3 の場合のみ）</a></h3>

<p>GNOME デスクトップ環境にログインしている場合、マイクロＳＤカードを挿入するだけで自動的にマウントされてしまうため、ビルドしたイメージのコピーが正常に行われなくなる（書き込まれたデータが壊れてしまう）原因になります。以下のコマンドを実行することで、自動的にマウントされるのを防ぐことができます。</p>

<pre class="command">
kumaneko@ubuntu:~/yocto/poky/build$ /usr/bin/gsettings set org.gnome.desktop.media-handling automount false
</pre>

<p>Raspberry Pi で使用するマイクロＳＤカードのデバイスファイル名を fdisk コマンドを使って確認します。</p>

<p>まず、ホスト環境のドライブに差し込む前に、 fdisk コマンドを実行します。</p>

<pre class="command">
kumaneko@ubuntu:~/yocto/poky/build$ sudo fdisk -l
[sudo] password for kumaneko:

Disk /dev/sda: 107.4 GB, 107374182400 bytes
255 heads, 63 sectors/track, 13054 cylinders, total 209715200 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x00036a53

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1   *        2048      499711      248832   83  Linux
/dev/sda2          501758   209713151   104605697    5  Extended
/dev/sda5          501760   209713151   104605696   8e  Linux LVM

Disk /dev/mapper/ubuntu--vg-root: 102.8 GB, 102802391040 bytes
255 heads, 63 sectors/track, 12498 cylinders, total 200785920 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x00000000

Disk /dev/mapper/ubuntu--vg-root doesn't contain a valid partition table

Disk /dev/mapper/ubuntu--vg-swap_1: 4290 MB, 4290772992 bytes
255 heads, 63 sectors/track, 521 cylinders, total 8380416 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x00000000

Disk /dev/mapper/ubuntu--vg-swap_1 doesn't contain a valid partition table
</pre>

<p>次に、マイクロＳＤカードを、ホスト環境のドライブに差し込んでから再度 fdisk コマンドを実行します。</p>

<pre class="command">
kumaneko@ubuntu:~/yocto/poky/build$ sudo fdisk -l

Disk /dev/sda: 107.4 GB, 107374182400 bytes
255 heads, 63 sectors/track, 13054 cylinders, total 209715200 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x00036a53

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1   *        2048      499711      248832   83  Linux
/dev/sda2          501758   209713151   104605697    5  Extended
/dev/sda5          501760   209713151   104605696   8e  Linux LVM

Disk /dev/mapper/ubuntu--vg-root: 102.8 GB, 102802391040 bytes
255 heads, 63 sectors/track, 12498 cylinders, total 200785920 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x00000000

Disk /dev/mapper/ubuntu--vg-root doesn't contain a valid partition table

Disk /dev/mapper/ubuntu--vg-swap_1: 4290 MB, 4290772992 bytes
255 heads, 63 sectors/track, 521 cylinders, total 8380416 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x00000000

Disk /dev/mapper/ubuntu--vg-swap_1 doesn't contain a valid partition table

Disk /dev/sdb: 15.9 GB, 15854469120 bytes
4 heads, 32 sectors/track, 241920 cylinders, total 30965760 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0xe113be4e

   Device Boot      Start         End      Blocks   Id  System
/dev/sdb1   *        8192       90111       40960    c  W95 FAT32 (LBA)
/dev/sdb2           90112     1081343      495616   83  Linux
</pre>

<p>差し込むことで認識されたデバイスファイル名が、マイクロＳＤカードのデバイスファイル名です。このページでは、以降、ホスト環境に於けるマイクロＳＤカードのデバイスファイル名が /dev/sdb であるものと仮定します。</p>

<p>もし、マイクロＳＤカードがマウントされている場合、手動でアンマウントを行ってください。デスクトップの「 Eject 」ボタンを使うと、アンマウントと同時にデバイスファイルも消滅してしまうため、 umount コマンドを使用するようにしてください。</p>

<pre class="command">
kumaneko@ubuntu:~/yocto/poky/build$ sudo umount /dev/sdb*
</pre>

<p>マイクロＳＤカードへ書き込みを行います。 rpi-basic-image- で始まり .rpi-sdimg で終わるファイルがＳＤカードに書き込む形式のイメージファイルです。例えば conf/local.conf で MACHINE = "raspberrypi2" を指定してビルドした場合、以下のように指定します。</p>

<pre class="command">
kumaneko@ubuntu:~/yocto/poky/build$ sudo sh -c 'cat tmp/deploy/images/raspberrypi2/rpi-basic-image-raspberrypi2.rpi-sdimg &gt; /dev/sdb'
kumaneko@ubuntu:~/yocto/poky/build$ sync
kumaneko@ubuntu:~/yocto/poky/build$ sudo eject /dev/sdb
</pre>

<p>eject コマンドが完了してからマイクロＳＤカードを抜いてください。</p>

<p>正常に書き込まれたかどうかを確認するために、再度差し込み、 fsck コマンドを実行します。ファイルシステムにエラーが無いことを確認してください。</p>

<pre class="command">
kumaneko@ubuntu:~/yocto/poky/build$ sudo fdisk -l /dev/sdb

Disk /dev/sdb: 15.9 GB, 15854469120 bytes
4 heads, 32 sectors/track, 241920 cylinders, total 30965760 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x63c93b11

   Device Boot      Start         End      Blocks   Id  System
/dev/sdb1   *        8192       90111       40960    c  W95 FAT32 (LBA)
/dev/sdb2           90112      270335       90112   83  Linux
kumaneko@ubuntu:~/yocto/poky/build$ sudo fsck -fn /dev/sdb1
fsck from util-linux 2.20.1
fsck.fat 3.0.26 (2014-03-07)
/dev/sdb1: 35 files, 10482/20431 clusters
kumaneko@ubuntu:~/yocto/poky/build$ sudo fsck -fn /dev/sdb2
fsck from util-linux 2.20.1
e2fsck 1.42.9 (4-Feb-2014)
Pass 1: Checking inodes, blocks, and sizes
Pass 2: Checking directory structure
Pass 3: Checking directory connectivity
Pass 4: Checking reference counts
Pass 5: Checking group summary information
/dev/sdb2: 2619/22528 files (0.6% non-contiguous), 71490/90112 blocks
kumaneko@ubuntu:~/yocto/poky/build$ sudo eject /dev/sdb
</pre>

<p>eject コマンドが完了してからマイクロＳＤカードを抜いてください。</p>

<p>マイクロＳＤカードを Raspberry Pi 2 または Raspberry Pi 3 に挿入し、電源を入れてください。</p>

<h3><a name="step9">ステップ９： TOMOYO Linux の初期設定を行う</a></h3>

<p>root ユーザでログイン後、以下のように init_policy コマンドを実行することでポリシーの初期化を行います。</p>

<pre class="command">
root@raspberrypi2:~# /usr/lib/tomoyo/init_policy
Creating policy directory... OK
Creating configuration directory... OK
Creating exception policy... OK.
Creating domain policy... OK.
Creating manager policy... OK.
Creating default profile... OK.
Creating stat policy... OK.
Creating configuration file for tomoyo-editpolicy ... OK.
Creating configuration file for tomoyo-auditd ... OK.
Creating configuration file for tomoyo-patternize ... OK.
Creating configuration file for tomoyo-notifyd ... OK.
</pre>

<p>その後、 TOMOYO Linux の使いたい機能や適用したい範囲に応じて、ポリシーの見直しを行います。</p>

<pre class="command">
root@raspberrypi2:~# cat /etc/tomoyo/profile.conf
PROFILE_VERSION=20110903
0-COMMENT=-----Disabled Mode-----
0-PREFERENCE={ max_audit_log=1024 max_learning_entry=2048 }
0-CONFIG={ mode=disabled grant_log=no reject_log=yes }
1-COMMENT=-----Learning Mode-----
1-PREFERENCE={ max_audit_log=1024 max_learning_entry=2048 }
1-CONFIG={ mode=learning grant_log=no reject_log=yes }
2-COMMENT=-----Permissive Mode-----
2-PREFERENCE={ max_audit_log=1024 max_learning_entry=2048 }
2-CONFIG={ mode=permissive grant_log=no reject_log=yes }
3-COMMENT=-----Enforcing Mode-----
3-PREFERENCE={ max_audit_log=1024 max_learning_entry=2048 }
3-CONFIG={ mode=enforcing grant_log=no reject_log=yes }
root@raspberrypi2:~# cat /etc/tomoyo/domain_policy.conf
&lt;kernel&gt;
use_profile 0
use_group 0
</pre>

<p>domain_policy.conf の use_profile 0 という部分は、 profile.conf の 0-CONFIG={ mode=disabled grant_log=no reject_log=yes } という指定（ドメイン遷移以外は何もしない指定）が使われます。</p>

<p>use_profile 0 という部分を use_profile 1 に書き換えると、 1-CONFIG={ mode=learning grant_log=no reject_log=yes } という指定（ドメイン遷移に加えてアクセス要求をポリシーとして学習する指定）が使われるようになります。</p>

<p>詳細は、<a href="index.html.ja">通常の環境向けの手順</a>を参照してください。</p>

<h4><a name="tips_save_on_shutdown">Ｔｉｐｓ：シャットダウン直前までのポリシーを保存したい場合</a></h4>

<p>tomoyo-savepolicy コマンドは tomoyo-savepolicy コマンドが実行された時点のポリシーしか保存できません。そのため、シャットダウン直前にポリシーを保存したい場合、以下のように /etc/init.d/halt および /etc/init.d/reboot 内で tomoyo-savepolicy コマンドを実行する必要があります。</p>

<pre class="command">
root@raspberrypi2:~# cp -p /etc/init.d/halt /tmp/halt
root@raspberrypi2:~# cp -p /etc/init.d/reboot /tmp/reboot
root@raspberrypi2:~# vi /etc/init.d/halt
root@raspberrypi2:~# vi /etc/init.d/reboot
root@raspberrypi2:~# diff -u /tmp/halt /etc/init.d/halt
--- /tmp/halt
+++ /etc/init.d/halt
@@ -24,6 +24,13 @@
        hddown=""
 fi

+halt --help &gt; /dev/null 2&gt;&amp;1
+mount -o remount,ro none /
+mount -o remount,rw none /
+mount -t sysfs none /sys/
+/usr/sbin/tomoyo-savepolicy
+/usr/sbin/tomoyo-savepolicy
+mount -o remount,ro none /
 halt -d -f -p $hddown

 : exit 0
root@raspberrypi2:~# diff -u /tmp/reboot /etc/init.d/reboot
--- /tmp/reboot
+++ /etc/init.d/reboot
@@ -12,4 +12,11 @@
 PATH=/sbin:/bin:/usr/sbin:/usr/bin

 echo -n "Rebooting... "
+reboot --help &gt; /dev/null 2&gt;&amp;1
+mount -o remount,ro none /
+mount -o remount,rw none /
+mount -t sysfs none /sys/
+/usr/sbin/tomoyo-savepolicy
+/usr/sbin/tomoyo-savepolicy
+mount -o remount,ro none /
 reboot -d -f
</pre>

<p>tomoyo-savepolicy コマンドが実行されるタイミングでは /sys/kernel/security/ に securityfs をマウントするために使用される /sys/ が既にアンマウントされているため、明示的に sysfs を /sys/ にマウントするか /sys/kernel/security/ ディレクトリを作成する必要があります。また、 /etc/tomoyo/ ディレクトリへの書き込みをするために使用される / も既に読み込み専用モードになってしまっているため、明示的に読み書きモードに変更する必要があります。</p>

<p>（ / を読み込み専用モードに戻すための） mount コマンド、（システムを停止させるための） halt コマンドおよび（システムを再起動させるための） reboot コマンドが必要とするアクセス許可を学習させるために、それぞれのコマンドを tomoyo-savepolicy コマンドの実行前に実行しています。同様に、 tomoyo-savepolicy コマンド自身が必要とするアクセス許可を学習させるために、 tomoyo-savepolicy コマンドを２回実行しています。</p>

<h4><a name="tips_manage_remotely">Ｔｉｐｓ：リモートからポリシーの操作ができるようにしたい場合</a></h4>

<p>リモートからポリシーの操作ができるようにしたい場合、 tomoyo-editpolicy-agent を使用することができます。 tomoyo-editpolicy-agent が自動的に起動されるようにするには、 /etc/init.d/tomoyo-editpolicy-agent を作成します。</p>

<pre class="command">
root@raspberrypi2:~# echo '#! /bin/sh' &gt; /etc/init.d/tomoyo-editpolicy-agent
root@raspberrypi2:~# echo 'exec /usr/lib/tomoyo/tomoyo-editpolicy-agent 0.0.0.0:10000 &amp;' &gt;&gt; /etc/init.d/tomoyo-editpolicy-agent
root@raspberrypi2:~# chmod 700 /etc/init.d/tomoyo-editpolicy-agent
</pre>

<p>/etc/init.d/tomoyo-editpolicy-agent が起動時に自動的に起動されるようにします。</p>

<pre class="command">
root@raspberrypi2:~# ln -s ../init.d/tomoyo-editpolicy-agent /etc/rcS.d/S60tomoyo-editpolicy-agent
</pre>

<p>ポリシーの変更を許可するプログラムの一覧である /etc/tomoyo/manager.conf に /usr/lib/tomoyo/tomoyo-editpolicy-agent を追加します。</p>

<pre class="command">
root@raspberrypi2:~# echo /usr/lib/tomoyo/tomoyo-editpolicy-agent &gt;&gt; /etc/tomoyo/manager.conf
</pre>

<p>システムを再起動することにより、 tomoyo-editpolicy-agent を開始します。再起動を伴わずに手動で開始したい場合は以下のように実行します。</p>

<pre class="command">
root@raspberrypi2:~# echo /usr/lib/tomoyo/tomoyo-editpolicy-agent | tomoyo-loadpolicy -m
root@raspberrypi2:~# /etc/init.d/tomoyo-editpolicy-agent
</pre>

<p>Raspberry Pi 2 のＩＰアドレスを例えば 192.168.1.3 とした場合、ホスト側から</p>

<pre class="command">
$ /usr/sbin/tomoyo-editpolicy 192.168.1.3:10000
</pre>

<p>のように実行することにより、ホスト側からポリシーの編集を行うことができます。同様に、ホスト側から</p>

<pre class="command">
$ /usr/sbin/tomoyo-auditd 192.168.1.3:10000
</pre>

<p>のように実行することにより、 Raspberry Pi 2 で生成されたアクセスログをホスト側に保存することができます。その他にも、</p>

<pre class="command">
$ /usr/sbin/tomoyo-savepolicy 192.168.1.3:10000 -d &gt; /tmp/domain_policy.conf
</pre>

<p>のように実行することにより、 Raspberry Pi 2 側の /sys/kernel/security/tomoyo/domain_policy の内容をホスト側の /tmp/domain_policy.conf に保存することができ、</p>

<pre class="command">
$ /usr/sbin/tomoyo-loadpolicy 192.168.1.3:10000 -d &lt; /tmp/domain_policy.conf
</pre>

<p>のように実行することにより、ホスト側の /tmp/domain_policy.conf の内容を Raspberry Pi 2 側の /sys/kernel/security/tomoyo/domain_policy に追加することができます。</p>

</div><!-- regular-content -->

</div><!-- content -->

<div id="navfooter">
<hr>
<table>
<tr>
<td class="docs-previous">
</td>
<td class="docs-index">
<a href="index.html.ja">目次</a>
</td>
<td class="docs-next">
</td>
</tr>
<tr>
<td class="docs-previous-description">
</td>
<td class="docs-home">
</td>
<td class="docs-next-description">
</td>
</tr>
</table>
</div>

<div id="footer">
<p class="language">Go to <a href="yocto-arm.html.en">English page</a>.</p>
<p class="timestamp">Last modified: $Date$</p>
<p class="trademark">Linux&reg; は世界各国における Linus Torvalds の登録商標です。 TOMOYO&reg; は<a href="http://www.nttdata.co.jp/">株式会社ＮＴＴデータ</a>の登録商標です。</p>
<p><a href="http://osdn.jp/"><img src="http://osdn.jp/sflogo.php?group_id=1973" width="96" height="31" alt="sflogo.php" title="osdn.jp"></a></p>
</div>

</body>
</html>
