<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en-US">
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="content-style-type" content="text/css">
<link rel="stylesheet" href="../media/tomoyolinux.css" media="all" type="text/css">
<title>TOMOYO Linux 2.3.x : The Official Guide : Chapter 6</title>
</head>

<body>

<div id="titlebar">
<a href="../index.html.en"><img src="../media/tomoyotitle.png" alt="tomoyotitle.png" width="320" height="40" border="0" align="left" title="TOMOYO Linux"></a>
</div>

<div id="navbar" class="tomoyo-documentation">
<ul id="navbarlist">
<li id="tomoyo-home"><a href="../index.html.en" title="TOMOYO Linux Home Page">Home</a></li>
<li id="tomoyo-about"><a href="../about.html.en" title="About TOMOYO Linux">About</a></li>
<li id="tomoyo-download"><a href="../download.html.en" title="Get TOMOYO Linux">Download</a></li>
<li id="tomoyo-changelogs"><a href="../changelogs.html.en" title="TOMOYO Linux ChangeLogs">ChangeLogs</a></li>
<li id="tomoyo-documentation"><a href="../documentation.html.en" title="Official Documentation">Documentation</a></li>
<li id="tomoyo-support"><a href="../support.html.en" title="Support information">Support</a></li>
<li id="tomoyo-links"><a href="../links.html.en" title="Links">Links</a></li>
</ul>
<ul id="switch-language">
<li id="tomoyo-switch-language"><a href="chapter-6.html.ja" title="Go to Japanese page">Japanese page</a></li>
</ul>
</div>

<div id="content">

<div id="documentation">

<div class="navheader">
<p><a href="chapter-5.html.en">&lt;Prev&gt;</a> <a href="index.html.en">&lt;Index&gt;</a> <a href="chapter-7.html.en">&lt;Next&gt;</a></p>
</div>

<h2>Chapter 6: How do I develop policy?</h2>

<h3><a name="6.1">6.1. Patterning temporary files</a></h3>

<p>A particular domain may require many different access permissions to many different resources. Since "Enforcing Mode" allows access to only resources explicitly defined, it is important to cover all necessary resources. To do this, permissions can be patterned. A patterned permission will allow multiple domain policy entries to be shortened into a single entry.</p>

<p>This is particularly important for temporary files due to the variety of single-use pathnames involved. They can either be handled in the manner described below, or handled interactively using the policy editor. For details on handling permissions interactively, see how to <a href="tool-editpolicy.html.en#redundant">Remove redundant entries</a>.</p>

<p>Use <code>tomoyo-findtemp</code> to find pathnames from domain policy that are potentially temporary files:</p>

<pre class="command">
# /usr/sbin/tomoyo-findtemp &lt; /sys/kernel/security/tomoyo/domain_policy
</pre>
<pre class="output">
/etc/mtab.tmp
/etc/mtab~
/etc/mtab~2302
/etc/mtab~2328
/etc/mtab~2329
/etc/mtab~2330
/etc/mtab~2331
/etc/mtab~2332
/etc/mtab~2339
/etc/mtab~2383
/halt
/selinux/disable
/selinux/enforce
/selinux/policyvers
/tmp/sh-thd-1163110572
/tmp/sh-thd-1163113704
/var/cache/samba/browse.dat.
/var/lib/nfs/etab.tmp
/var/lib/nfs/xtab.tmp
/var/lock/mrtg/mrtg_l
</pre>

<p>In the example above, "/etc/mtab~numeric" and "/tmp/sh-thd-numeric" can be considered to be temporary files. Thus, patterns can be made for these pathnames.</p>

<p>First, the type of pattern must be considered. The numeric strings here appear to be decimal digits. Thus, the "<strong>\$</strong>" pattern which matches one or more repetitions of decimal digits can be used. See <a href="policy-specification/expression-rules.html.en#wildcard">Wildcard expression rules</a> for a list of possible wildcards.</p>

<p>Use <code>tomoyo-patternize</code> to replace all occurrences of "/etc/mtab~numeric" and "/tmp/sh-thd-numeric" in the domain policy with "/etc/mtab~\$" and "/tmp/sh-thd-\$" respectively:</p>

<pre class="command">
# /usr/sbin/tomoyo-savepolicy -d | /usr/sbin/tomoyo-patternize '/etc/mtab~\$' '/tmp/sh-thd-\$' | /usr/sbin/tomoyo-loadpolicy -d
</pre>

<p>If preferred, these patterns can instead be managed in exception policy so that "Learning Mode" will append these pathnames using these patterns:</p>

<pre class="command">
# echo 'file_pattern /etc/mtab~\$' | /usr/sbin/tomoyo-loadpolicy -e
# echo 'file_pattern /tmp/sh-thd-\$' | /usr/sbin/tomoyo-loadpolicy -e
</pre>

<h3><a name="6.2">6.2. Patterning file access permissions</a></h3>

<p>Access permissions can be patterned to accommodate for files that are not necessarily accessed in "Learning Mode". For example, the domain policy can be changed to accommodate for web server contents:</p>

<div class="simple-table">
<table>
<tr>
<th>
<p>Before</p>
</th>
<th>
<p>After</p>
</th>
</tr>
<tr>
<td>
<p>&lt;kernel&gt; /usr/sbin/httpd</p>
<br>
<p>allow_read /var/www/html/index.html</p>
<p>allow_read /var/www/html/alice/index.html</p>
<p>allow_read /var/www/html/alice/page1.html</p>
<p>allow_read /var/www/html/alice/page2.html</p>
<p>allow_read /var/www/html/alice/image1.jpg</p>
<p>allow_read /var/www/html/alice/image2.jpg</p>
<p>allow_read /var/www/html/alice/archive/page1.html</p>
<p>allow_read /var/www/html/alice/archive/image1.jpg</p>
<p>allow_read /var/www/html/alice/archive/page2.html</p>
<p>allow_read /var/www/html/alice/archive/image2.jpg</p>
<p>allow_read /var/www/html/bob/index.html</p>
<p>allow_read /var/www/html/bob/page1.html</p>
<p>allow_read /var/www/html/bob/page2.html</p>
<p>allow_read /var/www/html/bob/image1.jpg</p>
<p>allow_read /var/www/html/bob/image2.jpg</p>
<p>allow_read /var/www/html/bob/archive/page1.html</p>
<p>allow_read /var/www/html/bob/archive/image1.jpg</p>
<p>allow_read /var/www/html/bob/archive/page2.html</p>
<p>allow_read /var/www/html/bob/archive/image2.jpg</p>
</td>
<td>
<p>&lt;kernel&gt; /usr/sbin/httpd</p>
<br>
<p>allow_read /var/www/html/\*.html</p>
<p>allow_read /var/www/html/\{\*\}/\*.html</p>
<p>allow_read /var/www/html/\{\*\}/\*.jpg</p>
</td>
</tr>
</table>
</div>

<p>Domain policy can be further simplified by placing directives in the exception policy, such as:</p>

<pre>
path_group WEB-CONTENTS /var/www/html/\*.html
path_group WEB-CONTENTS /var/www/html/\{\*\}/\*.html
path_group WEB-CONTENTS /var/www/html/\{\*\}/\*.jpg
</pre>

<p>The following can then be defined in domain policy:</p>

<pre>
&lt;kernel&gt; /usr/sbin/httpd

allow_read @WEB-CONTENTS
</pre>

<h3><a name="6.3">6.3. Patterning numeric permissions</a></h3>

<p>Patterns can be used for numeric parameters such as the creation mode of a file.</p>

<p>The following domain policy example permits the domain "&lt;kernel&gt; /sbin/init" to use any ioctl requests for /dev/console:</p>

<div class="simple-table">
<table>
<tr>
<th>
<p>Before</p>
</th>
<th>
<p>After</p>
</th>
</tr>
<tr>
<td>
<p>&lt;kernel&gt; /sbin/init</p>
<br>
<p>allow_ioctl /dev/console 0x5401</p>
<p>allow_ioctl /dev/console 0x5402</p>
<p>allow_ioctl /dev/console 0x540B</p>
<p>allow_ioctl /dev/console 0x540E</p>
<p>allow_ioctl /dev/console 0x540F</p>
</td>
<td>
<p>&lt;kernel&gt; /sbin/init</p>
<br>
<p>allow_ioctl /dev/console 0-0xFFFFFFFF</p>
</td>
</tr>
</table>
</div>

<p>Domain policy can be further simplified by placing directives in the exception policy, such as:</p>

<pre>
number_group ANY_NUMBER 0-0xFFFFFFFF
</pre>

<p>The following can then be defined in domain policy:</p>

<pre>
&lt;kernel&gt; /sbin/init

allow_ioctl /dev/console @ANY_NUMBER
</pre>

<h3><a name="6.4">6.4. Reviewing gathered permissions</a></h3>

<p>Once you think you have done everything you want to allow Apache to do, run the policy editor and change the profile number to 2.</p>

<p>Note that Apache may have executed some external programs (e.g. <code>/bin/sh</code>, <code>/usr/bin/perl</code>, <code>/usr/lib/sendmail</code>) and thus has some descendent domains. Be sure to change the profile number for all descendent domains as well.</p>

<img src="media/editpolicy-httpd-profile2.png" alt="editpolicy-httpd-profile2.png" title="Apache executed external programs." width="675" height="375">

<p>Quit the policy editor and continue using Apache:</p>

<img src="media/operation-permissive.png" alt="operation-permissive.png" title="Check that Apache has appropriate permissions." width="575" height="475">

<p>If the profile is configured as "PREFERENCE::permissive={ verbose=yes }" (this is default), the "WARNING:" messages will be printed to the console when policy violation occurs:</p>

<p><img src="media/permissive-warning.png" alt="permissive-warning.png" title="Warning messages are printed." width="720" height="400"></p>

</div><!-- documentation -->

</div><!-- content -->

<div id="navfooter">
<hr>
<table>
<tr>
<td class="docs-previous">
<a href="chapter-5.html.en">Prev</a>
</td>
<td class="docs-index">
<a href="index.html.en">Index</a>
</td>
<td class="docs-next">
<a href="chapter-7.html.en">Next</a>
</td>
</tr>
<tr>
<td class="docs-previous-description">
<p>Chapter 5: How do I manage domains?</p>
</td>
<td class="docs-home">
</td>
<td class="docs-next-description">
<p>Chapter 7: How do I enforce policy?</p>
</td>
</tr>
</table>
</div>

<div id="footer">
<p class="language">Go to <a href="chapter-6.html.ja">Japanese page</a>.</p>
<p class="timestamp">Last modified: $Date$</p>
<p class="trademark">Linux&reg; is a registered trademark of Linus Torvalds world-wide. TOMOYO&reg; is a registered trademark of <a href="http://www.nttdata.co.jp/en/">NTT DATA Corporation</a>.</p>
<p><a href="http://sourceforge.jp/"><img src="http://sourceforge.jp/sflogo.php?group_id=1973" width="96" height="31" alt="sflogo.php" title="SourceForge.jp"></a></p>
</div>

</body>
</html>
