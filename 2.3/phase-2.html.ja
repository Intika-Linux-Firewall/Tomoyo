<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="ja-JP">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<title>TOMOYO Linux 導入手順書</title>
<link rel="stylesheet" href="http://tomoyo.sourceforge.jp/tomoyo.css" media="all" type="text/css">
</head>
<body>
<p>This page is for TOMOYO 2.3 (for Linux 2.6.36 and later kernels). Please jump to <a href="../2.2/">this page</a> for TOMOYO 2.2 (for Linux 2.6.30 - 2.6.35 kernels).</p>
<p style="text-align:right;"><a href="phase-2.html.en">English Page</a></p>
<p style="text-align:right;">Last modified: $Date$</p>
<h1>第２節： TOMOYO Linux を理解する</h1>

<p style="text-align:center;">目的： TOMOYO Linux の概念を理解し、管理ツールの使い方を習得します。</p>

<hr>

<h2><a name="2.1">ステップ２．１：ドメインを理解する</a></h2>

<p>TOMOYO Linux における管理ツールの中心はポリシーエディタです。このページではポリシーエディタについてクイックスタートガイド（使い始めるのに十分な程度の量）だけを紹介します。より詳細な説明については、<a href="tool-editpolicy.html.ja">ポリシーエディタの使い方</a>を参照してください。</p>

<p>TOMOYO Linux 対応カーネルで起動したら、/etc/tomoyo/ ディレクトリに存在するポリシーを編集するために、 /etc/tomoyo/ というオプションを指定してポリシーエディタを実行してください。</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# /usr/sbin/tomoyo-editpolicy /etc/tomoyo/
</td></tr>
</table>

<p>ポリシーエディタは役割の異なる幾つかの画面を提供しています。デフォルトで表示される画面は Domain Transition Editor です。以下の写真は上記のコマンドを実行後のドメインツリーが表示されています。現時点では &lt;kernel&gt; ドメインだけが定義されています。</p>

<p><img src="editpolicy-domain-list1.png" width="720" height="400"></p>

<p>ポリシーを初期化した直後であるため、 /etc/tomoyo/ ディレクトリに存在するポリシーファイルは空っぽです。 TOMOYO Linux には２つのタイプのポリシーが存在します。１つは現在カーネル内に存在しているポリシーです。もうひとつは /etc/tomoyo/ ディレクトリ内に存在しているポリシーです。複数の版を /etc/tomoyo/ ディレクトリ内に保存することができ、起動時または必要に応じてカーネル内へと読み込むことができます。カーネル内に存在しているポリシーを /etc/tomoyo/ ディレクトリ内に保存する方法については第３節で紹介します。 q キーを押してポリシーエディタを終了してください。</p>

<p>次に、カーネル内に存在しているポリシーを閲覧するために、 /etc/tomoyo/ オプション無しでポリシーエディタを実行してください。</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# /usr/sbin/tomoyo-editpolicy
</td></tr>
</table>

<p>システムが動作するにつれて、 TOMOYO Linux は新しいドメインを作成してこのツリーに追加していきます。上記のコマンドを実行することにより、起動時から現時点までに作成された全てのドメインがドメインツリーとして表示される筈です。</p>

<p><img src="editpolicy-domain-list2.png" width="720" height="400"></p>

<p>TOMOYO Linux における解析／制限はドメインを単位として適用されます。全てのプロセスは１個のドメインに属しており、原則としてプログラムが実行される度に異なるドメインへと遷移します。ドメインの名前はプロセスの実行履歴として連結された文字列です。</p>

<p>例えば、カーネルが属するドメインの名前は <b>&lt;kernel&gt;</b> です。<br>
カーネルから起動された /sbin/init が属するドメインの名前は <b>&lt;kernel&gt; /sbin/init</b> です。<br>
/sbin/init から起動された /etc/rc.d/rc が属するドメインの名前は <b>&lt;kernel&gt; /sbin/init /etc/rc.d/rc</b> です。</p>

<p>この遷移規則の例外については後述します。</p>

<hr>

<h2><a name="2.2">ステップ２．２：プロファイルを理解する</a></h2>

<p>TOMOYO Linux におけるドメインの制限はプロファイルを割り当てることにより行われます。</p>

<p>各行の２番目の数字に注目してください。</p>

<p><img src="editpolicy-domain-profile-number.png" width="720" height="400"></p>

<p>この数字はプロファイル番号と呼ばれるものです。プロファイル番号は０～２５５の整数値をとります。デフォルトのプロファイル番号は０です。プロファイル０は「無効モード」と呼ばれ、ドメインに対する解析／制限は行われません。</p>

<p>? キーを押すと、その画面で利用可能なコマンドが表示されます。再度 ? キーを押すと、元の画面に戻ります。</p>

<p>w キーを押すと、ポリシーエディタで選択可能な画面を一覧から選択するための画面が表示されます。</p>

<p><img src="editpolicy-window-list.png" width="720" height="400"></p>

<p>p キーを押すと、 Profile Editor 画面に切り替わり、プロファイルの一覧を見ることができます。</p>

<p><img src="editpolicy-profile-list.png" width="720" height="400"></p>

<table border="1">
<tr><td>項目</td><td>内容</td></tr>
<tr>
<td>PREFERENCE::learning</td>
<td>学習モードに関する設定</td>
</tr>
<tr>
<td>PREFERENCE::permissive</td>
<td>確認モードに関する設定</td>
</tr>
<tr>
<td>PREFERENCE::enforcing</td>
<td>強制モードに関する設定</td>
</tr>
<tr>
<td>COMMENT</td>
<td>プロファイルの内容を説明するための１行コメント。</td>
</tr>
<tr>
<td>CONFIG</td>
<td>動作モードの設定。</td>
</tr>
</table>
<p>PREFERENCE::learning PREFERENCE::permissive PREFERENCE::enforcing の verbose については以下の値を指定できます。</p>
<table border="1">
<tr>
<td>値</td>
<td>内容</td>
</tr>
<tr>
<td>no</td>
<td>ポリシー違反のメッセージを表示しない。</td>
</tr>
<tr>
<td>yes</td>
<td>ポリシー違反のメッセージを表示する。</td>
</tr>
</table>
<p>CONFIG 行で指定されている mode については以下の値を指定できます。</p>
<table border="1">
<tr>
<td>値</td>
<td>内容</td>
</tr>
<tr>
<td>disabled</td>
<td>無効。通常のカーネルと同様に動作する。</td>
</tr>
<tr>
<td>learning</td>
<td>学習モード。ポリシーに違反してもエラーにせず、ポリシーへの自動追加を行う。</td>
</tr>
<tr>
<td>permissive</td>
<td>確認モード。ポリシーに違反してもエラーにせず、ポリシーへの自動追加も行わない。</td>
</tr>
<tr>
<td>enforcing</td>
<td>強制モード。ポリシーに違反したらエラーとする。</td>
</tr>
</table>

<br>

<hr>

<h2><a name="2.3">ステップ２．３：ドメインポリシーを理解する</a></h2>

<p>それぞれのドメインに対する解析／制限の内容については、 Domain Policy 画面で確認することができます。この画面は、 Domain Transition 画面でドメインを選択後、 Enter キーを押すことにより表示されます。まだポリシーを作成していない（ポリシーの作成については第３節で説明します）ため、画面は空っぽです。以下の画面は Apache に対するポリシーの例です。</p>

<p><img src="editpolicy-httpd-acl1.png" width="720" height="400"></p>

<p>ドメインに対する解析／制限の内容が allow_read や allow_ioctl のようなディレクティブと一緒に表示されています。ドメインに対して「強制モード」が割り当てられると、ここで表示されているアクセス許可（および次のステップで説明する例外ポリシーで定義されているアクセス許可）だけが認められるようになります。通常の利用方法だけを許可するような必要最小限の権限を持ったドメインポリシーを作成するために、「学習モード」および「確認モード」を利用することができます。利用可能なディレクティブの詳細については<a href="policy-reference.html.ja#domain_policy">ドメインポリシーの仕様</a>を参照してください。</p>

<hr>

<h2><a name="2.4">２．４：例外ポリシーを理解する</a></h2>

<p>w キーを押してから e キーを押すと、以下の画面が表示されます。</p>

<p><img src="editpolicy-exception-list1.png" width="720" height="400"></p>

<p>矢印キーや Home/End/PageUp/PageDown キーを使ってスクロールすることができます。</p>

<p>この画面に表示されているアクセス許可はドメインポリシーの画面に表示されているものと同様ですが、全てのドメインに対して適用されるという点が異なっています。ここで定義されているアクセス許可はドメインポリシーの画面には表示されず、ここで定義されているアクセス許可に合致するアクセス要求は自動的に許可されます。また、例外ポリシーでグループを定義することにより、ドメインポリシーの量を減らして単純化することが可能です。</p>

<p>例外ポリシーで指定可能なディレクティブの一覧の詳細については<a href="policy-reference.html.ja#exception_policy">例外ポリシーの仕様</a>を参照してください。以下に要約を示します。</p>

<table border="1">
<tr><td>
(1) パス名のパターン
</td><td>
<p>file_pattern というキーワードを使用して、パス名のパターンを登録します。アクセス許可を学習する際に、要求されたパス名が file_pattern というキーワードを使用して登録されたパス名のパターンと一致した場合、パターン化されたパス名でアクセス許可が学習されます。<br>
目安としては以下のものが挙げられます。</p>

<ul>
<li>/proc/PID/ ディレクトリ以下に存在するファイルのパス名 </li>
<li>/sys/ ディレクトリ以下に存在するファイルのパス名（カーネル 2.6 系の場合のみ）</li>
<li>/dev/ ディレクトリ以下の一部のパス名</li>
<li>/etc/tomoyo/ ディレクトリ以下のポリシーファイルのパス名</li>
<li>マニュアルページのパス名</li>
<li>スプールディレクトリのパス名</li>
<li>メールの送受信時に作成されるテンポラリファイルのパス名</li>
<li>man コマンドが作成するテンポラリファイルのパス名</li>
<li>mount コマンドが作成するテンポラリファイルのパス名</li>
</ul>

<p>システムにインストールされているアプリケーションやその設定により、上記以外にもパターン化されたパス名が必要になります。不足しているパターンは、実際にどのようなアクセスが行われるかを観察してから、適切にパターン化して追加します。</p>
</td></tr><tr><td>
(2) パス名のグループ
</td><td>
<p>path_group というキーワードを使用して、パス名のパターンを登録します。これは、複数のパス名を集約することでポリシーの記述量を減らすためのマクロです。使い方は後述します。</p>
</td></tr><tr><td>
(3) 数値のグループ
</td><td>
<p>number_group というキーワードを使用して、数値のパターンを登録します。これは、複数の数値を集約することでポリシーの記述量を減らすためのマクロです。使い方は後述します。</p>
</td></tr><tr><td>
(4) 無条件に読み込みを許可するファイル
</td><td>
<p>allow_read というキーワードを使用して、全てのプログラムへの読み込みアクセスを許可するファイルのパス名を登録します。パターンも使用できます。読み込みモードで要求されたパス名が allow_read というキーワードを使用して登録されたパス名と一致した場合、ドメインポリシーで明示的に許可が与えられていなかった場合でも読み込みアクセスが許可されます。<br>
目安としては以下のものが挙げられます。</p>

<ul>
<li>ldconfig に登録されている共有ライブラリ</li>
<li>/proc/ ディレクトリ以下に存在するファイルの一部</li>
<li>/usr/share/locale/ ディレクトリ以下に存在するロケールデータの一部</li>
</ul>

<p>システムにインストールされているアプリケーションやその設定により、上記以外にも常に読み込みアクセスを許可したいファイルがあるかもしれません。不足しているファイルは、実際にどのようなファイルを読み込むかを観察してから、必要に応じてその都度追加していきます。</p>

</td></tr><tr><td>
(5) 書き換えを禁止するファイル
</td><td>
<p>deny_rewrite というキーワードを使用して、既に記録されている部分の書き換えを禁止したいファイル（ログファイル等）のパス名を登録します。パターンが使用できます。 deny_rewrite というキーワードを使用して登録されたファイルは、後述するドメインポリシーの中で明示的に allow_rewrite というキーワードを用いて許可が与えられない限り、追記ではない書き込みモードでのオープンとファイルの切り詰めが禁止されます。<br>
目安としては以下のものが挙げられます。</p>

<ul>
<li>/var/log/ ディレクトリ以下のファイル</li>
</ul>

<p>システムにインストールされているアプリケーションやその設定により、上記以外にも書き換えを禁止したいファイルがあるかもしれません。不足しているファイルは、実際にどのようなファイルが追記専用で使われているかを観察してから、必要に応じてその都度追加していきます。</p>

</td></tr><tr><td>
(6) プログラム名の集約
</td><td>
<p>複数のプログラムを単一のプログラム名で扱うには、 aggregator というキーワードに続けて集約前のプログラム名と集約後のプログラム名を指定します。集約前のプログラム名にはパターンを使用できます。<br>
例えば、 /usr/bin/tac と /bin/cat は似ているので、 aggregator /usr/bin/tac /bin/cat という指定をすることで /usr/bin/tac を /bin/cat のドメインで実行することができるようになります。</p>
</td></tr><tr><td>
(7) ドメイン遷移を初期化するプログラム
</td><td>
<p>initialize_domain というキーワードを使用して、ドメイン遷移履歴をリセットするプログラムのパス名を登録します。パターンは使用できません。 initialize_domain というキーワードを使用して登録されたパス名のプログラムが実行された場合、そのプログラムは &lt;kernel&gt; 直下のドメインで動作します。<br>
目安としては以下のものが挙げられます。</p>

<ul>
<li>/etc/init.d/ ディレクトリ以下にあるデーモンプログラム等を起動・終了させるためのスクリプト</li>
<li>上記スクリプトから起動されるデーモンプログラムの内、ドメイン名を短くしたいもの（httpd や sshd など）</li>
</ul>

<p>システムにインストールされているアプリケーションやその設定により、上記以外にもドメイン遷移履歴をリセットさせたいプログラムがあるかもしれません。最初にドメイン遷移履歴を作成して、実際にどのようなプログラムを指定したらよいかを考慮しながら、必要に応じてその都度追加していきます。その際、他のドメインへの影響に注意してください。例えば、ドメインポリシーとして</p>

<table border="1">
<tr><td>
&lt;kernel&gt; ... /bin/bash<br>
use_profile 3<br>
allow_execute /bin/tcsh<br>
<br>
&lt;kernel&gt; ... /bin/bash /bin/tcsh<br>
use_profile 3<br>
allow_execute /bin/cat<br>
<br>
&lt;kernel&gt; ... /bin/bash /bin/tcsh /bin/cat<br>
use_profile 3<br>
allow_read /etc/fstab
</td></tr>
</table>

<p>というポリシーが既に存在している状態で /bin/tcsh を initialize_domain として追加した場合、 /bin/tcsh は &lt;kernel&gt; /bin/tcsh というドメインへ遷移することになるため、 &lt;kernel&gt; ・・・ /bin/bash /bin/tcsh というドメインへは遷移できなくなってしまいます。そのような場合は、以下のように、 &lt;kernel&gt; ・・・ /bin/bash /bin/tcsh で始まる部分を &lt;kernel&gt; /bin/tcsh で始まるようにドメインポリシーを変更してやる必要があります。</p>

<table border="1">
<tr><td>
&lt;kernel&gt; ... /bin/bash<br>
use_profile 3<br>
allow_execute /bin/tcsh<br>
<br>
&lt;kernel&gt; /bin/tcsh<br>
use_profile 3<br>
allow_execute /bin/cat<br>
<br>
&lt;kernel&gt; /bin/tcsh /bin/cat<br>
use_profile 3<br>
allow_read /etc/fstab
</td></tr>
</table>
</td></tr><tr><td>
(8) ドメイン遷移を初期化させないプログラム
</td><td>
<p>no_initialize_domain というキーワードを使うことで、 initialize_domain キーワードの効果を打ち消すことができます。特定の条件下ではドメイン遷移を初期化させたくない場合に使用します。</p>
</td></tr><tr><td>
(9) ドメイン遷移を行わないドメイン
</td><td>
<p>keep_domain というキーワードを使用して、ドメイン遷移を行わないドメインを指定することができます。<br>
例えば、 keep_domain &lt;kernel&gt; /usr/sbin/sshd /bin/tcsh という行が含まれている場合、 &lt;kernel&gt; /usr/sbin/sshd /bin/tcsh というドメインに属しているプロセスは、 initialize_domain というキーワードで指定されたプログラムが実行されない限り、そのドメインに留まります。</p>
</td></tr><tr><td>
(10) ドメイン遷移を行うドメイン
</td><td>
<p>no_keep_domain というキーワードを使うことで、 keep_domain キーワードの効果を打ち消すことができます。特定の条件下でドメイン遷移を行わせたい場合に使用します。</p>
</td></tr>
</table>

<p>q キーを押してポリシーエディタを終了してください。</p>

<br>

<div class=navfooter>
<hr align="left" width="100%">
<table summary="Footer navigation table" width="100%" border="0" cellpadding="0" cellspacing="0">
<tr>
<td width="33%" align="left" valign="top">
<a href="phase-1.html.ja">前節</a>
</td>
<td width="34%" align="center" valign="top">
<a href="index.html.ja">目次</a>
</td>
<td width="33%" align="right" valign="top">
<a href="phase-3.html.ja">次節</a>
</td></tr>
<tr><td width="33%" align="left" valign="top">
第１節：導入と初期化
</td>
<td width="34%" align="center" valign="top">
<a href="http://tomoyo.sourceforge.jp/">ホーム</a>
</td>
<td width="33%" align="right" valign="top">
第３節：ドメインを解析する
</td>
</tr>
</table>
</div>

<p><a href="http://sourceforge.jp/"><img src="http://sourceforge.jp/sflogo.php?group_id=1973" width="96" height="31" alt="SourceForge.jp"></a></p>
</body>
</html>

