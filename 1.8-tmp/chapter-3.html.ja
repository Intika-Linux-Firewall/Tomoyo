<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="ja-JP">
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="content-style-type" content="text/css">
<link rel="stylesheet" href="../media/tomoyolinux.css" media="all" type="text/css">
<title>TOMOYO Linux 1.8.x : 導入ガイド : Chapter 3</title>
</head>

<body>

<div id="titlebar">
<a href="../index.html.ja"><img src="../media/tomoyotitle.png" alt="tomoyotitle.png" width="320" height="40" border="0" align="left"></a>
</div>

<div id="navbar" class="tomoyo-documentation">
<ul id="navbarlist">
<li id="tomoyo-home"><a href="../index.html.ja" title="TOMOYO Linux ホーム">ホーム</a></li>
<li id="tomoyo-about"><a href="../about.html.ja" title="TOMOYO Linux の詳細">詳細</a></li>
<li id="tomoyo-download"><a href="../download.html.ja" title="TOMOYO Linux を入手">ダウンロード</a></li>
<li id="tomoyo-changelogs"><a href="../changelogs.html.ja" title="TOMOYO Linux 変更履歴">変更履歴</a></li>
<li id="tomoyo-documentation"><a href="../documentation.html.ja" title="公式ドキュメント">ドキュメント</a></li>
<li id="tomoyo-support"><a href="../support.html.ja" title="サポート情報">サポート</a></li>
<li id="tomoyo-links"><a href="../links.html.ja" title="Links">リンク</a></li>
</ul>
<ul id="switch-language">
<li id="tomoyo-switch-language"><a href="chapter-3.html.en" title="Go to English page">English page</a></li>
</ul>
</div>

<div id="content">

<div id="documentation">

<div class="navheader">
<p><a href="chapter-2.html.ja">&lt;前&gt;</a> <a href="index.html.ja">&lt;目次&gt;</a> <a href="chapter-4.html.ja">&lt;次&gt;</a></p>
</div>

<h2>Chapter 3: どうすれば TOMOYO Linux をインストールできますか？</h2>

<h3><a name="3.1">3.1. 私の使っているディストリビューション用のバイナリパッケージはありますか？</a></h3>

<p>TOMOYO Linux を使うには、ディストリビュータが配布しているカーネルパッケージとは別のカーネルをインストールする必要があります。インストールする方法は２通りあります。バイナリパッケージをインストールする方法と、ソースに対してパッチを当ててコンパイルする方法です。もし、利用しているディストリビューションが以下の何れかである場合、コンパイルをする必要無しに簡単にバイナリパッケージをインストールすることができます。</p>

<p>以下のディストリビューションに関してバイナリパッケージが提供されています：</p>

<ul>
<li>Fedora 13/14</li>
<li>CentOS 4.9/5.5</li>
<li>RHEL 6</li>
<li>Debian Lenny/Squeeze</li>
<li>OpenSUSE 11.3</li>
<li>Asianux 3.0</li>
<li>Ubuntu 8.04/10.04/10.10</li>
<li>Vine Linux 5.2</li>
</ul>

<p>もし、上記の何れかのディストリビューションを使用しているのであれば、<a href="chapter-3.html.ja#3.2">3.2. バイナリパッケージからのインストール</a>へと進んでください。そうではない場合には、カーネルをコンパイルする必要がありますので、<a href="chapter-3.html.ja#3.3">3.3. ソースからのインストール</a>へと進んでください。</p>

<h3><a name="3.2">3.2. バイナリパッケージからのインストール</a></h3>

<p>RPM 形式のパッケージを使用しているディストリビューションの場合、以下のようにして GPG 鍵をインポートしてください：</p>

<pre class="command">
# wget http://I-love.SAKURA.ne.jp/kumaneko-key
# rpm --import kumaneko-key
</pre>

<p>DEB 形式のパッケージを使用しているディストリビューションの場合、以下のようにして GPG 鍵をインポートしてください：</p>

<pre class="command">
# wget http://I-love.SAKURA.ne.jp/kumaneko-key
# apt-key add kumaneko-key
</pre>

<p>プロジェクトで配布しているバイナリパッケージは <a href="http://sourceforge.jp/projects/tomoyo/releases/?package_id=10270" target="_blank">SourceForge のページ</a>から手動でダウンロードすることも可能です。カーネルパッケージと管理ツールパッケージが必要です。レポジトリを使うと簡単にダウンロードできます。レポジトリを使う場合には以下のコマンドを実行してください：</p>

<p><strong>Fedora 13 (i686 以降用)</strong></p>
<pre class="command">
# wget -O /etc/yum.repos.d/ccs.repo http://tomoyo.sourceforge.jp/repos-1.7/Fedora13/ccs.repo
# yum install ccs-kernel ccs-tools
</pre>

<p><strong>CentOS 4.9 (i586 以降用)</strong></p>
<pre class="command">
# wget -O /etc/yum.repos.d/ccs.repo http://tomoyo.sourceforge.jp/repos-1.7/CentOS4/ccs.repo
# yum install ccs-kernel-smp ccs-tools
</pre>

<p><strong>CentOS 5.5 (i686 以降用)</strong></p>
<pre class="command">
# wget -O /etc/yum.repos.d/ccs.repo http://tomoyo.sourceforge.jp/repos-1.7/CentOS5/ccs.repo
# yum install ccs-kernel ccs-tools
</pre>

<p><strong>RHEL 6 (i686 以降用)</strong></p>
<pre class="command">
# wget -O /etc/yum.repos.d/ccs.repo http://tomoyo.sourceforge.jp/repos-1.7/RHEL6/ccs.repo
# yum install ccs-kernel ccs-tools
</pre>

<p><strong>Ubuntu 10.10 (generic-pae 用)</strong></p>
<pre class="command">
# echo 'deb http://osdn.dl.sourceforge.jp/tomoyo/48987/ ./' &gt;&gt; /etc/apt/sources.list
# apt-get update
# apt-get install linux-ccs ccs-tools
</pre>

<br>

<p><a href="chapter-3.html.ja#3.4">3.4. 設定の初期化</a>へと進んでください。</p>

<h3><a name="3.3">3.3. ソースからのインストール</a></h3>

<p>あなたが利用しているディストリビューション向けのバイナリパッケージが提供されていない場合、自分でカーネルをコンパイルする必要があります。</p>

<h4><a name="3.3.1">3.3.1. 依存するパッケージのインストール</a></h4>

<p>カーネルと管理ツールをコンパイルするために以下のパッケージが必要になります：</p>
<ul>
<li><strong>wget</strong> ：ソースコードをダウンロードするのに必要です。</li>
<li><strong>patch</strong> ：カーネルにパッチを当てるのに必要です。</li>
<li><strong>gcc</strong> ：カーネルおよび管理ツールをコンパイルするのに必要です。</li>
<li><strong>make</strong> ：カーネルおよび管理ツールをコンパイルするのに必要です。</li>
<li><strong>ncurses-devel</strong> または <strong>libncurses-dev</strong> ：管理ツールをコンパイルするのに必要です。</li>
</ul>

<p>これらのパッケージは以下のコマンドを実行することでインストールできます：</p>

<p><strong>RedHat 系の場合</strong></p>
<pre class="command">
# yum -y install wget patch gcc make ncurses-devel
</pre>
<p><strong>Debian 系の場合</strong></p>
<pre class="command">
# apt-get -y install wget patch gcc make libncurses-dev
</pre>
<p><strong>SUSE 系の場合</strong></p>
<pre class="command">
# yast -i wget patch gcc make ncurses-devel
</pre>

<h4><a name="3.3.2">3.3.2. カーネルのダウンロードとパッチの適用</a></h4>

<p>カーネルのソースコードを <a href="http://www.kernel.org/pub/linux/kernel/v2.4/">linux-2.4</a> または <a href="http://www.kernel.org/pub/linux/kernel/v2.6/">linux-2.6</a> からダウンロードしてください。<br>
linux-2.4 についてはカーネル 2.4.30 以降に対応しています。<br>
linux-2.6 についてはカーネル 2.6.11.12 以降に対応しています。</p>

<p>カーネルのソースを展開して、そのディレクトリに移動してください。<br>
以下の操作において、例えばカーネル 2.6.37.3 を使う場合、 2.$PATCHLEVEL.$SUBLEVEL.diff を 2.6.37.diff に置き換えてください：</p>

<pre class="command">
$ wget -O ccs-patch-1.8.0-20110207.tar.gz 'http://sourceforge.jp/frs/redir.php?f=/tomoyo/49684/ccs-patch-1.8.0-20110207.tar.gz'
$ wget -O ccs-patch-1.8.0-20110207.tar.gz.asc 'http://sourceforge.jp/frs/redir.php?f=/tomoyo/49684/ccs-patch-1.8.0-20110207.tar.gz.asc'
$ gpg ccs-patch-1.8.0-20110207.tar.gz.asc
$ tar -zxf ccs-patch-1.8.0-20110207.tar.gz
$ patch -sp1 &lt; patches/ccs-patch-2.$PATCHLEVEL.$SUBLEVEL.diff
</pre>

<h4><a name="3.3.3">3.3.3. カーネルコンパイルオプションの設定</a></h4>

<pre class="command">
$ make -s menuconfig
</pre>

<p>Security options 画面に表示される以下の項目を選択してください：</p>

<ul>
<li>[*] CCSecurity support</li>
<li>[ ]   Compile as loadable kernel module</li>
<li>[ ]   Disable by default</li>
<li>[ ]   Do not modify 'struct task_struct' in order to keep KABI</li>
<li>(2048) Default maximal count for learning mode</li>
<li>(/sbin/ccs-init) Default policy loader</li>
<li>(/sbin/ccs-start) Alternative activation trigger</li>
<li>(/sbin/modprobe /sbin/hotplug) Built-in domain initializer programs</li>
<li>(1024)&nbsp;&nbsp;Default maximal count for audit log</li>
</ul>

<p><em>Compile as loadable kernel module</em> オプションは（組込みシステムなど） vmlinux のファイルサイズに制限がある場合に便利です。</p>

<p><em>Disable by default</em> オプションを選択した場合、を選択した場合、カーネルのコマンドラインで ccsecurity=on という指定を行った場合だけ有効化されます。選択しなかった場合、カーネルのコマンドラインで ccsecurity=off という指定を行った場合だけ無効化されます。</p>

<p><em>Do not modify 'struct task_struct' in order to keep KABI</em> オプションはカーネル 2.6 でのみ選択可能です。このオプションを選択した場合、 TOMOYO が利用する変数をタスク構造体の外部で管理することにより、タスク構造体に変更を加えることにより生じる Kernel Application Binary Interface (KABI) の変化を回避することができます。ディストリビュータのカーネルに対して適用する際に Kernel ABI の変化を避けたい場合に選択してください。ただし、カーネルモジュールに対して TOMOYO の機能を呼び出すために ccsecurity_operations 構造体へのアクセスを認める（エクスポートする）必要があるため、カーネルパッケージを作成するスクリプトが警告を出力することは避けられない点については了承ください。</p>

<h4><a name="3.3.4">3.3.4. カーネルのコンパイルおよびインストール</a></h4>

<p>カーネルコンパイルオプションの変更が終わったら、以下のコマンドを実行してカーネルをコンパイルしてください：</p>

<pre class="command">
$ make -s dep
$ make -s
$ make -s modules
$ su
# make -s modules_install install
</pre>

<p>必要であれば initrd/initramfs を作成してください。</p>

<h4><a name="3.3.5">3.3.5. 管理ツールのインストール</a></h4>

<p>前述した依存するパッケージがインストールされていることを確認してください。以下のコマンドを実行することによりコンパイルおよびインストールできます：</p>

<pre class="command">
$ wget -O ccs-tools-1.8.0-20110214.tar.gz 'http://sourceforge.jp/frs/redir.php?f=/tomoyo/49693/ccs-tools-1.8.0-20110214.tar.gz'
$ wget -O ccs-tools-1.8.0-20110214.tar.gz.asc 'http://sourceforge.jp/frs/redir.php?f=/tomoyo/49693/ccs-tools-1.8.0-20110214.tar.gz.asc'
$ gpg ccs-tools-1.8.0-20110214.tar.gz.asc
$ tar -zxf ccs-tools-1.8.0-20110214.tar.gz
$ cd ccstools/
$ make -s
$ su
# make -s install
</pre>

<br>

<p><a href="chapter-3.html.ja#3.4">3.4. 設定の初期化</a>へと進んでください。</p>

<h3><a name="3.4">3.4. 設定の初期化</a></h3>

<p>管理ツールを実行するときに便利なように、管理ツールのインストールされているディレクトリ（ /usr/sbin ）を環境変数 PATH に追加したいと思うかもしれません。 <code>/bin/bash</code> を使用している場合、以下の行を ~/.bashrc に追加してください：</p>

<pre>
export PATH=$PATH:/usr/sbin
</pre>

<p>Before you can make use of TOMOYO Linux, an initialization procedure must take place. This prepares the files in which policy information will be stored. All policy files are <strong>stored in the "/etc/ccs/" directory</strong>.</p>

<p>One of two commands can be used to initialize configuration. The command you use depends on what operations you wish to analyze or restrict.</p>

<p>Some users may wish to <strong>restrict only file-related operations</strong>, such as read, write and execute. This is suitable for users wanting to keep policy simpler or do not require the full functionality of TOMOYO Linux. If you chose to restrict only file-related operations, then you may ignore parts of this guide that are not relevant, such as network operations. In this case, policy can be initialized using this command:</p> 


<pre class="command">
# /usr/lib/ccs/init_policy --file-only-profile
</pre>

<p>Other users may wish to <strong>make use of all the restrictive capabilities of TOMOYO Linux</strong>, and may want to analyze or restrict all possible operations (e.g. files, networks, capabilities, environment variables, signal transmissions). This is suitable for users wanting to secure their system as much as possible. This is also what this guide generally assumes the reader has chosen. In this case, run the following command:</p>

<pre class="command">
# /usr/lib/ccs/init_policy
</pre>

<p>After running one of the above commands, you should see the following output:</p>

<pre class="command">
# /usr/lib/ccs/init_policy
</pre>
<pre class="output">
Creating policy directory... OK
Creating configuration directory... OK
Creating exception policy... OK
Creating domain policy... OK
Creating manager policy... OK
Creating default profile... OK
Creating stat policy... OK
Creating module loader... OK
Creating configuration file for ccs-editpolicy ... OK
Creating configuration file for ccs-auditd ... OK
Creating configuration file for ccs-patternize ... OK
Creating configuration file for ccs-notifyd ... OK
</pre>

<h3><a name="3.5">3.5. ブートローダの設定</a></h3>

<p>Now edit your bootloader (e.g. GRUB) to include the kernel you have just compiled. If the <em>"Disable by default"</em> option was selected during kernel configuration, remember to include "ccsecurity=on" in the kernel boot options. Consult the documentation for your distribution and bootloader to find out how to boot your TOMOYO Linux kernel.</p>

<h3><a name="3.6">3.6. システムの再起動</a></h3>

<p>Now you have finished all preparation. You can't wait any more? Now it's time to make use of your newly installed kernel. Reboot your system and choose the entry with TOMOYO Linux kernel at the GRUB screen, or at whatever other bootloader you have installed:</p>

<img src="media/fig-1-12.png" alt="fig-1-12.png" width="500" height="375">

<p>If everything was installed properly and the bootloader was correctly configured, the kernel should boot as normal and TOMOYO Linux should be activated:</p>

<img src="media/fig-1-13.png" alt="fig-1-13.png" width="675" height="375">

<h3><a name="3.7">3.7. どのようにすれば TOMOYO Linux を無効化またはアンインストールできますか？</a></h3>

<p>If your system becomes unable to boot during the course of this guide or any time in the future, it may be due to policy configuration or something related to TOMOYO Linux. If this is the case, it is possible that the kernel can still be booted by disabling TOMOYO Linux. This can be done by appending "ccsecurity=off" at the kernel command-line parameters.</p>

<p>TOMOYO Linux fortunately does not require the modification of any existing Linux binaries, libraries or applications. Thus, uninstalling TOMOYO Linux is very easy. It is simply a matter of uninstalling the kernel and userspace tools that you installed above using your package manager (e.g. <code>rpm</code> or <code>apt</code>). You can then remove the entry from your bootloader and proceed to boot the kernel provided by your distribution.</p>

</div><!-- documentation -->

</div><!-- content -->

<div id="navfooter">
<hr>
<table>
<tr>
<td class="docs-previous">
<a href="chapter-2.html.ja">前</a>
</td>
<td class="docs-index">
<a href="index.html.ja">目次</a>
</td>
<td class="docs-next">
<a href="chapter-4.html.ja">次</a>
</td>
</tr>
<tr>
<td class="docs-previous-description">
<p>Chapter 2: なぜ TOMOYO Linux が必要なのですか？</p>
</td>
<td class="docs-home">
</td>
<td class="docs-next-description">
<p>Chapter 4: TOMOYO Linux はどのように動きますか？</p>
</td>
</tr>
</table>
</div>

<div id="footer">
<p class="language">Go to <a href="chapter-3.html.en">English page</a>.</p>
<p class="timestamp">Last modified: $Date$</p>
<p class="trademark">Linux&reg; は世界各国における Linus Torvalds の登録商標です。 TOMOYO&reg; は<a href="http://www.nttdata.co.jp/">株式会社ＮＴＴデータ</a>の登録商標です。</p>
<p><a href="http://sourceforge.jp/"><img src="http://sourceforge.jp/sflogo.php?group_id=1973" width="96" height="31" alt="SourceForge.jp"></a></p>
</div>

</body>
</html>
