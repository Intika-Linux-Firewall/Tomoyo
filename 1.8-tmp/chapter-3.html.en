<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
<meta http-equiv="Content-Style-Type" content="text/css">
<title>The Official Guide</title>
<link rel="stylesheet" href="tomoyo.css" media="all" type="text/css">
</head>
<body>

<div class=navheader>
<table summary="Header navigation table" width="100%" border="0" cellpadding="0" cellspacing="0">
<tr>
<td width="33%" align="left" valign="bottom">
<a href="chapter-2.html.en">Prev</a>
</td>
<td width="34%" align="center" valign="bottom">
<a href="index.html.jp">Japanese page</a>
</td>
<td width="33%" align="right" valign="bottom">
<a href="chapter-4.html.en">Next</a>
</td></tr>
</table>
</div>

<h1>Chapter 3: How do I install TOMOYO Linux?</h1>

<p style="text-align:center;">Aim: to install the TOMOYO Linux kernel and userland tools and prepare the system for analysis and/or restriction.</p>

<h2><a name="3.1">3.1. Are binary packages available for my distribution?</a></h2>

<p>TOMOYO Linux requires the installation of a seperate Linux kernel from the one provided by your distribution. This can be done in one of two ways. A binary package can be installed, or the kernel can be compiled from source and manually patched. If your distribution is listed below, then you can install the binary package very easily without having to do any compilation.</p>

<p>Distributions that have binary packages provided:</p>
<ul>
<li>Fedora 13/14</li>
<li>CentOS 4.8/5.5</li>
<li>RHEL 6</li>
<li>Debian Lenny/Squeeze</li>
<li>OpenSUSE 11.3</li>
<li>Asianux 3.0</li>
<li>Ubuntu 8.04/10.04/10.10</li>
<li>Vine Linux 5.1</li>
</ul>

<p>If your distribution was listed above then continue to section <a href="chapter-3.html.en#3.2">3.2. (A) Installing binary packages</a>, otherwise you will need to compile your own kernel. If this is the case then proceed to section <a href="chapter-3.html.en#3.2">3.2. (B) Installing from source</a>

<h2><a name="3.2A">3.2. (A) Installing binary packages</a></h2>

<p>If your distribution uses RPM packages, import the GPG key with these commands:</p>

<pre class="command">
# wget http://I-love.SAKURA.ne.jp/kumaneko-key
# rpm --import kumaneko-key
</pre>

<p>If your distribution uses DEB packages, import the GPG key with these commands:</p>

<pre class="command">
# wget http://I-love.SAKURA.ne.jp/kumaneko-key
# apt-key add kumaneko-key
</pre>

<p>The binary packages provided by this project can be manually downloaded from <a href="http://sourceforge.jp/projects/tomoyo/releases/?package_id=10270" target="_blank">this SourceForge page</a>. A package for the kernel and a package for the userspace tools are required. Alternatively, packages can be installed very easily straight from the repository using the following commands:</p>

<p><b>Fedora 13 (for i686 and later)</b></p>
<pre class="command">
# wget -O /etc/yum.repos.d/ccs.repo \
      http://tomoyo.sourceforge.jp/repos-1.7/Fedora13/ccs.repo
# yum install ccs-kernel ccs-tools
</pre>

<p><b>CentOS 4.8 (for i586 and later)</b></p>
<pre class="command">
# wget -O /etc/yum.repos.d/ccs.repo \
      http://tomoyo.sourceforge.jp/repos-1.7/CentOS4/ccs.repo
# yum install ccs-kernel-smp ccs-tools
</pre>

<p><b>CentOS 5.5 (for i686 and later)</b></p>
<pre class="command">
# wget -O /etc/yum.repos.d/ccs.repo \
      http://tomoyo.sourceforge.jp/repos-1.7/CentOS5/ccs.repo
# yum install ccs-kernel ccs-tools
</pre>

<p><b>RHEL 6 (for i686 and later)</b></p>
<pre class="command">
# wget -O /etc/yum.repos.d/ccs.repo \
      http://tomoyo.sourceforge.jp/repos-1.7/RHEL6/ccs.repo
# yum install ccs-kernel ccs-tools
</pre>

<p><b>Ubuntu 10.10 (for generic-pae flavour)</b></p>
<pre class="command">
# echo 'deb http://osdn.dl.sourceforge.jp/tomoyo/48987/ ./' \
      &gt;&gt; /etc/apt/sources.list
# apt-get update
# apt-get install linux-ccs ccs-tools
</pre>

<br>

<p>You can now proceed to section <a href="chapter-3.html.en#3.3">3.3 Initializing configuration</a>.</p>

<h2><a name="3.2B">3.2. (B) Installing from source</a></h2>

<h3>Install dependencies</a></h3>

<p>These packages are required for compiling the kernel and the userspace tools:</p>
<ul>
<li><b>wget</b>: to download sources</li>
<li><b>patch</b>: to patch the kernel</li>
<li><b>gcc</b>: to build the kernel and tools</li>
<li><b>make</b>: to build the kernel and tools</li>
<li><b>ncurses</b>: for the tools user interface</li>
<li><b>readline</b>: for the tools user interface (optional but recommended)</li>
<li><b>help2man</b>: for the tools man pages (optional but recommended)</li>
</ul>

<p>These can be installed with the following commands:</p>

<p><b>RedHat distributions</b></p>
<pre class="command">
# yum -y install wget patch gcc make ncurses-devel readline-devel help2man
</pre>
<p><b>Debian distributions</b></p>
<pre class="command">
# apt-get -y install wget patch gcc make libncurses-dev libreadline-dev help2man
</pre>
<p><b>SUSE distributions</b></p>
<pre class="command">
# yast -i wget patch gcc make ncurses-devel readline-devel help2man
</pre>

<h3>Download and patch the kernel</h3>

<p>Download the kernel source from <a href="http://www.kernel.org/pub/linux/kernel/v2.4/">linux-2.4</a> or <a href="http://www.kernel.org/pub/linux/kernel/v2.6/">linux-2.6</a>.<br>
Linux kernel 2.4.30 and later are supported from the linux-2.4 tree.<br>
Linux kernel 2.6.11.12 and later are supported from the linux-2.6 tree.</p>

<p>Extract the kernel source and go to the extracted directory.<br>
In the operations below, "2.$PATCHLEVEL.$SUBLEVEL.diff" should for example be replaced with "2.6.37.diff" if using Linux kernel 2.6.37 :</p>

<pre class="command">
$ wget -O ccs-patch-1.8.0-20110121.tar.gz \
      'http://sourceforge.jp/frs/redir.php?f=/tomoyo/49684/ccs-patch-1.8.0-20110121.tar.gz'
$ wget -O ccs-patch-1.8.0-20110121.tar.gz.asc \
      'http://sourceforge.jp/frs/redir.php?f=/tomoyo/49684/ccs-patch-1.8.0-20110121.tar.gz.asc'
$ gpg ccs-patch-1.8.0-20110121.tar.gz.asc
$ tar -zxf ccs-patch-1.8.0-20110121.tar.gz
$ patch -sp1 &lt; patches/ccs-patch-2.$PATCHLEVEL.$SUBLEVEL.diff
</pre>

<h3>Configure the kernel</h3>

<pre class="command">
$ make -s menuconfig
</pre>

<p>Choose the following options in "Security options" section:</p>

<ul>
<li>[*] CCSecurity support</li>
<li>[ ]   Compile as loadable kernel module</li>
<li>[ ]   Disable by default</li>
<li>[ ]   Do not modify 'struct task_struct' in order to keep KABI</li>
<li>(2048) Default maximal count for learning mode</li>
<li>(/sbin/ccs-init) Default policy loader</li>
<li>(/sbin/ccs-start) Alternative activation trigger</li>
<li>(/sbin/modprobe /sbin/hotplug) Built-in domain initializer programs</li>
<li>(1024)&nbsp;&nbsp;Default maximal count for audit log</li>
</ul>

<p><i>"Compile as loadable kernel module"</i> is useful when there is a file size limitation for vmlinux (e.g. embedded systems).</p>

<p><i>"Disable by default"</i> will enable TOMOYO Linux only when ccsecurity=on is passed to the kernel's command line options. If this option is not selected, ccsecurity=off will disable TOMOYO Linux.</p>

<p><i>"Do not modify 'struct task_struct' in order to keep KABI"</i> is available to 2.6 kernels only. This option will manage "struct task_struct" variables outside "struct task_struct" in order to avoid Kernel Application Binary Interface (KABI) breakage. Choose this option if wanting to patch against distributor's kernels without breaking KABI. However, since "struct ccsecurity_operations" must be exported to loadable kernel modules (LKMs) in order to allow them to call TOMOYO's functions, build scripts may still print warning messages.</p>

<h3>Compile and install the kernel</h3>

<p>Once the kernel has been configured, compile and install:</p>

<pre class="command">
$ make -s dep
$ make -s
$ make -s modules
$ su
# make -s modules_install install
</pre>

<p>Create initrd/initramfs if required.</p>

<h3>Install the userspace tools</h3>

<p>Make sure the dependencies described above have been installed. Compile and install the tools with the following commands:</p>

<pre class="command">
$ wget -O ccs-tools-1.8.0-20101231.tar.gz \
      'http://sourceforge.jp/frs/redir.php?f=/tomoyo/49693/ccs-tools-1.8.0-20101231.tar.gz'
$ wget -O ccs-tools-1.8.0-20101231.tar.gz.asc \
      'http://sourceforge.jp/frs/redir.php?f=/tomoyo/49693/ccs-tools-1.8.0-20101231.tar.gz.asc'
$ gpg ccs-tools-1.8.0-20101231.tar.gz.asc
$ tar -zxf ccs-tools-1.8.0-20101231.tar.gz
$ cd ccstools/
$ make -s
$ su
# make -s install
</pre>

<br>

<p>You can now proceed to section <a href="chapter-3.html.en#3.3">3.3. Initializing configuration</a></p>

<h2><a name="3.3">3.3. Initializing configuration</a></h2>

<p>You will probably want to add the location of the userspace tools (/usr/sbin) to your PATH so that the commands can be run easily. If you are using /bin/bash, append the following line to ~/.bashrc:</p>

<pre>
export PATH=$PATH:/usr/sbin
</pre>

<p>Before you can make use of TOMOYO Linux, an initialization procedure must take place. This prepares the files in which policy information will be stored. All policy files are <b>stored in the "/etc/ccs/" directory</b>.</p>

<p>One of two commands can be used to initialize configuration. The command you use depends on what operations you wish to analyze or restrict.</p>

<p>Some users may wish to restrict only file related operations, such as read, write and execute. This is suitable for users wanting to keep policy simpler or do not require the full functionality of TOMOYO Linux. In this case, policy can be initialized using this command:</p>

<pre class="command">
# /usr/lib/ccs/init_policy --file-only-profile
</pre>

<p>Other users may wish to make use of all the restrictive capabilities of TOMOYO Linux, and may want to analyze or restrict all possible operations (e.g. files, networks, capabilities, environment variables, signal transmissions). This is suitable for users wanting to secure their system as much as possible. This is also what this guide generally assumes the reader has chosen. In this case, run the following command:</p>

<pre class="command">
# /usr/lib/ccs/init_policy
</pre>

<p>After running one of the above commands, you should see the following output:</p>

<pre class="command">
# /usr/lib/ccs/init_policy
</pre>
<pre class="output">
Creating policy directory... OK
Creating configuration directory... OK
Creating exception policy... OK
Creating domain policy... OK
Creating manager policy... OK
Creating default profile... OK
Creating stat policy... OK
Creating module loader... OK
Creating configuration file for ccs-editpolicy ... OK
Creating configuration file for ccs-auditd ... OK
Creating configuration file for ccs-patternize ... OK
Creating configuration file for ccs-notifyd ... OK
</pre>

<br>

<h2><a name="3.4">3.4. Configuring your bootloader</a></h2>

<p>Now edit your bootloader (e.g. GRUB) to include the kernel you have just compiled. If the <i>"Disable by default"</i> option was selected during kernel configuration, remember to include "ccsecurity=on" in the kernel boot options.</p>

<p>Instructions go here...</p>

<h2><a name="3.5">3.5. Rebooting your system</a></h2>

<p>Now you have finished all preparation. You can't wait any more? Now it's time to make use of your newly installed kernel. Reboot your system and choose the entry with TOMOYO Linux kernel at the GRUB screen, or at whatever other bootloader you have installed:</p>

<p><img src="tutorial/fig-1-12.png" alt="fig-1-12.png" width="640" height="480"></p>

<br>

<p>If everything was installed properly and the bootloader was correctly configured, the kernel should boot as normal and TOMOYO Linux should be activated:</p>

<p><img src="tutorial/fig-1-13.png" alt="fig-1-13.png" width="720" height="400"></p>

<br>

<h2><a name="3.6">3.6. How can I disable/uninstall TOMOYO Linux?</a></h2>

<p>If your system becomes unable to boot during the course of this guide or any time in the future, it may be due to policy configuration or something related to TOMOYO Linux. If this is the case, it is possible that the kernel can still be booted by disabling TOMOYO Linux. This can be done by appending ccsecurity=off at the kernel command-line parameters.</p>

<p>TOMOYO Linux fortunately does not require the modification of any existing Linux binaries, libraries or applications. Thus, uninstalling TOMOYO Linux is very easy. It is simply a matter of uninstalling the kernel and userspace tools that you installed above using your package manager (e.g. rpm or apt). You can then remove the entry from your bootloader and proceed to boot the kernel provided by your distribution.</p>

<br>

<p>Proceed to the <a href="chapter-4.html.en">Chapter 4</a>, where the main concepts behind TOMOYO Linux are discussed!</p>

<div class=navfooter>
<hr align="left" width="100%">
<table summary="Footer navigation table" width="100%" border="0" cellpadding="0" cellspacing="0">
<tr>
<td width="33%" align="left" valign="top">
<a href="chapter-2.html.en">Prev</a>
</td>
<td width="34%" align="center" valign="top">
<a href="index.html.en">Index</a>
</td>
<td width="33%" align="right" valign="top">
<a href="chapter-4.html.en">Next</a>
</td></tr>
<tr><td width="33%" align="left" valign="top">
Chapter 2: Why do I need TOMOYO Linux?
</td>
<td width="34%" align="center" valign="top">
<a href="http://tomoyo.sourceforge.jp/">Home</a>
</td>
<td width="33%" align="right" valign="top">
Chapter 4: How does TOMOYO Linux work?
</td>
</tr>
</table>
</div>

<table width="100%" border="0" cellpadding="0" cellspacing="0">
<tr><td>
<p><a href="http://sourceforge.jp/"><img src="http://sourceforge.jp/sflogo.php?group_id=1973" width="96" height="31" alt="SourceForge.jp"></a></p>
</td>
<td>
<p style="text-align:right;font-size:smaller;">Last modified: $Date$</p>
</td></tr>
</table>
</body>
</html>
