Subject: TOMOYO: Rename functions.

Remove tomoyo_domain() and tomoyo_real_domain().

Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
---
 security/tomoyo/audit.c  |    2 +-
 security/tomoyo/common.c |   14 ++++++++------
 security/tomoyo/common.h |   11 -----------
 security/tomoyo/domain.c |    2 +-
 security/tomoyo/util.c   |    2 +-
 5 files changed, 11 insertions(+), 20 deletions(-)

--- security-testing-2.6.orig/security/tomoyo/audit.c
+++ security-testing-2.6/security/tomoyo/audit.c
@@ -110,7 +110,7 @@ char *tomoyo_init_log(struct tomoyo_requ
 	char *buf = NULL;
 	const char *header = NULL;
 	int pos;
-	const char *domainname = tomoyo_domain()->domainname->name;
+	const char *domainname = tomoyo_current_domain()->domainname->name;
 	header = tomoyo_print_header(r);
 	if (!header)
 		return NULL;
--- security-testing-2.6.orig/security/tomoyo/common.c
+++ security-testing-2.6/security/tomoyo/common.c
@@ -684,7 +684,8 @@ static bool tomoyo_manager(void)
 	struct tomoyo_manager *ptr;
 	const char *exe;
 	const struct task_struct *task = current;
-	const struct tomoyo_path_info *domainname = tomoyo_domain()->domainname;
+	const struct tomoyo_path_info *domainname
+		= tomoyo_current_domain()->domainname;
 	bool found = false;
 
 	if (!tomoyo_policy_loaded)
@@ -755,7 +756,7 @@ static bool tomoyo_select_one(struct tom
 		else
 			p = find_task_by_vpid(pid);
 		if (p)
-			domain = tomoyo_real_domain(p);
+			domain = tomoyo_task_domain(p);
 		read_unlock(&tasklist_lock);
 		rcu_read_unlock();
 	} else if (!strncmp(data, "domain=", 7)) {
@@ -1233,7 +1234,7 @@ static void tomoyo_read_pid(struct tomoy
 	else
 		p = find_task_by_vpid(pid);
 	if (p)
-		domain = tomoyo_real_domain(p);
+		domain = tomoyo_task_domain(p);
 	read_unlock(&tasklist_lock);
 	rcu_read_unlock();
 	if (!domain)
@@ -1493,7 +1494,7 @@ static void tomoyo_add_entry(char *heade
 		return;
 	snprintf(buffer, len - 1, "%s", cp);
 	tomoyo_normalize_line(buffer);
-	tomoyo_write_domain2(buffer, tomoyo_domain(), false);
+	tomoyo_write_domain2(buffer, tomoyo_current_domain(), false);
 	kfree(buffer);
 }
 
@@ -1756,11 +1757,12 @@ static void tomoyo_read_self_domain(stru
 {
 	if (!head->r.eof) {
 		/*
-		 * tomoyo_domain()->domainname != NULL
+		 * tomoyo_current_domain()->domainname != NULL
 		 * because every process belongs to a domain and
 		 * the domain's name cannot be NULL.
 		 */
-		tomoyo_io_printf(head, "%s", tomoyo_domain()->domainname->name);
+		tomoyo_io_printf(head, "%s",
+				 tomoyo_current_domain()->domainname->name);
 		head->r.eof = true;
 	}
 }
--- security-testing-2.6.orig/security/tomoyo/common.h
+++ security-testing-2.6/security/tomoyo/common.h
@@ -1012,17 +1012,6 @@ static inline void tomoyo_put_group(stru
 		atomic_dec(&group->users);
 }
 
-static inline struct tomoyo_domain_info *tomoyo_domain(void)
-{
-	return tomoyo_current_domain();
-}
-
-static inline struct tomoyo_domain_info *tomoyo_real_domain(struct task_struct
-							    *task)
-{
-	return tomoyo_task_domain(task);
-}
-
 static inline bool tomoyo_same_acl_head(const struct tomoyo_acl_info *p1,
 					   const struct tomoyo_acl_info *p2)
 {
--- security-testing-2.6.orig/security/tomoyo/domain.c
+++ security-testing-2.6/security/tomoyo/domain.c
@@ -444,7 +444,7 @@ int tomoyo_find_next_domain(struct linux
 	struct tomoyo_request_info r;
 	char *tmp = kzalloc(TOMOYO_EXEC_TMPSIZE, GFP_NOFS);
 	struct tomoyo_security *security = tomoyo_current_security();
-	struct tomoyo_domain_info *old_domain = tomoyo_domain();
+	struct tomoyo_domain_info *old_domain = tomoyo_current_domain();
 	struct tomoyo_domain_info *domain = NULL;
 	const char *original_name = bprm->filename;
 	u8 mode;
--- security-testing-2.6.orig/security/tomoyo/util.c
+++ security-testing-2.6/security/tomoyo/util.c
@@ -863,7 +863,7 @@ int tomoyo_get_mode(const u8 profile, co
  */
 int tomoyo_init_request_info(struct tomoyo_request_info *r, const u8 index)
 {
-	const u8 profile = tomoyo_domain()->profile;
+	const u8 profile = tomoyo_current_domain()->profile;
 	memset(r, 0, sizeof(*r));
 	r->profile = profile;
 	r->type = index;
