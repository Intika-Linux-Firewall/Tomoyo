<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="ja-JP">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<title>各種ツールのドキュメント</title>
<link rel="stylesheet" href="http://tomoyo.sourceforge.jp/tomoyo.css" media="all" type="text/css">
</head>
<body>
<p>Info: Version <a href="../1.7/">1.7.x</a> is available.</p>
<p style="text-align:right;"><a href="tools-doc.html.en">English Page</a></p>
<p style="text-align:right;">Last modified: $Date$</p>
<h1>各種ツールのドキュメント</h1>

<hr>

<h2><a name="administration_tool">＜＜システム管理者用ツール＞＞</a></h2>

<h3><a name="ccs-editpolicy">＜ポリシーエディタ　ccs-editpolicy＞</a></h3>
<p>現在のポリシーを /proc/ccs/ ディレクトリから読み込み、編集を行う。</p>
<p>コマンドラインパラメータとして s e d p m u のいずれかの文字を指定することで最初に表示される画面を指定できる。省略すると最初にドメイン一覧表示画面が表示される。</p>

<p>＜カーソル移動＞</p>
<table border="1">
<tr><td>↑</td><td>１行上へ移動する。</td></tr>
<tr><td>↓</td><td>１行下へ移動する。</td></tr>
<tr><td>→</td><td>１列右へ移動する。</td></tr>
<tr><td>←</td><td>１列左へ移動する。</td></tr>
<tr><td>PageUp</td><td>１画面上へ移動する。</td></tr>
<tr><td>PageDown</td><td>１画面下へ移動する。</td></tr>
<tr><td>Home</td><td>行頭へ移動する。</td></tr>
<tr><td>End</td><td>行末へ移動する。</td></tr>
</table>

<p>＜検索＞</p>
<table border="1">
<tr><td>f/F</td><td>文字列を指定して検索する。</td></tr>
<tr><td>n/N</td><td>逆方向へ指定された文字列を検索する。</td></tr>
<tr><td>p/P</td><td>順方向へ指定された文字列を検索する。</td></tr>
</table>

<p>＜編集＞</p>
<table border="1">
<tr><td>a/A</td><td>エントリを追加する。</td></tr>
<tr><td>Enter</td><td>カーソル行のドメインに対するアクセス許可編集画面へ移動する。（ドメイン一覧表示画面でのみ有効）</td></tr>
<tr><td>Space</td><td>カーソル行の選択状態を反転する。</td></tr>
<tr><td>c/C</td><td>カーソル行の選択状態をカーソル行以下の全エントリに適用する。</td></tr>
<tr><td>d/D</td><td>選択されたエントリを削除する。</td></tr>
<tr><td>s/S</td><td>選択されたドメインのプロファイルを変更する。（ドメイン一覧表示画面でのみ有効）</td></tr>
<tr><td>Insert</td><td>選択されたエントリをヒストリバッファに追加する。</td></tr>
</table>

<p>＜その他＞</p>
<table border="1">
<tr><td>q/Q</td><td>終了する。</td></tr>
<tr><td>r/R</td><td>最新の情報に更新する。</td></tr>
<tr><td>w/W</td><td>ウィンドウ選択画面を表示する。</td></tr>
</table>

<p><a href="tool-editpolicy.html.ja">ポリシーエディタの使い方</a>に説明があります。</p>

<h3><a name="ccs-loadpolicy">＜ポリシー再読み込みプログラム　ccs-loadpolicy＞</a></h3>
<p>ディスク上のポリシーをカーネルに読み込む。</p>
<p>以下のコマンドラインオプションを指定可能である。</p>
<ul>
<li>s ・・・システム用ポリシーを再読み込みする。
<li>e ・・・例外用ポリシーを再読み込みする。
<li>d ・・・ドメイン用ポリシーを再読み込みする。
<li>a ・・・上記３種類のポリシーを再読み込みする。
<li>f ・・・ディスク上のポリシーを再読み込みする前に、メモリ上のポリシーを消去する。
<li>p ・・・プロファイル用ポリシーを再読み込みする。 f は指定できない。
<li>m ・・・マネージャ用ポリシーを再読み込みする。 f は指定できない。
<li>u ・・・メモリ使用量の上限を設定する。 f は指定できない。 
<li>- ・・・標準入力から読み込む。 s e d p m u のいずれか１個のみ指定できる。
</ul>

<h3><a name="ccs-setlevel">＜制御レベル変更プログラム　ccs-setlevel＞</a></h3>
<p>プロファイルの内容を変更する。</p>
<p>コマンドラインパラメータで制御レベルを指定する。コマンドラインパラメータの有無に関係なく現在の制御レベルを表示する。</p>

<h3><a name="ccs-setprofile">＜プロファイル割り当てプログラム　ccs-setprofile＞</a></h3>
<p>ドメインに対してプロファイル番号を割り当てる。</p>
<p>コマンドラインパラメータでプロファイル番号とドメイン名を指定する。プロファイル番号が変更されたドメイン名が表示される。</p>

<h3><a name="ccs-ccstree">＜プロセス一覧表示プログラム　ccs-ccstree＞</a></h3>
<p>現在実行中のプロセスが属しているドメインとそのドメインに割り当てられているプロファイルを表示する。</p>
<p>プロファイル番号、プロセス名、プロセスＩＤ、ドメイン名の順番で pstree のように出力される。</p>

<h3><a name="ccs-savepolicy">＜ポリシー保存プログラム　ccs-savepolicy＞</a></h3>
<p>カーネル内のポリシーをディスクに保存する。</p>
<p>以下のコマンドラインオプションを指定可能である。</p>
<ul>
<li>s ・・・システム用ポリシーを保存する。
<li>e ・・・例外用ポリシーを保存する。
<li>d ・・・ドメイン用ポリシーを保存する。
<li>a ・・・上記３種類のポリシーを保存する。
<li>f ・・・ディスク上のポリシーとメモリ上のポリシーが同一内容であっても保存する。
<li>p ・・・プロファイル用ポリシーを保存する。
<li>m ・・・マネージャ用ポリシーを保存する。
<li>u ・・・メモリ使用量を標準出力へ書き出す。 
<li>- ・・・標準出力へ書き出す。 s e d p m u のいずれか１個のみ指定できる。
</ul>

<h3><a name="ccs-auditd">＜アクセスログ保存デーモン　ccs-auditd＞</a></h3>
<p>/proc/ccs/grant_log および /proc/ccs/reject_log の内容をコマンドラインで指定された場所に保存する。</p>
<p>コマンドラインの最初のパラメータがアクセス許可ログを保存するファイル名、２番目のパラメータがアクセス拒否ログを保存するファイル名である。ファイル名として /dev/null を指定しても良い。アクセスログをファイルに保存する必要が無い場合は実行する必要はない。</p>
<p>デーモンとして動作するので、 RedHat Linux の場合、 /etc/rc.d/rc.local で起動すればよい。 /proc/ccs/grant_log および /proc/ccs/reject_log に保持できる件数は、プロファイルの「MAX_GRANT_LOG=数値」および「MAX_REJECT_LOG=数値」という行で指定できる。</p>

<h3><a name="ccs-sortpolicy">＜ポリシー圧縮プログラム　ccs-sortpolicy＞</a></h3>
<p>ccs-auditd により保存されたログから重複を除去する。</p>
<p>ccs-auditd により保存されたログを標準入力から読み込み、ドメイン単位で sort と uniq を行った結果を標準出力へ書き出す。</p>

<h3><a name="ccs-findtemp">＜テンポラリパス検出プログラム　ccs-findtemp＞</a></h3>
<p>標準入力からパス名の一覧を受け取り、全ての存在しないパス名を表示する。</p>
<p>存在しなかったパス名はテンポラリなパス名として使用されている可能性が高いので、同様のパス名から規則性を判断して /etc/ccs/exception_policy.conf および /proc/ccs/exception_policy にパターン化したパス名を追加していく。</p>
<p>/etc/ccs/domain_policy.conf または /proc/ccs/domain_policy の内容をリダイレクトまたはパイプを使用して標準入力へ渡せばよい。</p>

<h3><a name="ccs-ld-watch">＜ライブラリファイルのパス名更新プログラム　ccs-ld-watch＞</a></h3>
<p>/etc/ld.so.cache に登録されている共有ライブラリファイルのパス名の変化を検出し、自動的に allow_read キーワードを使って例外ポリシーに登録する。</p>
<p>このプログラムをソフトウェアのアップデート時に実行しておくことで、共有ライブラリファイルのパス名が変化したために共有ライブラリファイルへアクセスできないことが原因でプログラムの起動に失敗するというエラーを回避することができる。</p>

<h3><a name="ccs-queryd">＜遅延強制モード用アクセス承認プログラム　ccs-queryd＞</a></h3>
<p>ポリシー違反を検出し、要求されたアクセスの内容を表示する。管理者は、その内容の妥当性を判断して許可（あるいは許可およびポリシーへの追加）あるいは拒否をシステムに伝えることができる。</p>
<p>このプログラムをソフトウェアのアップデート時に実行しておくことで、アクセス許可の不足によるエラーを回避することができる。</p>
<p>無条件に要求されたアクセスを許可しないこと。ポリシー違反の原因はパッケージの更新によって発生するものとは限らず、攻撃者による悪意ある要求の可能性もある。もし、攻撃者による悪意ある要求に対して許可を与えてしまった場合、システムに侵入されることになる。</p>

<h3><a name="ccs-notifyd">＜ポリシー違反通知デーモン　ccs-notifyd＞</a></h3>
<p>ポリシー違反を検出し、（メールを送信するなどの）指定された処理を行うことにより、管理者に通知する。</p>
<p>このデーモンを /etc/crontab から起動するように設定しておくことで、強制モードにおけるポリシー違反の発生をできるだけ早く知ることができるようになる。</p>

<h3><a name="ccs-checkpolicy">＜ポリシー構文検査プログラム　ccs-checkpolicy＞</a></h3>
<p>標準入力からポリシーファイルの内容を読み込み、構文をチェックする。</p>
<p>問題があれば行番号と共にエラーの内容を表示する。</p>

<h3><a name="ccs-init">＜ポリシーローダー　ccs-init＞</a></h3>
<p> /etc/ccs/ ディレクトリからポリシーファイルを読み込む。</p>
<p>/sbin/ccs-init に置くことで、 initrd から /sbin/init の実行が要求されたときに自動的に呼び出される。</p>

<h3><a name="ccs-domainmatch">＜アクセス許可検索ツール　ccs-domainmatch＞</a></h3>
<p> /proc/ccs/domain_policy からドメイン単位で fgrep を行う。</p>

<h3><a name="ccs-patternize">＜パス名パターン化ツール　ccs-patternize＞</a></h3>
<p>ドメイン用ポリシーを標準入力から受け取り、コマンドラインに与えられたパス名のパターンと一致した場合はパターン化してから標準出力へ送る。実行許可を含むファイルへのアクセス許可とドメイン名はパターン化されない。</p>

<h3><a name="init_policy.sh">＜ポリシー初期化ツール　init_policy.sh＞</a></h3>
<p>ポリシーの雛型を生成する。自動生成された結果には余計なものや危険なものが含まれているかもしれないため、随時見直しを行うこと。</p>

<h3><a name="force-logout">＜強制ログアウトツール　force-logout＞</a></h3>
<p>このプログラムを実行したユーザの端末をハングアップさせることにより強制的にログアウトさせる。現在のユーザを追い出すために使用する。</p>

<h3><a name="audit-exec-param">＜パラメータ記録ツール　audit-exec-param＞</a></h3>
<p>このプログラムは execve() に渡されたパラメータを syslog に記録してから要求されたプログラムを実行する。</p>
<p>このプログラムをどこかにコピー（例えば cp -p /usr/lib/ccs/audit-exec-param /bin/audit-exec-param ）して使う。例えば Apache の CGI として実行されるプログラムのパラメータを記録したい場合、例外ポリシーに keep_domain /usr/lib/ccs/audit-exec-param from &lt;kernel&gt; /usr/sbin/httpd というエントリを登録することで /bin/audit-exec-param が実行されてもドメイン遷移を行わないようにしておき、 Apache のドメイン（例えば &lt;kernel&gt; /usr/sbin/httpd ドメイン）に対して execute_handler /bin/audit-exec-param というエントリを追加する。</p>

<hr>

<h2><a name="authentication_tool">＜＜ログイン認証強化用ツール＞＞</a></h2>

<h3><a name="falsh">＜ログイン認証用機能限定シェル　falsh＞</a></h3>
<p>kill 等の内部コマンドを持たないシェルである。 /etc/passwd でログインシェルとして指定する。不正ログイン対策として追加のログイン認証を行う場合のみ使用する。</p>
<p>追加のログイン認証を行うためのプログラムは自分で作成することを推奨する。以下のサンプルプログラムをそのまま使用してはいけない。</p>

<h3><a name="honey">＜タイミング付きパスワード認証のサンプルプログラム　honey＞</a></h3>
<p>正しいタイミングで正しいパスワードを入力しないと認証が失敗する。通常の認証ではパスワードを入力するタイミングはチェックしないが、このプログラムではタイミングもチェックすることで、総当り攻撃を防止する。</p>

<h3><a name="candy">＜時間制限付きパスワード認証のサンプルプログラム　candy＞</a></h3>
<p>親プロセスが起動してから１０秒以内に起動して正しいパスワードを入力しないと認証が失敗する。通常の認証では、認証を開始するまでの時間制限を設けていないが、このプログラムでは一定時間内に認証を開始しないと認証が成功しないようにすることで、総当り攻撃を防止する。</p>

<h3><a name="groovy">＜ロックファイルの有無を用いた認証を行うサンプルプログラム　groovy＞</a></h3>
<p>パスワードを入力するためのプロンプトが表示されるが、パスワードの入力内容はチェックせず、 /tmp/.lockme というファイルの有無で認証を行う。普段はロックされた状態にしておくことで、総当り攻撃を防止する。このプログラムはデモ用であり、攻撃者が一目で正解だと判るようなファイル名を使用している。利用する場合は必ずカスタマイズすること。</p>

<h3><a name="checktoken">＜トークンを用いた認証を行うサンプルプログラム　gettoken／checktoken＞</a></h3>
<p>これらのプログラムは時間同期方式でトークンを生成する。 gettoken が生成したトークンを checktoken に渡すことで認証が成功するようになっている。これらはデモ用プログラムであり、トークンの生成アルゴリズムも貧弱である。利用する場合は必ずカスタマイズすること。</p>

<h3><a name="chaplet">＜チャレンジ・ハンドシェイク型の認証を行うサンプルプログラム　chaplet＞</a></h3>
<p>このプログラムを実行すると、チャレンジとして文字列が表示される。表示された文字列の中から、レスポンスとして数字のみを抽出したものを入力することで認証が成功する。このプログラムはデモ用であり、アルゴリズムが単純すぎる。利用する場合は必ずカスタマイズすること。</p>

<h3><a name="timeauth">＜タイミング付きパスワード認証のサンプルプログラム　timeauth＞</a></h3>
<p>これは honey 相当の機能をインタプリタとして再実装したものである。スクリプトファイルを作成し、インタプリタとしてこのプログラムを指定する。</p>

<h3><a name="mailauth">＜メールでワンタイムパスワードを送付する認証を行うサンプルプログラム　mailauth＞</a></h3>
<p>このプログラムを実行するとワンタイムパスワードを生成して電子メールで利用者に通知する。利用者は送られてきたワンタイムパスワードを入力することで認証が成功する。利用する場合はメールサーバ等のソフトウェアが別途必要になる。</p>

<h3><a name="proxy">＜簡易ポート転送プログラム　proxy＞</a></h3>
<p>このプログラムはクライアント側で使用する。特定のローカルポート番号に明示的に bind してからサーバに接続することで、サーバ側のファイアウォール（iptables 等）ではクライアント側の利用しているポート番号によるアクセス制限を行うことが可能になる。</p>

<hr>

<h2><a name="syaoran_tool">＜＜SYAORAN ファイルシステム用ツール＞＞</a></h2>

<h3><a name="makesyaoranconf">＜syaoran 用設定ファイル作成プログラム　makesyaoranconf＞</a></h3>
<p>/dev 用のファイルシステム SYAORAN 用の設定ファイルである syaoran.conf を作成する。ルートファイルシステムが読み込み専用の場合や /dev ディレクトリ内のデバイスファイルの改ざんを防止したい場合に使用する。</p>
<p>syaoran.conf に記録されていないファイルは作成できないので、動的にデバイスファイルが作成される環境の場合はこのプログラムを実行する前に全てのデバイスを接続し、必要なデバイスファイルが全て syaoran.conf に記録されるように注意する。</p>

<h3><a name="syaoran_syntax">SYAORAN filesystem の仕様</a></h3>
<p>ポリシーファイルには、 /dev ディレクトリに存在するエントリのリストが記述されている。<br>
/dev ディレクトリには多数のデバイスファイルが存在しているが、実際にシステムが動作するのに必要なものは少数である。<br>
さらに、デバイスファイルが常に適切なデバイスと関連付けられていることは、システムのセキュリティにとって不可欠である。<br>
例えば、もし /dev/null が char-1-3 という属性ではなく major-8-0 （ /dev/sda ）という属性を持っていた場合、 SCSI ハードディスクの内容は一瞬にして破壊されてしまうだろう。</p>
<p>設定ファイルの書式は以下の通りである。</p>
<p>１行に１エントリを記述する。 各エントリには９個の要素がある。</p>
<table border="1">
<tr>
<td>filename</td>
<td>マウントポイント以降の正規化されたパス名。但し、最初の / は除く。</td>
</tr>
<tr>
<td>permission</td>
<td>８進数で表記されたパーミッション。 000 ～ 777 で指定する。</td>
</tr>
<tr>
<td>owner</td>
<td>１０進数で表記された所有者。</td>
</tr>
<tr>
<td>group</td>
<td>１０進数で表記されたグループ。</td>
</tr>
<tr>
<td>flags</td>
<td>以下の値の論理和。<br>
<ul>
<li>1: マウント後に作成を許可する。</li>
<li>2: マウント後に削除を許可する。</li>
<li>4: マウント後にパーミッションの変更を許可する。</li>
<li>8: マウント後に所有者またはグループの変更を許可する。</li>
<li>16: 内部で使用。デバイスファイルにアクセスされたか否か。</li>
<li>32: マウント時点では作成しない。</li>
</ul>
</td>
</tr>
<tr>
<td>type</td>
<td>デバイスファイルの型。 'd' (ディレクトリ), 'p' (ＦＩＦＯ), 's' (ソケット), 'c' (キャラクタ型デバイス), 'b' (ブロック型デバイス), 'l' (シンボリックリンク) , 'f' (通常ファイル) のいずれかを指定。</td>
</tr>
<tr>
<td>symlink_data</td>
<td>マウント時に作成されるシンボリックリンクの内容。 type が l 以外の場合は不要。</td>
</tr>
<tr>
<td>major</td>
<td>１０進数で表記されたメジャー番号。 type が c または b 以外の場合は不要。</td>
</tr>
<tr>
<td>minor</td>
<td>１０進数で表記されたマイナー番号。 type が c または b 以外の場合は不要。</td>
</tr>
</table>
<p>各行は '\n' で区切られる。</p>
<p>ファイル名・ディレクトリ名の内容は全て正規化した形で指定する。 ただし、ディレクトリ名の末尾の / は省略可能である。</p>
<p>シンボリックリンクの内容は正規化する必要は無い。しかし、空白文字などをシンボリックリンク中に含める場合には \\ および \ooo 形式によるエスケープを行うことが必要である。</p>
<p>使用方法：</p>
<table border="1">
<tr>
<td>Step 1</td>
<td>flags が 0 の状態の設定ファイルを作成する。</td>
</tr>
<tr>
<td>Step 2</td>
<td>accept モードでマウントする。設定ファイルを /etc/ccs/syaoran.conf に作成して /dev にマウントする場合、以下のように実行する。<br>
mount -t syaoran -o accept=/etc/ccs/syaoran.conf none /dev</td>
</tr>
<tr>
<td>Step 3</td>
<td>通常通りシステムを稼動させる。実際のアクセスされた内容に基づき flags の値が更新される。</td>
</tr>
<tr>
<td>Step 4</td>
<td>学習結果はマウントポイント直下にある .syaoran というファイルを通じて読み出すことができるのでこれを適当に編集（不要なシンボリックリンクの削除など）して /etc/ccs/syaoran.conf に保存する。<br>
accept モードでは、実際にオープンされたキャラクタ型デバイスとブロック型デバイスのみが .syaoran に反映されるので、不要なエントリを削除するために利用できる。ディレクトリ、ＦＩＦＯ、ソケット、シンボリックリンク、通常ファイルはオープンされたかどうかに関係なく常に .syaoran に反映される。</td>
</tr>
<tr>
<td>Step 5</td>
<td>アンマウントする。</td>
</tr>
<tr>
<td>Step 6</td>
<td>enforce モードでマウントする場合は、<br>
mount -t syaoran -o enforce=/etc/ccs/syaoran.conf none /dev<br>
を実行する。 enforce モードでは、 flags の値が更新されることは無い。<br>
エントリ不足などによりポリシー違反が発生すると SYAORAN-ERROR: というメッセージが表示される。以下のコマンドを用いて知ることができる。<br>
dmesg | grep ^SYAORAN-ERROR:</td>
</tr>
</table>
<p>カーネルのコマンドラインに SYAORAN=accept または SYAORAN=enforce と指定することで、デフォルトのモードを指定できる。デフォルトのモードを指定した場合は、マウント時に accept= または enforce= を省略することができる。</p>

<h3>ポリシーファイルの例</h3>
<p>必要なエントリはシステム毎に異なります。</p>
<table border="0">
<tr>
<td>#filename</td>
<td>permission</td>
<td>owner</td>
<td>group</td>
<td>flags</td>
<td>type</td>
<td colspan="2">[ symlink_data | major minor ]</td>
</tr>
<tr>
<td>pts</td>
<td>755</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>d</td>
</tr>
<tr>
<td>shm</td>
<td>755</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>d</td>
</tr>
<tr>
<td>fd</td>
<td>777</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>l</td>
<td>/proc/self/fd</td>
</tr>
<tr>
<td>stdin</td>
<td>777</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>l</td>
<td>/proc/self/fd/0</td>
</tr>
<tr>
<td>stdout</td>
<td>777</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>l</td>
<td>/proc/self/fd/1</td>
</tr>
<tr>
<td>stderr</td>
<td>777</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>l</td>
<td>/proc/self/fd/2</td>
</tr>
<tr>
<td>null</td>
<td>666</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>c</td>
<td>1</td>
<td>3</td>
</tr>
<tr>
<td>zero</td>
<td>666</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>c</td>
<td>1</td>
<td>5</td>
</tr>
<tr>
<td>random</td>
<td>644</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>c</td>
<td>1</td>
<td>8</td>
</tr>
<tr>
<td>urandom</td>
<td>644</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>c</td>
<td>1</td>
<td>9</td>
</tr>
<tr>
<td>tty</td>
<td>666</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>c</td>
<td>5</td>
<td>0</td>
</tr>
<tr>
<td>tty0</td>
<td>600</td>
<td>0</td>
<td>0</td>
<td>12</td>
<td>c</td>
<td>4</td>
<td>0</td>
</tr>
<tr>
<td>tty1</td>
<td>600</td>
<td>0</td>
<td>0</td>
<td>12</td>
<td>c</td>
<td>4</td>
<td>1</td>
</tr>
<tr>
<td>tty2</td>
<td>600</td>
<td>0</td>
<td>0</td>
<td>12</td>
<td>c</td>
<td>4</td>
<td>2</td>
</tr>
<tr>
<td>tty3</td>
<td>600</td>
<td>0</td>
<td>0</td>
<td>12</td>
<td>c</td>
<td>4</td>
<td>3</td>
</tr>
<tr>
<td>tty4</td>
<td>600</td>
<td>0</td>
<td>0</td>
<td>12</td>
<td>c</td>
<td>4</td>
<td>4</td>
</tr>
<tr>
<td>tty5</td>
<td>600</td>
<td>0</td>
<td>0</td>
<td>12</td>
<td>c</td>
<td>4</td>
<td>5</td>
</tr>
<tr>
<td>tty6</td>
<td>600</td>
<td>0</td>
<td>0</td>
<td>12</td>
<td>c</td>
<td>4</td>
<td>6</td>
</tr>
<tr>
<td>tty7</td>
<td>600</td>
<td>0</td>
<td>0</td>
<td>12</td>
<td>c</td>
<td>4</td>
<td>7</td>
</tr>
<tr>
<td>tty8</td>
<td>600</td>
<td>0</td>
<td>0</td>
<td>12</td>
<td>c</td>
<td>4</td>
<td>8</td>
</tr>
<tr>
<td>cdrom</td>
<td>777</td>
<td>0</td>
<td>0</td>
<td>3</td>
<td>l</td>
<td>/dev/scd0</td>
</tr>
<tr>
<td>mouse</td>
<td>777</td>
<td>0</td>
<td>0</td>
<td>3</td>
<td>l</td>
<td>psaux</td>
</tr>
<tr>
<td>console</td>
<td>600</td>
<td>0</td>
<td>0</td>
<td>1</td>
<td>c</td>
<td>5</td>
<td>1</td>
</tr>
<tr>
<td>fd0</td>
<td>660</td>
<td>0</td>
<td>19</td>
<td>0</td>
<td>b</td>
<td>2</td>
<td>0</td>
</tr>
<tr>
<td>fd1</td>
<td>660</td>
<td>0</td>
<td>19</td>
<td>0</td>
<td>b</td>
<td>2</td>
<td>1</td>
</tr>
<tr>
<td>fd2</td>
<td>660</td>
<td>0</td>
<td>19</td>
<td>0</td>
<td>b</td>
<td>2</td>
<td>2</td>
</tr>
<tr>
<td>fd3</td>
<td>660</td>
<td>0</td>
<td>19</td>
<td>0</td>
<td>b</td>
<td>2</td>
<td>3</td>
</tr>
<tr>
<td>hda</td>
<td>660</td>
<td>0</td>
<td>6</td>
<td>0</td>
<td>b</td>
<td>3</td>
<td>0</td>
</tr>
<tr>
<td>hda1</td>
<td>660</td>
<td>0</td>
<td>6</td>
<td>0</td>
<td>b</td>
<td>3</td>
<td>1</td>
</tr>
<tr>
<td>hda2</td>
<td>660</td>
<td>0</td>
<td>6</td>
<td>0</td>
<td>b</td>
<td>3</td>
<td>2</td>
</tr>
<tr>
<td>hda3</td>
<td>660</td>
<td>0</td>
<td>6</td>
<td>0</td>
<td>b</td>
<td>3</td>
<td>3</td>
</tr>
<tr>
<td>hda5</td>
<td>660</td>
<td>0</td>
<td>6</td>
<td>0</td>
<td>b</td>
<td>3</td>
<td>5</td>
</tr>
<tr>
<td>hda6</td>
<td>660</td>
<td>0</td>
<td>6</td>
<td>0</td>
<td>b</td>
<td>3</td>
<td>6</td>
</tr>
<tr>
<td>hda7</td>
<td>660</td>
<td>0</td>
<td>6</td>
<td>0</td>
<td>b</td>
<td>3</td>
<td>7</td>
</tr>
<tr>
<td>hda8</td>
<td>660</td>
<td>0</td>
<td>6</td>
<td>0</td>
<td>b</td>
<td>3</td>
<td>8</td>
</tr>
<tr>
<td>hda9</td>
<td>660</td>
<td>0</td>
<td>6</td>
<td>0</td>
<td>b</td>
<td>3</td>
<td>9</td>
</tr>
<tr>
<td>hda10</td>
<td>660</td>
<td>0</td>
<td>6</td>
<td>0</td>
<td>b</td>
<td>3</td>
<td>10</td>
</tr>
<tr>
<td>hda11</td>
<td>660</td>
<td>0</td>
<td>6</td>
<td>0</td>
<td>b</td>
<td>3</td>
<td>11</td>
</tr>
<tr>
<td>hda12</td>
<td>660</td>
<td>0</td>
<td>6</td>
<td>0</td>
<td>b</td>
<td>3</td>
<td>12</td>
</tr>
<tr>
<td>initctl</td>
<td>600</td>
<td>0</td>
<td>0</td>
<td>3</td>
<td>p</td>
</tr>
<tr>
<td>log</td>
<td>666</td>
<td>0</td>
<td>0</td>
<td>15</td>
<td>s</td>
</tr>
<tr>
<td>rtc</td>
<td>644</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>c</td>
<td>10</td>
<td>135</td>
</tr>
<tr>
<td>ptmx</td>
<td>666</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>c</td>
<td>5</td>
<td>2</td>
</tr>
<tr>
<td>ram</td>
<td>777</td>
<td>0</td>
<td>0</td>
<td>3</td>
<td>l</td>
<td>/dev/ram0</td>
</tr>
<tr>
<td>ram0</td>
<td>660</td>
<td>0</td>
<td>6</td>
<td>0</td>
<td>b</td>
<td>1</td>
<td>0</td>
</tr>
<tr>
<td>ram1</td>
<td>660</td>
<td>0</td>
<td>6</td>
<td>0</td>
<td>b</td>
<td>1</td>
<td>1</td>
</tr>
<tr>
<td>sda</td>
<td>660</td>
<td>0</td>
<td>6</td>
<td>0</td>
<td>b</td>
<td>8</td>
<td>0</td>
</tr>
<tr>
<td>initrd</td>
<td>660</td>
<td>0</td>
<td>6</td>
<td>1</td>
<td>b</td>
<td>1</td>
<td>250</td>
</tr>
<tr>
<td>psaux</td>
<td>600</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>c</td>
<td>10</td>
<td>1</td>
</tr>
<tr>
<td>apm_bios</td>
<td>600</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>c</td>
<td>10</td>
<td>134</td>
</tr>
<tr>
<td>cpu</td>
<td>755</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>d</td>
</tr>
<tr>
<td>cpu/0</td>
<td>755</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>d</td>
</tr>
<tr>
<td>cpu/0/microcode</td>
<td>600</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>c</td>
<td>10</td>
<td>184</td>
</tr>
<tr>
<td>ttyS0</td>
<td>660</td>
<td>0</td>
<td>14</td>
<td>0</td>
<td>c</td>
<td>4</td>
<td>64</td>
</tr>
<tr>
<td>ttyS1</td>
<td>660</td>
<td>0</td>
<td>14</td>
<td>0</td>
<td>c</td>
<td>4</td>
<td>65</td>
</tr>
<tr>
<td>ttyS2</td>
<td>660</td>
<td>0</td>
<td>14</td>
<td>0</td>
<td>c</td>
<td>4</td>
<td>66</td>
</tr>
<tr>
<td>ttyS3</td>
<td>660</td>
<td>0</td>
<td>14</td>
<td>0</td>
<td>c</td>
<td>4</td>
<td>67</td>
</tr>
<tr>
<td>ptal-printd</td>
<td>777</td>
<td>0</td>
<td>0</td>
<td>3</td>
<td>l</td>
<td>/var/run/ptal-printd</td>
</tr>
<tr>
<td>gpmctl</td>
<td>700</td>
<td>0</td>
<td>0</td>
<td>3</td>
<td>s</td>
</tr>
<tr>
<td>scd0</td>
<td>660</td>
<td>0</td>
<td>6</td>
<td>0</td>
<td>b</td>
<td>11</td>
<td>0</td>
</tr>
</table>

<hr>

<p><a href="index.html.ja">目次へ戻る</a></p>
<p><a href="http://sourceforge.jp/"><img src="http://sourceforge.jp/sflogo.php?group_id=1973" width="96" height="31" alt="SourceForge.jp"></a></p>
</body>
</html>
