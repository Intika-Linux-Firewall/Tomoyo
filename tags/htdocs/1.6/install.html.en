<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
<meta http-equiv="Content-Style-Type" content="text/css">
<title>TOMOYO Linux Install manual</title>
<link rel="stylesheet" href="http://tomoyo.sourceforge.jp/tomoyo.css" media="all" type="text/css">
</head>
<body>
<p>Info: Version <a href="../1.7/">1.7.x</a> is available.</p>
<p style="text-align:right;"><a href="install.html.ja">Japanese Page</a></p>
<p style="text-align:right;">Last modified: $Date$</p>
<h1>Phase 1: Installing TOMOYO Linux kernels and tools.</h1>

<p>This page describes how to install TOMOYO Linux's kernel and userland tools.</p>

<hr>

<p>There are three ways to install. Choose one of "Step 1-A" / "Step 1-B" / "Step 1-C" depending on your environment and your requirement.</p>

<ul>
<li><a href="#install_from_repository">Step 1-A: Installing binary packages from repository</a></li>
<li><a href="#install_manually">Step 1-B: Installing binary packages manually</a></li>
<li><a href="#install_from_source">Step 1-C: Installing from source</a></li>
</ul>

<h2><a name="install_from_repository">Step 1-A: Installing binary packages from repository</a></h2>

<p>TOMOYO Linux provides some binary kernel packages and binary tool packages for i686 architecture.</p>

<p>If your environment matches the list below and CPU is i686, you can install from repository.</p>

<ul>
<li>Fedora 11</li>
<li>CentOS 3.9/4.8/5.5</li>
<li>OpenSUSE 11.0/11.1</li>
<li>Vine Linux 4.2/5.1</li>
<li>Asianux 3.0</li>
</ul>

<p>To install from repository, do the following operation.</p>

<table border="1">
<tr><td>
Fedora 11 (for i586 and later)</td><td>
[root@tomoyo ~]# wget http://I-love.SAKURA.ne.jp/kumaneko-key<br>
[root@tomoyo ~]# rpm --import kumaneko-key<br>
[root@tomoyo ~]# wget -O /etc/yum.repos.d/ccs.repo http://tomoyo.sourceforge.jp/repos/Fedora11/ccs.repo<br>
[root@tomoyo ~]# yum install ccs-kernel ccs-tools
</td></tr><tr><td>
CentOS 3.9 (for i686 and later)</td><td>
[root@tomoyo ~]# wget http://I-love.SAKURA.ne.jp/kumaneko-key<br>
[root@tomoyo ~]# rpm --import kumaneko-key<br>
[root@tomoyo ~]# curl http://tomoyo.sourceforge.jp/repos/CentOS3/ccs.repo >> /etc/yum.conf<br>
[root@tomoyo ~]# yum install ccs-kernel-smp ccs-tools
</td></tr><tr><td>
CentOS 4.8 (for i586 and later)</td><td>
[root@tomoyo ~]# wget http://I-love.SAKURA.ne.jp/kumaneko-key<br>
[root@tomoyo ~]# rpm --import kumaneko-key<br>
[root@tomoyo ~]# wget -O /etc/yum.repos.d/ccs.repo http://tomoyo.sourceforge.jp/repos/CentOS4/ccs.repo<br>
[root@tomoyo ~]# yum install ccs-kernel-smp ccs-tools
</td></tr><tr><td>
CentOS 5.5 (for i686 and later)</td><td>
[root@tomoyo ~]# wget http://I-love.SAKURA.ne.jp/kumaneko-key<br>
[root@tomoyo ~]# rpm --import kumaneko-key<br>
[root@tomoyo ~]# wget -O /etc/yum.repos.d/ccs.repo http://tomoyo.sourceforge.jp/repos/CentOS5/ccs.repo<br>
[root@tomoyo ~]# yum install ccs-kernel ccs-tools
</td></tr><tr><td>
Asianux 3 (for i686 and later)</td><td>
[root@tomoyo ~]# wget http://I-love.SAKURA.ne.jp/kumaneko-key<br>
[root@tomoyo ~]# rpm --import kumaneko-key<br>
[root@tomoyo ~]# wget -O /etc/yum.repos.d/ccs.repo http://tomoyo.sourceforge.jp/repos/Asianux3/ccs.repo<br>
[root@tomoyo ~]# yum install ccs-kernel ccs-tools
</td></tr><tr><td>
Vine Linux 4.2 (for i686 and later)</td><td>
[root@tomoyo ~]# wget http://I-love.SAKURA.ne.jp/kumaneko-key<br>
[root@tomoyo ~]# rpm --import kumaneko-key<br>
[root@tomoyo ~]# echo "repomd http://tomoyo.sourceforge.jp/ repos/VineLinux4/" &gt;&gt; /etc/apt/sources.list<br>
[root@tomoyo ~]# apt-get update<br>
[root@tomoyo ~]# apt-get install ccs-kernel ccs-tools
</td></tr><tr><td>
Vine Linux 5.1 (for i586 and later)</td><td>
[root@tomoyo ~]# wget http://I-love.SAKURA.ne.jp/kumaneko-key<br>
[root@tomoyo ~]# rpm --import kumaneko-key<br>
[root@tomoyo ~]# echo "repomd http://tomoyo.sourceforge.jp/ repos/VineLinux5/" &gt;&gt; /etc/apt/sources.list<br>
[root@tomoyo ~]# apt-get update<br>
[root@tomoyo ~]# apt-get install ccs-kernel ccs-tools
</td></tr><tr><td>
OpenSUSE 11.0 (for i586 and later)</td><td>
[root@tomoyo ~]# zypper addrepo --type=YUM http://tomoyo.sourceforge.jp/repos/SUSE11.0/ ccs<br>
[root@tomoyo ~]# zypper install ccs-kernel-default ccs-tools
</td></tr><tr><td>
OpenSUSE 11.1 (for i586 and later)</td><td>
[root@tomoyo ~]# zypper addrepo --type=YUM http://tomoyo.sourceforge.jp/repos/SUSE11.1/ ccs<br>
[root@tomoyo ~]# zypper install ccs-kernel-default ccs-tools
</td></tr>
</table>

<hr>

<h2><a name="install_manually">Step 1-B: Installing binary packages manually</a></h2>

<p>If your environment matches the list below, you can install binary packages manually.</p>

<ul>
<li>Debian Etch/Lenny</li>
<li>Asianux 2.0</li>
<li>Ubuntu 6.06/8.04/8.10/9.04</li>
</ul>

<p>To install binary packages, download the following files and install them.</p>

<table border="1">
<tr><td>
Debian Etch</td><td>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/32751/linux-image-2.6.18-6-686-ccs1.6.8p3-i686_2.6.18.dfsg.1-26etch2_i386.deb
<br>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/32751/ccs-tools_1.6.8-4_i386.deb
</td></tr><tr><td>
Debian Lenny</td><td>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/32752/linux-image-2.6.26-2-686-ccs1.6.8p3-i686_2.6.26-24lenny1_i386.deb
<br>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/32752/ccs-tools_1.6.8-4_i386.deb
</td></tr><tr><td>
Asianux 2.0</td><td>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/32428/ccs-kernel-smp-2.6.9-89.13_tomoyo_1.6.8p3.i686.rpm
<br>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/32428/ccs-tools-1.6.8-4.i386.rpm
</td></tr><tr><td>
Ubuntu 6.06</td><td>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/32745/linux-image-2.6.15-55-686-ccs1.6.8p3_2.6.15-55.87_i386.deb
<br>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/32745/linux-headers-2.6.15-55-686-ccs1.6.8p3_2.6.15-55.87_i386.deb
<br>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/32745/linux-restricted-modules-2.6.15-55-686-ccs1.6.8p3_2.6.15.12-55.6_i386.deb
<br>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/32745/ccs-tools_1.6.8-4_i386.deb
</td></tr><tr><td>
Ubuntu 8.04</td><td>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/32749/linux-image-2.6.24-28-ccs1.6.8p3_2.6.24-28.77_i386.deb
<br>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/32749/linux-ubuntu-modules-2.6.24-28-ccs1.6.8p3_2.6.24-28.46_i386.deb
<br>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/32749/linux-restricted-modules-2.6.24-28-ccs1.6.8p3_2.6.24.18-28.6_i386.deb
<br>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/32749/linux-headers-2.6.24-28-ccs1.6.8p3_2.6.24-28.77_i386.deb
<br>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/32749/linux-headers-lum-2.6.24-28-ccs1.6.8p3_2.6.24-28.46_i386.deb
<br>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/32749/ccs-tools_1.6.8-4_i386.deb
</td></tr><tr><td>
Ubuntu 8.10</td><td>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/33545/linux-image-2.6.27-17-ccs1.6.8p3_2.6.27-17.46_i386.deb
<br>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/33545/linux-headers-2.6.27-17-ccs1.6.8p3_2.6.27-17.46_i386.deb
<br>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/33545/linux-restricted-modules-2.6.27-16-ccs1.6.8p3_2.6.27-16.22_i386.deb
<br>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/33545/ccs-tools_1.6.8-2_i386.deb
</td></tr><tr><td>
Ubuntu 9.04</td><td>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/38843/linux-image-2.6.28-19-ccs1.6.8p3_2.6.28-19.64_i386.deb
<br>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/38843/linux-headers-2.6.28-19-ccs1.6.8p3_2.6.28-19.64_i386.deb
<br>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/38843/linux-restricted-modules-2.6.28-19-ccs1.6.8p3_2.6.28-19.24_i386.deb
<br>
http://sourceforge.jp/frs/redir.php?f=/tomoyo/38843/ccs-tools_1.6.8-4_i386.deb
</td></tr>
</table>

<p>If you are using Gentoo, see <a href="#Gentoo">Gentoo</a>. To install tools for Gentoo, run "emerge ccs-tools".</p>

<hr>

<h2><a name="install_from_source">Step 1-C: Installing from source</a></h2>

<p>If the CPU architecture differs or you want to customize kernel configuration, you need to compile kernel.</p>

<p>To compile tool, run the following commands.</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# wget http://sourceforge.jp/frs/redir.php?f=/tomoyo/30298/ccs-tools-1.6.8-20100115.tar.gz<br>
[root@tomoyo ~]# tar -zxf ccs-tools-1.6.8-20100115.tar.gz<br>
[root@tomoyo ~]# make -C ccstools/ install
</td></tr>
</table>

<p>To compile kernel, the following packages are needed.</p>

<ul>
<li>gcc</li>
<li>make</li>
<li>ncurses</li>
</ul>

<p>Run "make menuconfig" and choose the following options in "File systems" section.</p>

<ul>
<li>[*] SAKURA (Domain-Free Mandatory Access Control) support</li>
<li>[*] TOMOYO (Domain-Based Mandatory Access Control) support</li>
<li>(2048) Default maximal count for learning mode</li>
<li>(/sbin/modprobe /sbin/hotplug) Built-in domain initializer programs</li>
<li>[*]&nbsp;&nbsp;&nbsp;Auditing interface support</li>
<li>(1024)&nbsp;&nbsp;Default maximal count for grant log</li>
<li>(1024)&nbsp;&nbsp;Default maximal count for reject log</li>
<li>&lt;M&gt; SYAORAN (Tamper-Proof Device Filesystem) support</li>
</ul>

<p>The 2.6 kernels have a compilation option named CONFIG_DEBUG_INFO. If this option is enabled, the compiled code's size becomes about 10 times larger. Enabling this option consumes about 1 GB of extra disk space for /usr/src/ directory and about 300 MB of extra disk space for /lib/modules/ directory.<br>
To save disk space, disable the following option.</p>

<table border="1">
<tr><td>
Kernel hacking ---&gt;[&nbsp;] &nbsp;&nbsp;Compile the kernel with debug info
</td></tr>
</table>

<p>Choose the version you want to use from the following list.</p>

<table border="1">
<tr><td>
<a name="2.6-vanilla">Vanilla 2.6 kernels</a><br>
(2.6.11 and later are supported.)
</td><td>
# Move to the source directory.<br>
cd /usr/src/<br>
# Download kernel source.<br>
wget http://www.kernel.org/pub/linux/kernel/v2.6/linux-2.6.31.14.tar.bz2<br>
# Extract.<br>
tar -jxf linux-2.6.31.14.tar.bz2<br>
# Move to the extracted directory.<br>
cd linux-2.6.31.14<br>
# Remove world writable permissions from the source code.<br>
find -print0 | xargs -0 chmod go-w --<br>
# Download TOMOYO Linux's kernel patch.<br>
wget http://sourceforge.jp/frs/redir.php?f=/tomoyo/30297/ccs-patch-1.6.8-20100804.tar.gz<br>
# Check signature.<br>
wget http://sourceforge.jp/frs/redir.php?f=/tomoyo/30297/ccs-patch-1.6.8-20100804.tar.gz.asc<br>
gpg ccs-patch-1.6.8-20100804.tar.gz.asc<br>
# Extract.<br>
tar -zxf ccs-patch-1.6.8-20100804.tar.gz<br>
# Apply the kernel patch.<br>
patch -sp1 &lt; patches/ccs-patch-2.6.31.diff<br>
# Enable options for TOMOYO Linux.<br>
make -s menuconfig<br>
# Compile as usual.<br>
make -s<br>
make -s modules modules_install install
</td></tr><tr><td>
<a name="2.4-vanilla">Vanilla 2.4 kernels</a><br>
(2.4.30 and later are supported.)
</td><td>
# Move to the source directory.<br>
cd /usr/src/<br>
# Download kernel source.<br>
wget http://www.kernel.org/pub/linux/kernel/v2.4/linux-2.4.37.10.tar.bz2<br>
# Extract.<br>
tar -jxf linux-2.4.37.10.tar.bz2<br>
# Move to the extracted directory.<br>
cd linux-2.4.37.10<br>
# Remove world writable permissions from the source code.<br>
find -print0 | xargs -0 chmod go-w --<br>
# Download TOMOYO Linux's kernel patch.<br>
wget http://sourceforge.jp/frs/redir.php?f=/tomoyo/30297/ccs-patch-1.6.8-20100804.tar.gz<br>
# Check signature.<br>
wget http://sourceforge.jp/frs/redir.php?f=/tomoyo/30297/ccs-patch-1.6.8-20100804.tar.gz.asc<br>
gpg ccs-patch-1.6.8-20100804.tar.gz.asc<br>
# Extract.<br>
tar -zxf ccs-patch-1.6.8-20100804.tar.gz<br>
# Apply the kernel patch.<br>
patch -sp1 &lt; patches/ccs-patch-2.4.37.diff<br>
# Enable options for TOMOYO Linux.<br>
make -s menuconfig<br>
# Compile as usual.<br>
make -s dep<br>
make -s<br>
make -s modules modules_install install
</td></tr><tr><td>
<a name="Fedora11">Fedora 11</a>
</td><td>
# Download build script.<br>
wget -O build-f11-2.6.30.sh 'http://svn.sourceforge.jp/cgi-bin/viewcvs.cgi/*checkout*/trunk/1.6.x/ccs-patch/specs/build-f11-2.6.30.sh?root=tomoyo'<br>
# Run build script.<br>
sh build-f11-2.6.30.sh<br>
# Start compilation.<br>
rpmbuild -bb --target i586 /root/rpmbuild/SPECS/ccs-kernel.spec
</td></tr><tr><td>
<a name="CentOS3.9">CentOS 3.9</a>
</td><td>
# Download build script.<br>
wget -O build-c3-2.4.21.sh 'http://svn.sourceforge.jp/cgi-bin/viewcvs.cgi/*checkout*/trunk/1.6.x/ccs-patch/specs/build-c3-2.4.21.sh?root=tomoyo'<br>
# Run build script.<br>
sh build-c3-2.4.21.sh<br>
# Start compilation.<br>
rpmbuild -bb --target i586 /tmp/ccs-kernel.spec
</td></tr><tr><td>
<a name="CentOS4.8">CentOS 4.8</a>
</td><td>
# Download build script.<br>
wget -O build-c4-2.6.9.sh 'http://svn.sourceforge.jp/cgi-bin/viewcvs.cgi/*checkout*/trunk/1.6.x/ccs-patch/specs/build-c4-2.6.9.sh?root=tomoyo'<br>
# Run build script.<br>
sh build-c4-2.6.9.sh<br>
# Start compilation.<br>
rpmbuild -bb --target i586 /tmp/ccs-kernel.spec
</td></tr><tr><td>
<a name="CentOS5.5">CentOS 5.5</a>
</td><td>
# Download build script.<br>
wget -O build-c5-2.6.18.sh 'http://svn.sourceforge.jp/cgi-bin/viewcvs.cgi/*checkout*/trunk/1.6.x/ccs-patch/specs/build-c5-2.6.18.sh?root=tomoyo'<br>
# Run build script.<br>
sh build-c5-2.6.18.sh<br>
# Start compilation.<br>
rpmbuild -bb --target i686 --without kabichk /tmp/ccs-kernel.spec
</td></tr><tr><td>
<a name="Etch">Debian Etch</a>
</td><td>
# Download build script.<br>
wget -O build-debian_etch.sh 'http://svn.sourceforge.jp/cgi-bin/viewcvs.cgi/*checkout*/trunk/1.6.x/ccs-patch/specs/build-debian_etch.sh?root=tomoyo'<br>
# Run build script.<br>
sh build-debian_etch.sh<br>
</td></tr><tr><td>
<a name="Lenny">Debian Lenny</a>
</td><td>
# Download build script.<br>
wget -O build-debian_lenny.sh 'http://svn.sourceforge.jp/cgi-bin/viewcvs.cgi/*checkout*/trunk/1.6.x/ccs-patch/specs/build-debian_lenny.sh?root=tomoyo'<br>
# Run build script.<br>
sh build-debian_lenny.sh<br>
</td></tr><tr><td>
<a name="OpenSUSE11.0">OpenSUSE 11.0</a>
</td><td>
# Download build script.<br>
wget -O build-suse11.0-2.6.25.sh 'http://svn.sourceforge.jp/cgi-bin/viewcvs.cgi/*checkout*/trunk/1.6.x/ccs-patch/specs/build-suse11.0-2.6.25.sh?root=tomoyo'<br>
# Run build script.<br>
sh build-suse11.0-2.6.25.sh<br>
# Start compilation.<br>
rpmbuild -bb --target i586 /tmp/ccs-kernel.spec
</td></tr><tr><td>
<a name="OpenSUSE11.1">OpenSUSE 11.1</a>
</td><td>
# Download build script.<br>
wget -O build-suse11.1-2.6.27.sh 'http://svn.sourceforge.jp/cgi-bin/viewcvs.cgi/*checkout*/trunk/1.6.x/ccs-patch/specs/build-suse11.1-2.6.27.sh?root=tomoyo'<br>
# Run build script.<br>
sh build-suse11.1-2.6.27.sh<br>
# Start compilation.<br>
rpmbuild -bb --target i586 /tmp/ccs-kernel.spec
</td></tr><tr><td>
<a name="Asianux2">Asianux 2.0</a>
</td><td>
# Download build script.<br>
wget -O build-ax2-2.6.9.sh 'http://svn.sourceforge.jp/cgi-bin/viewcvs.cgi/*checkout*/trunk/1.6.x/ccs-patch/specs/build-ax2-2.6.9.sh?root=tomoyo'<br>
# Run build script.<br>
sh build-ax2-2.6.9.sh<br>
# Start compilation.<br>
rpmbuild -bb --target i686 /tmp/ccs-kernel.spec
</td></tr><tr><td>
<a name="Asianux3">Asianux 3.0</a>
</td><td>
# Download build script.<br>
wget -O build-ax3-2.6.18.sh 'http://svn.sourceforge.jp/cgi-bin/viewcvs.cgi/*checkout*/trunk/1.6.x/ccs-patch/specs/build-ax3-2.6.18.sh?root=tomoyo'<br>
# Run build script.<br>
sh build-ax3-2.6.18.sh<br>
# Start compilation.<br>
rpmbuild -bb --target i686 --without kabichk /tmp/ccs-kernel.spec
</td></tr><tr><td>
<a name="Ubuntu6.06">Ubuntu 6.06</a>
</td><td>
# Download build script.<br>
wget -O build-ubuntu_6.06.sh 'http://svn.sourceforge.jp/cgi-bin/viewcvs.cgi/*checkout*/trunk/1.6.x/ccs-patch/specs/build-ubuntu_6.06.sh?root=tomoyo'<br>
# Run build script.<br>
sh build-ubuntu_6.06.sh<br>
</td></tr><tr><td>
<a name="Ubuntu8.04">Ubuntu 8.04</a>
</td><td>
# Download build script.<br>
wget -O build-ubuntu_8.04.sh 'http://svn.sourceforge.jp/cgi-bin/viewcvs.cgi/*checkout*/trunk/1.6.x/ccs-patch/specs/build-ubuntu_8.04.sh?root=tomoyo'<br>
# Run build script.<br>
sh build-ubuntu_8.04.sh<br>
</td></tr><tr><td>
<a name="Ubuntu8.10">Ubuntu 8.10</a>
</td><td>
# Download build script.<br>
wget -O build-ubuntu_8.10.sh 'http://svn.sourceforge.jp/cgi-bin/viewcvs.cgi/*checkout*/trunk/1.6.x/ccs-patch/specs/build-ubuntu_8.10.sh?root=tomoyo'<br>
# Run build script.<br>
sh build-ubuntu_8.10.sh<br>
</td></tr><tr><td>
<a name="Ubuntu9.04">Ubuntu 9.04</a>
</td><td>
# Download build script.<br>
wget -O build-ubuntu_9.04.sh 'http://svn.sourceforge.jp/cgi-bin/viewcvs.cgi/*checkout*/trunk/1.6.x/ccs-patch/specs/build-ubuntu_9.04.sh?root=tomoyo'<br>
# Run build script.<br>
sh build-ubuntu_9.04.sh<br>
</td></tr><tr><td>
<a name="VineLinux4.2">VineLinux 4.2</a>
</td><td>
# Download build script.<br>
wget -O build-vl4.2-2.6.16.sh 'http://svn.sourceforge.jp/cgi-bin/viewcvs.cgi/*checkout*/trunk/1.6.x/ccs-patch/specs/build-vl4.2-2.6.16.sh?root=tomoyo'<br>
# Run build script.<br>
sh build-vl4.2-2.6.16.sh<br>
# Start compilation.<br>
rpmbuild -bb --target i586 /tmp/ccs-kernel.spec
</td></tr><tr><td>
<a name="VineLinux5.1">VineLinux 5.1</a>
</td><td>
# Download build script.<br>
wget -O build-vl5.1-2.6.27.sh 'http://svn.sourceforge.jp/cgi-bin/viewcvs.cgi/*checkout*/trunk/1.6.x/ccs-patch/specs/build-vl5.1-2.6.27.sh?root=tomoyo'<br>
# Run build script.<br>
sh build-vl5.1-2.6.27.sh<br>
# Start compilation.<br>
rpmbuild -bb --target i586 /tmp/ccs-kernel.spec
</td></tr><tr><td>
<a name="Gentoo">Gentoo</a>
</td><td>
# Install layman package.<br>
emerge layman<br>
# Install subversion package.<br>
emerge subversion<br>
# Add sunrise repository.<br>
layman -f -a sunrise<br>
# Configure /etc/make.conf to include layman's make.conf .<br>
echo "source /usr/local/portage/layman/make.conf" &gt;&gt; /etc/make.conf<br>
# Download kernel source.<br>
emerge ccs-sources<br>
# Run genkernel to build.<br>
genkernel --menuconfig all<br>
# Configure grub . See http://www.gentoo.org/doc/en/kernel-upgrade.xml for detail.<br>
</td></tr>
</table>

<hr>

<p><a href="index.html.en">Return to index page.</a></p>
<p><a href="http://sourceforge.jp/"><img src="http://sourceforge.jp/sflogo.php?group_id=1973" width="96" height="31" alt="SourceForge.jp"></a></p>
</body>
</html>
