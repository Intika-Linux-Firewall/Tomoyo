<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
<meta http-equiv="Content-Style-Type" content="text/css">
<title>TOMOYO Linux Install manual</title>
<link rel="stylesheet" href="http://tomoyo.osdn.jp/tomoyo.css" media="all" type="text/css">
</head>
<body>
<p style="text-align:right;"><a href="phase-1.html.ja">Japanese Page</a></p>
<p style="text-align:right;">Last modified: $Date$</p>
<h1>Phase 1: Installation and initialization</h1>

<p style="text-align:center;">Aim: to install the TOMOYO Linux kernel and userland tools and prepare the system for analysis and/or restriction.</p>

<hr>

<h2><a name="1.1">Step 1.1: Install dependencies</a></h2>

<p>These packages are required for compiling the kernel and the userspace tools:</p>
<ul>
<li><b>wget</b>: to download sources</li>
<li><b>patch</b>: to patch the kernel</li>
<li><b>gcc</b>: to build the kernel and tools</li>
<li><b>make</b>: to build the kernel and tools</li>
<li><b>ncurses</b>: for the tools user interface</li>
</ul>

<p>These can be installed with the following commands:</p>

<table border="1" summary="">
<tr><td>RedHat distributions</td><td>
[root@tomoyo ~]# yum -y install wget patch gcc make ncurses-devel
</td></tr>
<tr><td>Debian distributions</td><td>
[root@tomoyo ~]# apt-get -y install wget patch gcc make libncurses-dev
</td></tr>
<tr><td>SUSE distributions</td><td>
[root@tomoyo ~]# yast -i wget patch gcc make ncurses-devel
</td></tr>
</table>

<br>

<hr>

<h2><a name="1.2">Step 1.2: Install the kernel</a></h2>

<h3>Download and patch the kernel</h3>

<p>Download the kernel source from <a href="https://www.kernel.org/pub/linux/kernel/v2.4/">linux-2.4</a> or <a href="https://www.kernel.org/pub/linux/kernel/v2.6/">linux-2.6</a> or <a href="https://www.kernel.org/pub/linux/kernel/v3.x/">linux-3</a> or <a href="https://www.kernel.org/pub/linux/kernel/v4.x/">linux-4</a>.<br>
Linux kernel 2.4.37 is supported from the linux-2.4 tree.<br>
Linux kernel 2.6.27 and later are supported from the linux-2.6 tree.<br>
Linux kernel 3.0 and later are supported from the linux-3 tree.<br>
Linux kernel 4.0 and later are supported from the linux-4 tree.</p>

<p>Extract the kernel source and go to the extracted directory.<br>
In the operations below, "$VERSION.$PATCHLEVEL.diff" should for example be replaced with "3.19.diff" if using Linux kernel 3.19.4 :</p>

<table border="1">
<tr><td>
[user@tomoyo ~]$ wget -O ccs-patch-1.8.5-20160505.tar.gz 'http://osdn.jp/frs/redir.php?m=jaist&amp;f=/tomoyo/49684/ccs-patch-1.8.5-20160505.tar.gz'<br>
[user@tomoyo ~]$ wget -O ccs-patch-1.8.5-20160505.tar.gz.asc 'http://osdn.jp/frs/redir.php?m=jaist&amp;f=/tomoyo/49684/ccs-patch-1.8.5-20160505.tar.gz.asc'<br>
[user@tomoyo ~]$ gpg ccs-patch-1.8.5-20160505.tar.gz.asc<br>
[user@tomoyo ~]$ tar -zxf ccs-patch-1.8.5-20160505.tar.gz<br>
[user@tomoyo ~]$ patch -sp1 &lt; patches/ccs-patch-2.$PATCHLEVEL.$SUBLEVEL.diff<br>
</td></tr>
</table>

<h3>Configure the kernel</h3>

<table border="1">
<tr><td>
[user@tomoyo ~]$ make -s menuconfig
</td></tr>
</table>

<p>Choose the following options in "Security options" section:</p>

<ul>
<li>[*] CCSecurity support</li>
<li>[ ]   Compile as loadable kernel module</li>
<li>[ ]   Disable by default</li>
<li>[ ]   Do not modify 'struct task_struct' in order to keep KABI</li>
<li>(2048) Default maximal count for learning mode</li>
<li>(/sbin/ccs-init) Default policy loader</li>
<li>(/sbin/ccs-start) Alternative activation trigger</li>
<li>(/sbin/modprobe /sbin/hotplug) Built-in domain initializer programs</li>
<li>(1024)&nbsp;&nbsp;Default maximal count for audit log</li>
</ul>

<p><i>"Compile as loadable kernel module"</i> is useful when there is a file size limitation for vmlinux (e.g. embedded systems).</p>

<p><i>"Disable by default"</i> will enable TOMOYO Linux only when ccsecurity=on is passed to the kernel's command line options. If this option is not selected, ccsecurity=off will disable TOMOYO Linux.</p>

<p><i>"Do not modify 'struct task_struct' in order to keep KABI"</i> is available to 2.6 kernels only. This option will manage "struct task_struct" variables outside "struct task_struct" in order to avoid Kernel Application Binary Interface (KABI) breakage. Choose this option if wanting to patch against distributor's kernels without breaking KABI. However, since "struct ccsecurity_operations" must be exported to loadable kernel modules (LKMs) in order to allow them to call TOMOYO's functions, build scripts may still print warning messages.</p>

<h3>Compile and install the kernel</h3>

<p>Once the kernel has been configured, compile and install:</p>

<table border="1">
<tr><td>
[user@tomoyo ~]$ make -s dep<br>
[user@tomoyo ~]$ make -s<br>
[user@tomoyo ~]$ make -s modules<br>
[user@tomoyo ~]$ su<br>
[root@tomoyo ~]# make -s modules_install install
</td></tr>
</table>

<p>Create initrd/initramfs if required.</p>

<hr>

<h2><a name="1.3">Step 1.3: Install the userspace tools</a></h2>

<p>Make sure the dependencies described above have been installed. Compile and install the tools with the following commands:</p>

<table border="1">
<tr><td>
[user@tomoyo ~]$ wget -O ccs-tools-1.8.5-20151111.tar.gz 'http://osdn.jp/frs/redir.php?m=jaist&amp;f=/tomoyo/49693/ccs-tools-1.8.5-20151111.tar.gz'<br>
[user@tomoyo ~]$ wget -O ccs-tools-1.8.5-20151111.tar.gz.asc 'http://osdn.jp/frs/redir.php?m=jaist&amp;f=/tomoyo/49693/ccs-tools-1.8.5-20151111.tar.gz.asc'<br>
[user@tomoyo ~]$ gpg ccs-tools-1.8.5-20151111.tar.gz.asc<br>
[user@tomoyo ~]$ tar -zxf ccs-tools-1.8.5-20151111.tar.gz<br>
[user@tomoyo ~]$ cd ccstools/<br>
[user@tomoyo ~]$ make -s<br>
[user@tomoyo ~]$ su<br>
[root@tomoyo ~]# make -s install
</td></tr>
</table>

<br>

<hr>

<h2><a name="1.4">Step 1.4: Initialize configuration</a></h2>

<p>To prepare the system for usage of TOMOYO Linux, the policy must be initialized. One of two commands can be used depending on what operations you wish to analyze or restrict.</p>

<p>To analyze or restrict only file related operations (e.g. read, write, execute), run the following command:</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# /usr/lib/ccs/init_policy --file-only-profile
</td></tr>
</table>

<p>To analyze or restrict all operations (e.g. files, networks, capabilities, environment variables, signal transmissions), run the following command:</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# /usr/lib/ccs/init_policy
</td></tr>
</table>

<p>All policy files will be saved in "/etc/ccs/" directory.</p>

<hr>

<h2><a name="1.5">Step 1.5: Configure bootloader and reboot</a></h2>

<p>Now edit your bootloader (e.g. GRUB) to include the kernel you have just compiled. If the <i>"Disable by default"</i> option was selected during kernel configuration, remember to include "ccsecurity=on" in the kernel boot options. Reboot your system and select this kernel for use in Phase 2.</p>

<div class=navfooter>
<hr align="left" width="100%">
<table summary="Footer navigation table" width="100%" border="0" cellpadding="0" cellspacing="0">
<tr>
<td width="33%" align="left" valign="top">
</td>
<td width="34%" align="center" valign="top">
<a href="index.html.en">Index</a>
</td>
<td width="33%" align="right" valign="top">
<a href="phase-2.html.en">Next</a>
</td></tr>
<tr><td width="33%" align="left" valign="top">
</td>
<td width="34%" align="center" valign="top">
<a href="http://tomoyo.osdn.jp/">Home</a>
</td>
<td width="33%" align="right" valign="top">
Phase 2: Understanding TOMOYO Linux
</td>
</tr>
</table>
</div>

<p><a href="http://osdn.jp/"><img src="http://osdn.jp/sflogo.php?group_id=1973" width="96" height="31" alt="sflogo.php" title="SourceForge.jp"></a></p>
</body>
</html>
