<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en-US">
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="content-style-type" content="text/css">
<link rel="stylesheet" href="../media/tomoyolinux.css" media="all" type="text/css">
<title>TOMOYO Linux 2.3.x : The Official Guide : Chapter 7</title>
</head>

<body>

<div id="titlebar">
<a href="../index.html.en"><img src="../media/tomoyotitle.png" alt="tomoyotitle.png" width="320" height="40" border="0" align="left"></a>
</div>

<div id="navbar" class="tomoyo-documentation">
<ul id="navbarlist">
<li id="tomoyo-home"><a href="../index.html.en" title="TOMOYO Linux Home Page">Home</a></li>
<li id="tomoyo-about"><a href="../about.html.en" title="About TOMOYO Linux">About</a></li>
<li id="tomoyo-download"><a href="../download.html.en" title="Get TOMOYO Linux">Download</a></li>
<li id="tomoyo-changelogs"><a href="../changelogs.html.en" title="TOMOYO Linux ChangeLogs">ChangeLogs</a></li>
<li id="tomoyo-documentation"><a href="../documentation.html.en" title="Official Documentation">Documentation</a></li>
<li id="tomoyo-support"><a href="../support.html.en" title="Support information">Support</a></li>
<li id="tomoyo-links"><a href="../links.html.en" title="Links">Links</a></li>
</ul>
<ul id="switch-language">
<li id="tomoyo-switch-language"><a href="chapter-7.html.ja" title="Go to Japanese page">Japanese page</a></li>
</ul>
</div>

<div id="content">

<div id="documentation">

<div class="navheader">
<p><a href="chapter-6.html.en">&lt;Prev&gt;</a> <a href="index.html.en">&lt;Index&gt;</a> <a href="chapter-8.html.en">&lt;Next&gt;</a></p>
</div>

<h2>Chapter 7: How do I enforce policy?</h2>

<h3><a name="7.1">7.1. Enabling enforcing mode</a></h3>

<p>Once domain and exception policy have been sufficiently modified, the domain can be set to enforcing mode.</p>

<p>Run the policy editor and change the target domains to profile 3:</p>

<img src="media/editpolicy-httpd-profile3.png" alt="editpolicy-httpd-profile3.png" width="675" height="375">

<p>Press the "@" key to switch to the process list. Verify that the "<code>/usr/sbin/httpd</code>" process and descendants are assigned profile number 3:</p>

<img src="media/editpolicy-httpd-process3.png" alt="editpolicy-httpd-process3.png" width="675" height="375">

<p>Quit the policy editor and try an operation which is permitted by policy:</p>

<img src="media/operation-permitted.png" alt="operation-permitted.png" width="547" height="729">

<p>The operation was successfully completed, as sending mail is permitted by policy.</p>

<p>Let's try an operation which is not permitted by policy:</p>

<img src="media/unix-penguin.png" alt="unix-penguin.png" width="547" height="729">

<p>Although it appears to be have been completed successfully, the warning message by <code>/bin/mail</code> shows that the input was empty and so the execution of <code>/bin/cat</code> was rejected:</p>

<img src="media/unix-penguin-rejected.png" alt="unix-penguin-rejected.png" width="547" height="477">

<h3><a name="7.2">7.2. Enable enforcing mode for every domain</a></h3>

<p>Once you are familiar with the methods and tools described in the previous chapters, it will be possible to develop policy for every domain in the system. Placing every domain in "Enforcing Mode" will reduce the points of vulnerability through which a system might be compromised. Thus, all the previous steps should be repeated for all the other domains.</p>

<h3><a name="7.3">7.3. Handling policy violations in real-time</a></h3>

<p>Policy violations can be handled in real time using <code>tomoyo-queryd</code>. This is especially useful during the installation of software updates. When packages are updated, policy may need to be altered if any of the following occur:</p>

<ul>
<li>The pathnames of files have changed
<li>The dependencies of files have changed
<li>The access permissions required have changed or increased
</ul>

<p>The ideal way to update policy is to rebuild from scratch using learning mode as has been described. However, it is not desirable to change a domain from enforcing mode to learning mode once the system has entered into a production state as this will cause the system to become vulnerable to attack through this unrestricted domain.</p>

<p>Fortunately, <code>tomoyo-queryd</code> can help administrators update policy in real-time while running in "Enforcing Mode". Please note that this method cannot always support every case and the resulting policy may not be fully optimized.</p>

<h4><a name="7.3.1">7.3.1. Example usage of "tomoyo-queryd"</a></h4>

<p>The video below demonstrates example usage of <code>tomoyo-queryd</code>, which is summarised in the text below:</p>

<p><object data="http://www.youtube.com/v/t_jZZfmNKpc&amp;hl=en_US&amp;fs=1" type="application/x-shockwave-flash" width="425" height="344"><param name="movie" value="http://www.youtube.com/v/t_jZZfmNKpc&amp;hl=en_US&amp;fs=1"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"></object></p>

<p>Use <code>tomoyo-queryd</code> to view, in realtime, the access requests that have been rejected by policy:</p>

<pre class="command">
# /usr/sbin/tomoyo-queryd
</pre>

<pre class="output">
Monitoring /sys/kernel/security/tomoyo/query . Press Ctrl-C to terminate.
</pre>

<p>Policy violations may occur while updating packages due to unusual behaviour (e.g. restarting daemons). When a policy violation occurs, a prompt appears in the <code>tomoyo-queryd</code> console:</p>

<pre class="output">
#2010/12/30 00:21:11# profile=3 mode=enforcing granted=no (global-pid=11788) task={ pid=11788 ppid=11779 uid=0 gid=0 euid=0 egid=0 suid=0 sgid=0 fsuid=0 fsgid=0 type!=execute_handler } path1={ uid=0 gid=0 ino=753729 major=253 minor=0 perm=0755 type=file } path1.parent={ uid=0 gid=0 ino=753665 perm=0755 } exec={ realpath="/bin/sleep" argc=2 envc=6 argv[]={ "sleep" "1" } envp[]={ "TERM=xterm" "PATH=/sbin:/usr/sbin:/bin:/usr/bin" "PWD=/" "LANG=en_US.UTF-8" "SHLVL=1" "_=/bin/sleep" } }
&lt;kernel&gt; /etc/rc.d/init.d/sshd
allow_execute /bin/sleep
Allow? ('Y'es/'N'o/'R'etry/'S'how policy/'A'dd to policy and retry):
</pre>

<p>This indicates that a process that belongs to the domain "&lt;kernel&gt; /etc/rc.d/init.d/sshd" attempted to execute <code>/bin/sleep</code> in order to process the command <code>sleep 1</code>. Usually this would be instantly denied, but since <code>tomoyo-queryd</code> is running, the kernel waits for the administrators decision before accepting or rejecting the request.</p>

<p>Press <strong>"Y"</strong> to grant the request.<br>
Press <strong>"N"</strong> to reject the request.<br>
Press <strong>"R"</strong> to retry the request (for example after editing domain policy manually).<br>
Press <strong>"S"</strong> to show domain policy for the process.<br>
Press <strong>"A"</strong> to append the request to domain policy and retry (a chance to edit the request is given first).</p>

<p>Do not grant access requests unconditionally. Policy violations are not always due to updating packages, but may be malicious requests by attackers.</p>

<p>Do not logout while this program is running. Access requests that violated policy are kept pending and may otherwise sleep forever. Monitor the output to make sure programs have the minimum permissions to run properly. If permissions are missing, they will be printed to the console output. Once policy has been updated, the program can be stopped with "Ctrl-C".</p>

<p>Note that this program directly edits policy currently loaded into the kernel, so run <code>tomoyo-savepolicy</code> to save policy to disk, otherwise policy will be lost on shutdown.</p>

<pre class="command">
# /usr/sbin/tomoyo-savepolicy
</pre>

<h4><a name="7.3.2">7.3.2. Example output from "tomoyo-queryd"</a></h4>

<p>This is an example of what the output might look like while running <code>tomoyo-queryd</code>:</p>

<pre class="output">
#2010/12/30 00:21:11# profile=3 mode=enforcing granted=no (global-pid=11788) task={ pid=11788 ppid=11779 uid=0 gid=0 euid=0 egid=0 suid=0 sgid=0 fsuid=0 fsgid=0 type!=execute_handler } path1={ uid=0 gid=0 ino=753729 major=253 minor=0 perm=0755 type=file } path1.parent={ uid=0 gid=0 ino=753665 perm=0755 } exec={ realpath="/bin/sleep" argc=2 envc=6 argv[]={ "sleep" "1" } envp[]={ "TERM=xterm" "PATH=/sbin:/usr/sbin:/bin:/usr/bin" "PWD=/" "LANG=en_US.UTF-8" "SHLVL=1" "_=/bin/sleep" } }
&lt;kernel&gt; /etc/rc.d/init.d/sshd
allow_execute /bin/sleep
Allow? ('Y'es/'N'o/'R'etry/'S'how policy/'A'dd to policy and retry):a
Enter new entry&gt; allow_execute /bin/sleep
Added 'allow_execute /bin/sleep'.

----------------------------------------
#2010/12/30 00:22:12# profile=3 mode=enforcing granted=no (global-pid=11937) task={ pid=11937 ppid=1 uid=26 gid=26 euid=26 egid=26 suid=26 sgid=26 fsuid=26 fsgid=26 type!=execute_handler } path1={ uid=0 gid=0 ino=690602 major=253 minor=0 perm=0644 type=file } path1.parent={ uid=0 gid=0 ino=690114 perm=0755 }
&lt;kernel&gt; /etc/rc.d/init.d/postgresql /sbin/runuser /bin/bash /usr/bin/postmaster
allow_read /usr/share/zoneinfo/posix/Pacific/Pohnpei
Allow? ('Y'es/'N'o/'R'etry/'S'how policy/'A'dd to policy and retry):s
# select global-pid=11937
&lt;kernel&gt; /etc/rc.d/init.d/postgresql /sbin/runuser /bin/bash /usr/bin/postmaster
use_profile 3
use_group 0

network unix stream connect /var/run/nscd/socket
allow_read /usr/lib/locale/locale-archive
allow_read /var/lib/pgsql/data/postgresql.conf
allow_read /var/lib/pgsql/data/PG_VERSION
allow_read /var/lib/pgsql/data/global/pg_control
allow_write /var/lib/pgsql/data/global/pg_control
allow_create /var/lib/pgsql/data/postmaster.pid 0600
allow_read /var/lib/pgsql/data/postmaster.pid
allow_write /var/lib/pgsql/data/postmaster.pid
allow_unlink /var/lib/pgsql/data/postmaster.pid
allow_read /usr/share/zoneinfo/MST7MDT
(...snipped...)
allow_read /usr/share/zoneinfo/EST5EDT
network inet stream bind 127.0.0.1 5432
network inet stream listen 127.0.0.1 5432
allow_create /tmp/.s.PGSQL.5432.lock 0600
allow_read /tmp/.s.PGSQL.5432.lock
allow_write /tmp/.s.PGSQL.5432.lock
allow_unlink /tmp/.s.PGSQL.5432.lock
allow_unlink /tmp/.s.PGSQL.5432
network unix stream bind /tmp/.s.PGSQL.5432
network unix stream listen /tmp/.s.PGSQL.5432
allow_mksock /tmp/.s.PGSQL.5432 0700
allow_chmod /tmp/.s.PGSQL.5432 0777
allow_write /var/lib/pgsql/data/postmaster.opts
allow_truncate /var/lib/pgsql/data/postmaster.opts
allow_mkdir /var/lib/pgsql/data/pg_log/ 0700
file append /var/lib/pgsql/data/pg_log/postgresql-Wed.log
network inet dgram bind 127.0.0.1 0
allow_read /var/lib/pgsql/data/pg_hba.conf
allow_read /var/lib/pgsql/data/pg_ident.conf
allow_read /var/lib/pgsql/data/pg_xlog/000000010000000000000000
allow_write /var/lib/pgsql/data/pg_xlog/000000010000000000000000
allow_read /var/lib/pgsql/data/pg_clog/0000
allow_write /var/lib/pgsql/data/pg_clog/0000
allow_read /var/lib/pgsql/data/pg_multixact/offsets/0000
allow_write /var/lib/pgsql/data/pg_multixact/offsets/0000
allow_read /var/lib/pgsql/data/global/pg_fsm.cache
allow_write /var/lib/pgsql/data/global/pg_fsm.cache
allow_unlink /var/lib/pgsql/data/global/pg_fsm.cache
allow_read /var/lib/pgsql/data/global/1262
allow_write /var/lib/pgsql/data/global/1262
allow_read /var/lib/pgsql/data/global/1260
allow_write /var/lib/pgsql/data/global/1260
allow_read /var/lib/pgsql/data/global/1261
allow_write /var/lib/pgsql/data/global/1261
allow_read /var/lib/pgsql/data/global/pg_auth
allow_read /var/lib/pgsql/data/global/pgstat.stat
allow_create /var/lib/pgsql/data/global/pgstat.tmp 0666
allow_write /var/lib/pgsql/data/global/pgstat.tmp
allow_rename /var/lib/pgsql/data/global/pgstat.tmp /var/lib/pgsql/data/global/pgstat.stat
allow_read /var/lib/pgsql/data/pg_subtrans/0000
allow_write /var/lib/pgsql/data/pg_subtrans/0000
allow_create /var/lib/pgsql/data/global/pg_fsm.cache 0666
allow_create /var/lib/pgsql/data/global/pg_auth.\$ 0666
allow_create /var/lib/pgsql/data/global/pg_database.\$ 0666
allow_rename /var/lib/pgsql/data/global/pg_auth.\$ /var/lib/pgsql/data/global/pg_auth
allow_rename /var/lib/pgsql/data/global/pg_database.\$ /var/lib/pgsql/data/global/pg_database
allow_unlink /var/lib/pgsql/data/base/\$/pg_internal.init
allow_write /var/lib/pgsql/data/global/pg_auth.\$
allow_write /var/lib/pgsql/data/global/pg_database.\$
network inet dgram send 127.0.0.1 1024-65535
network inet dgram recv 127.0.0.1 1024-65535


#2010/12/30 00:22:26# profile=3 mode=enforcing granted=no (global-pid=11937) task={ pid=11937 ppid=1 uid=26 gid=26 euid=26 egid=26 suid=26 sgid=26 fsuid=26 fsgid=26 type!=execute_handler } path1={ uid=0 gid=0 ino=690602 major=253 minor=0 perm=0644 type=file } path1.parent={ uid=0 gid=0 ino=690114 perm=0755 }
&lt;kernel&gt; /etc/rc.d/init.d/postgresql /sbin/runuser /bin/bash /usr/bin/postmaster
allow_read /usr/share/zoneinfo/posix/Pacific/Pohnpei
Allow? ('Y'es/'N'o/'R'etry/'S'how policy/'A'dd to policy and retry):a
Enter new entry&gt; allow_read /usr/share/zoneinfo/\{\*\}/\*
Added 'allow_read /usr/share/zoneinfo/\{\*\}/\*'.

----------------------------------------
#2010/12/30 00:22:23# profile=3 mode=enforcing granted=no (global-pid=11974) task={ pid=11974 ppid=11968 uid=0 gid=0 euid=0 egid=0 suid=0 sgid=0 fsuid=0 fsgid=0 type!=execute_handler } path1={ uid=0 gid=0 ino=524564 major=253 minor=0 perm=0644 type=file } path1.parent={ uid=0 gid=0 ino=524555 perm=0755 }
&lt;kernel&gt; /usr/sbin/sshd
allow_read /etc/pki/tls/openssl.cnf
Allow? ('Y'es/'N'o/'R'etry/'S'how policy/'A'dd to policy and retry):a
Enter new entry&gt; allow_read /etc/pki/tls/openssl.cnf
Added 'allow_read /etc/pki/tls/openssl.cnf'.

----------------------------------------
#2010/12/30 00:22:53# profile=3 mode=enforcing granted=no (global-pid=11937) task={ pid=11937 ppid=1 uid=26 gid=26 euid=26 egid=26 suid=26 sgid=26 fsuid=26 fsgid=26 type!=execute_handler } path1.parent={ uid=26 gid=26 ino=426399 perm=0700 }
&lt;kernel&gt; /etc/rc.d/init.d/postgresql /sbin/runuser /bin/bash /usr/bin/postmaster
allow_create /var/lib/pgsql/data/pg_log/postgresql-Thu.log 0666
Allow? ('Y'es/'N'o/'R'etry/'S'how policy/'A'dd to policy and retry):a
Enter new entry&gt; allow_create /var/lib/pgsql/data/pg_log/postgresql-\*
Added 'allow_create /var/lib/pgsql/data/pg_log/postgresql-\*.log 0666'.

#2010/12/30 00:23:04# profile=3 mode=enforcing granted=no (global-pid=11937) task={ pid=11937 ppid=1 uid=26 gid=26 euid=26 egid=26 suid=26 sgid=26 fsuid=26 fsgid=26 type!=execute_handler } path1={ uid=26 gid=26 ino=426434 major=253 minor=0 perm=0600 type=file } path1.parent={ uid=26 gid=26 ino=426399 perm=0700 }
&lt;kernel&gt; /etc/rc.d/init.d/postgresql /sbin/runuser /bin/bash /usr/bin/postmaster
file append /var/lib/pgsql/data/pg_log/postgresql-Thu.log
Allow? ('Y'es/'N'o/'R'etry/'S'how policy/'A'dd to policy and retry):a
Enter new entry&gt; file append /var/lib/pgsql/data/pg_log/postgresql-\*
Added 'file append /var/lib/pgsql/data/pg_log/postgresql-\*.log'.
</pre>

<h3><a name="7.4">7.4. Notification daemon</a></h3>

<p><code>tomoyo-notifyd</code> is a daemon program that can be used to report the occurrence of a policy violation. For example, run "/usr/sbin/tomoyo-notifyd" from "/etc/rc.local".</p>

<p>Modify the "action_to_take" line as required and start <code>tomoyo-notifyd</code>.</p>

<p>This will send mails similar to the following (identical to audit logs, but with serial numbers in the header):</p>

<pre class="command">
# mail
</pre>

<pre class="output">
Mail version 8.1 6/6/93.  Type ? for help.
"/var/spool/mail/root": 1 message 1 new
&gt;N  1 root@localhost.local  Thu May 12 23:14  18/831
&amp;
Message 1:
From root@localhost.localdomain  Thu May 12 23:14:42 2011
Date: Thu, 12 May 2011 23:14:41 +0900
From: root &lt;root@localhost.localdomain&gt;
To: root@localhost.localdomain

Q0-0
#2011-05-12 23:14:41# profile=3 mode=enforcing (global-pid=4133) task={ pid=4133 ppid=4132 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 }
&lt;kernel&gt; /usr/sbin/httpd /bin/sh
allow_execute /bin/cat
</pre>

<p>This log reports that execution of <code>/bin/cat</code> was requested by <code>/bin/sh</code>, which was invoked by <code>/usr/sbin/httpd</code>. As its first line has "mode=enforcing", this request was rejected.</p>

<h3><a name="7.5">7.5. Beyond the core topics</a></h3>

<p>The chapters in this guide so far aim to provide enough knowledge to set up TOMOYO Linux on a system. In order to further improve your knowledge, please read on. The following chapters cover advanced topics that are not absolutely essential, but can help to increase the security of a system. The appendices found at the end of this guide can also be very helpful, particularly the specification.</p>

<p>Remember that security is only as strong as the weakest point. While proper use of the Mandatory Access Control possible with TOMOYO Linux will strengthen a system against being compromised, other security practices and system-hardening methods must not be forgotten. These methods are beyond the scope of this guide but should be eagerly pursued by any who wish to maximize the security of their system.</p>

</div><!-- documentation -->

</div><!-- content -->

<div id="navfooter">
<hr>
<table>
<tr>
<td class="docs-previous">
<a href="chapter-6.html.en">Prev</a>
</td>
<td class="docs-index">
<a href="index.html.en">Index</a>
</td>
<td class="docs-next">
<a href="chapter-8.html.en">Next</a>
</td>
</tr>
<tr>
<td class="docs-previous-description">
<p>Chapter 6: How do I develop policy?</p>
</td>
<td class="docs-home">
</td>
<td class="docs-next-description">
<p>Chapter 8: Interface permissions</p>
</td>
</tr>
</table>
</div>

<div id="footer">
<p class="language">Go to <a href="chapter-7.html.ja">Japanese page</a>.</p>
<p class="timestamp">Last modified: $Date$</p>
<p class="trademark">Linux&reg; is a registered trademark of Linus Torvalds world-wide. TOMOYO&reg; is a registered trademark of <a href="http://www.nttdata.co.jp/en/">NTT DATA Corporation</a>.</p>
<p><a href="http://sourceforge.jp/"><img src="http://sourceforge.jp/sflogo.php?group_id=1973" width="96" height="31" alt="SourceForge.jp"></a></p>
</div>

</body>
</html>
