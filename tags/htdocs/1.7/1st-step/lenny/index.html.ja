<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="ja-JP">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<title>TOMOYO Linux 導入手順書 （ Debian Lenny 版）</title>
<link rel="stylesheet" href="http://tomoyo.sourceforge.jp/tomoyo.css" media="all" type="text/css">
<link rev="made" href="mailto:k.takeda26@gmail.com"> 
</head>
<body>
<p style="text-align:right;"><a href="index.html.en">English Page</a></p>
<h1><a href="http://tomoyo.sourceforge.jp/">TOMOYO Linux</a> 導入手順書 （ Debian Lenny 版）</h1>

<ul>
<li><a href="#l1">概要</a></li>
<li><a href="#l2">カーネルのインストール</a></li>
<li><a href="#l3">ツールのインストール</a></li>
<li><a href="#l4">自動設定スクリプトの実行</a>
<li><a href="#l5">監査ログの取得準備</a></li>
<li><a href="#l6">運用</a>
<ul>
<li><a href="#l7">システムの起動</a></li>
<li><a href="#l8">ログイン後の操作の学習</a></li>
<li><a href="#l9">ポリシーの参照</a></li>
<li><a href="#l10">強制アクセス制御</a></li>
</ul></li>
</ul>

<h2><a name="l1">概要</a></h2>

<p>以下では、 Debian Lenny に TOMOYO Linux 1.7.1 を導入する手順を解説します。
この手順書に従って操作すれば、 TOMOYO Linux の基本的な機能を体験し、簡単な設定と運用が行えるようになります。</p>

<p>導入の流れは以下の通りです。</p>

<ol>
<li>カーネルとツールのインストール</li>
<li>基本的な設定</li>
<li>ポリシーの自動学習と試験運用</li>
</ol>

<h2><a name="l2">カーネルのインストール</a></h2>

<p>TOMOYO Linux は Linux カーネルへのパッチとして提供されており、本来は Linux カーネルのソースコードにパッチを適用する作業が必要になります。
しかし Debian Lenny の場合は、 TOMOYO Linux のパッチを当てたコンパイル済みカーネルパッケージが提供されているので、今回はそれを利用します。</p>

<p>まずはパッケージをダウンロードします。</p>

<pre>
# <span class="user">wget http://osdn.dl.sourceforge.jp/tomoyo/44408/linux-image-2.6.26-2-686-ccs1.7.1-i686_2.6.26-19lenny2_i386.deb</span>
</pre>

<p>次に、ダウンロードしてきたパッケージをインストールします。</p>

<pre>
# <span class="user">dpkg -i linux-image-2.6.26-2-686-ccs1.7.1-i686_2.6.26-19lenny2_i386.deb</span>
# <span class="user">update-grub</span>
</pre>

<p>インストールに成功すれば /boot/grub/menu.lst に以下の記述が追加されているはずです。</p>

<pre>
title           Debian GNU/Linux, kernel 2.6.26-2-686-ccs
root            (hd0,0)
kernel          /boot/vmlinuz-2.6.26-2-686-ccs root=/dev/sda1 ro
initrd          /boot/initrd.img-2.6.26-2-686-ccs
</pre>

<p>今後カーネルの選択を行いやすくするために、 /boot/grub/menu.lst の "timeout=" の行をコメントアウトしておきます。</p>

<pre>
<span class="user">#</span>timeout=5
</pre>

<h2><a name="l3">ツールのインストール</a></h2>

<p>カーネルの次は、 TOMOYO Linux のツールをインストールします。
ツールには、ポリシーの管理を行うプログラムが収録されています。</p>

<p>バイナリパッケージが用意されていますので、それを利用します。</p>

<pre>
# <span class="user">wget http://osdn.dl.sourceforge.jp/tomoyo/44408/ccs-tools_1.7.1-1_i386.deb</span>
# <span class="user">dpkg -i ccs-tools_1.7.1-1_i386.deb</span>
</pre>

<p>以上で TOMOYO Linux のインストールは終了です。
続いて設定に移ります。</p>

<h2><a name="l4">自動設定プログラムの実行</a></h2>

<p>この節の操作を自動で行うプログラムが付属しているのでそれを実行します。</p>

<pre># <span class="user">/usr/lib/ccs/init_policy --file-only-profile</span></pre>

<h3>設定の保存ディレクトリについて</h3>

<p>TOMOYO Linux の設定を保存するディレクトリは /etc/ccs/ です。</p>

<h3>プロファイルについて</h3>

<p>TOMOYO Linux には多くの機能があり、どの機能をどのように適用するかの設定をプロファイルで行います。
今回はファイルに対するアクセス制御の機能のみを利用するため、 /etc/ccs/profile.conf の内容は以下のようなっているはずです。</p>

<pre>
PROFILE_VERSION=20090903
PREFERENCE::audit={ max_grant_log=1024 max_reject_log=1024 task_info=yes path_info=yes }
PREFERENCE::enforcing={ verbose=yes penalty=0 }
PREFERENCE::learning={ verbose=no max_entry=2048 exec.realpath=yes exec.argv0=yes symlink.target=yes }
PREFERENCE::permissive={ verbose=yes }
0-COMMENT=-----Disabled Mode-----
0-CONFIG::file={ mode=disabled grant_log=yes reject_log=yes }
1-COMMENT=-----Learning Mode-----
1-CONFIG::file={ mode=learning grant_log=yes reject_log=yes }
2-COMMENT=-----Permissive Mode-----
2-CONFIG::file={ mode=permissive grant_log=yes reject_log=yes }
3-COMMENT=-----Enforcing Mode-----
3-CONFIG::file={ mode=enforcing grant_log=yes reject_log=yes }
</pre>

<p>プロファイルは最大で 256 種類まで作成することができます。
上記設定では、 4 種類のプロファイルを作成しており、それぞれの意味は以下のようになります。</p>

<table><tbody>
<tr><th>プロファイル 0</th><td>ファイルに対するアクセス制御を無効にする</td></tr>
<tr><th>プロファイル 1</th><td>ファイルに対するアクセス制御を学習モードにする</td></tr>
<tr><th>プロファイル 2</th><td>ファイルに対するアクセス制御を確認モードにする</td></tr>
<tr><th>プロファイル 3</th><td>ファイルに対するアクセス制御を強制モードにする</td></tr>
</tbody></table>

<p>設定項目 CONFIG::file は「ファイルに対するアクセス制御」を表しており、 mode が disabled なら無効（何もしない）、 learning なら学習（自動的にポリシーに追加する）、 permissive なら確認（ポリシーに違反しても拒否しない）、 enforcing なら強制（ポリシーに違反したら拒否する）となります。
基本的に</p>

<ol>
<li>プロファイル 0 を割り当てた状態でシステムを動作させることにより、アクセス制御の対象とする範囲を決定する。</li>
<li>プロファイル 1 を割り当てた状態で許可したいアクセスを行うことによりポリシーを作成する。</li>
<li>プロファイル 2 を割り当てた状態で許可したいアクセスが行えるようになっていることを確認する。</li>
<li>プロファイル 3 を割り当てることで許可したいアクセスのみが行えるようにする。</li>
</ol>

<p>の順番で使います。</p>

<p>設定項目 COMMENT は、プロファイルを区別しやすくするためのコメントです。
TOMOYO Linux の機能には影響を与えません。</p>

<p>設定項目 PREFERENCE::audit はアクセスログの設定です。
max_grant_log および max_reject_log にはそれぞれカーネル内に保持しておくアクセス許可ログ（ポリシーで許可されたアクセス要求）およびアクセス拒否ログ（ポリシーで許可されなかったアクセス要求）の件数を設定できます。</p>

<p>設定項目 PREFERENCE::learning は学習モードの設定です。
verbose にはポリシー違反メッセージをコンソールに表示するかどうかを指定します。
また、 max_entry には自動的に追加する件数の上限を、 grant_log および reject_log にはそれぞれアクセス許可ログおよびアクセス拒否ログを生成するかどうかを設定できます。</p>

<p>設定項目 PREFERENCE::permissive は確認モードの設定です。
verbose にはポリシー違反メッセージをコンソールに表示するかどうかを指定します。</p>

<p>設定項目 PREFERENCE::enforcing は強制モードの設定です。
verbose にはポリシー違反メッセージをコンソールに表示するかどうかを指定します。
また、 penalty にはポリシー違反を起こしたプロセスに対するペナルティとしてスリープさせる時間を 0.1 秒単位で設定できます。</p>

<h3>ポリシーの変更を許可するプログラムについて</h3>

<p>ポリシーを変更することができるプログラムは、 /etc/ccs/manager.conf というファイルで指定します。
以下のプログラムが指定されているはずです。</p>

<pre>
/usr/sbin/ccs-loadpolicy
/usr/sbin/ccs-editpolicy
/usr/sbin/ccs-setlevel
/usr/sbin/ccs-setprofile
/usr/sbin/ccs-ld-watch
/usr/sbin/ccs-queryd
</pre>

<h3>例外ポリシーについて</h3>

<p>/etc/ccs/exception_policy.conf には以下の13種類の例外が指定されています。</p>

<ol>
<li>パス名のパターン (file_pattern)</li>
<li>パス名のグループ (path_group)</li>
<li>数値のグループ (number_group)</li>
<li>IPアドレスのグループ (address_group)</li>
<li>すべてのプログラムに対して参照することを許可するパス名 (allow_read)</li>
<li>すべてのプログラムに対して渡すことを許可する環境変数名 (allow_env)</li>
<li>デフォルトで上書きを禁止するパス名 (deny_rewrite)</li>
<li>1つに集約して扱うプログラムのパス名 (aggregator)</li>
<li>ドメイン遷移を初期化させるプログラム (initialize_domain)</li>
<li>ドメイン遷移を初期化させないプログラム (no_initialize_domain)</li>
<li>ドメイン遷移を行わないプログラム (keep_domain)</li>
<li>ドメイン遷移を行わせるプログラム (no_keep_domain)</li>
<li>予約するローカルポート番号 (deny_autobind)</li>
</ol>

<h2><a name="l5">監査ログの取得準備</a></h2>

<p>TOMOYO Linux のログは、アクセスが許可された要求のログと、アクセスが拒否された要求のログの2種類に分けることができます。
今回は、アクセス拒否ログのみを保存する設定を行います。</p>

<p>ログを保存するには、 ccs-auditd というデーモンプログラムを使用します。
アクセス拒否ログのみを保存する設定で ccs-auditd を Linux の起動時に実行するには、まず、以下のコマンドで /etc/init.d/ にシェルスクリプトを作成し、実行権限を与えます。</p>

<pre>
# <span class="user">cat &gt; /etc/init.d/ccs-auditd &lt;&lt; EOF</span>
<span class="user">#!/bin/sh</span>
<span class="user">/usr/sbin/ccs-auditd /dev/null /var/log/tomoyo/reject_log.txt</span>
<span class="user">EOF</span>
# <span class="user">chmod +x /etc/init.d/ccs-auditd</span>
</pre>

<p>そして、以下のコマンドで Linux の起動時に呼び出すシンボリックリンクを作成します。</p>

<pre>
# <span class="user">update-rc.d ccs-auditd start 99 2 3 4 5 .</span>
Adding system startup for /etc/init.d/ccs-auditd ...
/etc/rc2.d/S99ccs-auditd -&gt; ../init.d/ccs-auditd
/etc/rc3.d/S99ccs-auditd -&gt; ../init.d/ccs-auditd
/etc/rc4.d/S99ccs-auditd -&gt; ../init.d/ccs-auditd
/etc/rc5.d/S99ccs-auditd -&gt; ../init.d/ccs-auditd
</pre>

<p>この設定では、 /var/log/tomoyo/reject_log.txt にアクセス拒否ログが保存されます。
ログを保存するディレクトリをあらかじめ作っておきます。</p>

<pre>
# <span class="user">mkdir -p /var/log/tomoyo</span>
</pre>

<p>以上で TOMOYO Linux を使うための基本的な設定は終わりです。</p>

<h2><a name="l6">運用</a></h2>

<p>それでは、いよいよ TOMOYO Linux カーネルで起動してみましょう。</p>

<h3><a name="l7">システムの起動</a></h3>

<p>まずは Linux を再起動します。</p>

<pre>
# <span class="user">reboot</span>
</pre>

<p>カーネルの選択画面で TOMOYO Linux のカーネルを選択して Enter を押します。</p>

<p><img alt="TOMOYO Linux のカーネルを選択" title="TOMOYO Linux のカーネルを選択" width="720" height="400" src="grub.png"></p>

<p>起動プロセスが終了するとログインプロンプトが表示されるので、 root でログインしてください。</p>

<p><img alt="root でログイン" title="root でログイン" width="720" height="400" src="login.png"></p>

<h3><a name="l8">ログイン後の操作の学習</a></h3>

<p>今回は、以下の操作を TOMOYO Linux に学習させ、強制モードでは学習させた操作以外が拒否されることを確かめます。</p>

<ol>
<li>date コマンドを実行する</li>
<li>head コマンドで /etc/passwd の先頭3行を表示する</li>
<li>tcsh を起動する</li>
<li>tail コマンドで /etc/passwd の末尾3行を表示する</li>
<li>tcsh を終了する</li>
</ol>

<p>まずは学習モードの設定を行います。</p>

<p>プロファイル 1 が学習モードです。
このプロファイルを以下のコマンドで /sbin/getty から起動されるプログラムに割り当てます。</p>

<pre>
# <span class="user">/usr/sbin/ccs-setprofile -r 1 '&lt;kernel&gt; /sbin/getty'</span>
</pre>

<p>このコマンドは、</p>

<blockquote><p>/sbin/getty から起動されるプログラムすべてにプロファイル 1 を割り当てる</p></blockquote>

<p>という意味です。
/sbin/getty はログインシェルを起動するプログラムで、 /sbin/getty 以下にプロファイル 1 を割り当てることで、ログイン後の操作を学習する設定になります。
設定は即時に有効になるので、上記 ccs-setprofile コマンドを実行したあとは既に学習モードになっています。</p>

<p>&lt;kernel&gt; /sbin/getty を引用符で囲まないと、シェルのリダイレクト機能が働いて /sbin/getty の内容が書き換えられてしまいますのでくれぐれもご注意ください。</p>

<p>それでは、前述の 4 つの操作を学習させましょう。
学習は通常の Linux のように操作することで行えます。</p>

<p><img alt="操作の学習" title="操作の学習" width="720" height="400" src="ope_learning.png"></p>

<p>一見普通の Linux と変わりなく操作できますが、裏では TOMOYO Linux がアクセス許可を監視し、操作ごとにポリシーとしてメモリ上に記憶しています。</p>

<h3><a name="l9">ポリシーの参照</a></h3>

<p>生成されたポリシーの参照・編集には、 ccs-editpolicy を用います。</p>

<pre>
# <span class="user">/usr/sbin/ccs-editpolicy</span>
</pre>

<p>ccs-editpolicy を起動すると、 TOMOYO Linux 起動後に、プロセスがどのように呼び出されたかが表示されます。
この「プロセスの呼び出し」を、 TOMOYO Linux では「ドメイン遷移」とよびます。</p>

<p><img alt="ドメイン遷移" title="ドメイン遷移" width="720" height="400" src="editpolicy1.png"></p>

<p>ドメイン遷移の中から、 getty を探してみてください。
ドメイン遷移から getty を検索するには、 'f' キーを押して、下に出たプロンプトで "getty" と入力して Enter キーを押します。</p>

<p><img alt="getty 以下のドメイン" title="getty 以下のドメイン" width="720" height="400" src="editpolicy2.png"></p>

<p>行番号の右側に表示されている数字は、そのドメインに割り当てられているプロファイル番号です。
/sbin/getty 以下のドメインが 1 になっているのは、先ほど ccs-setprofile コマンドを用いて 1 を割り当てたためです。</p>

<p>/sbin/getty 下の /bin/login 以下では、ログインしてからのプロセス実行履歴が分かります。
その中からさらに、 /usr/bin/head コマンドを探してみてください。
head コマンドの行で Enter キーを押すと、以下の画面が表示されます。</p>

<p><img alt="head のポリシー" title="head のポリシー" width="720" height="400" src="editpolicy3.png"></p>

<p>これは先ほどの操作で学習したポリシーで、</p>

<blockquote>
<p>&lt;kernel&gt; /sbin/getty /bin/login /bin/bash /usr/bin/head というドメイン（赤下線）は、</p>
<ul>
<li>/etc/passwd を読み込みモードでオープンできる（青下線）</li>
</ul>
</blockquote>

<p>ということを意味しています。</p>

<p>TOMOYO Linux では、「プログラムの絶対パスで表現したプロセスの実行履歴」をドメインと呼びます。
すべてのプロセスはいずれか 1 つのドメインに所属しており、アクセス制御はドメインごとにポリシーとして設定します。</p>

<p>ドメインにおけるファイルに対するアクセス許可は、通常の Linux におけるファイルに対するパーミッションと同様の 3 種類（読み込み・書き込み・実行）の他にも、ファイルの新規作成・削除・名前変更なども設定できます。</p>

<p>ポリシーはメモリ上に置かれており、このまま Linux をシャットダウンしてしまうと、学習したポリシーも失われてしまいます。
ポリシーをハードディスクの /etc/ccs/ 以下に保存するには以下のようにします。</p>

<pre>
# <span class="user">/usr/sbin/ccs-savepolicy</span>
</pre>

<h3><a name="l10">強制アクセス制御</a></h3>

<p>それでは、先ほど自動学習したポリシーを使って、強制アクセス制御を体験してみましょう。</p>

<p>'q' キーで ccs-editpolicy を終了してから、以下のコマンドを実行します。</p>

<pre>
# <span class="user">/usr/sbin/ccs-setprofile -r 3 '&lt;kernel&gt; /sbin/getty'</span>
</pre>

<p>この操作により、 /sbin/getty 以下のドメインに強制アクセス制御が適用されるようになります。</p>

<p>この状態で以下の操作を行ってみます。</p>

<ol>
<li>date コマンドを実行</li>
<li>head コマンドで /etc/passwd の先頭3行を表示</li>
<li>tail コマンドで /etc/passwd の末尾3行を表示（エラー）</li>
<li>head コマンドで /etc/shadow の先頭3行を表示（エラー）</li>
<li>tcsh を起動</li>
<li>date コマンドを実行（エラー）</li>
</ol>

<p><img alt="強制アクセス制御の様子" title="強制アクセス制御の様子" width="720" height="400" src="ope_enforcing.png"></p>

<p>図中の赤下線のコマンドは先ほど学習モードで行った操作ですので、問題なく実行できます。
逆に青下線のコマンドはエラーになります。</p>

<p>エラーになった操作のログは、 ccs-auditd によって /var/log/tomoyo/reject_log.txt に保存されています。</p>

<blockquote><p>
</p></blockquote>

<p>このように TOMOYO Linux のファイルに対するアクセス制御を用いれば、</p>

<ul>
<li>どのような実行履歴を持つプロセスが</li>
<li>いつ</li>
<li>どんなファイルに</li>
<li>どんなアクセスを</li>
</ul>

<p>行ったかを監視することもできます。</p>

<hr>
<address><a href="http://tomoyo.sourceforge.jp/">TOMOYO Linux</a> is supported by <a href="http://www.nttdata.co.jp/">NTT DATA CORPORATION</a><br>
<a href="mailto:haradats@gmail.com">Send message to Webadmin</a><br>
Last modified: $Date$<br>
<!--#include virtual="/cgi-bin/counter.pl" -->
</address>

<p><a href="http://sourceforge.jp/"><img src="http://sourceforge.jp/sflogo.php?group_id=1973" width="96" height="31" alt="SourceForge.jp"></a></p>

<p><a href="http://validator.w3.org/check?uri=referer">
<img src="http://www.w3.org/Icons/valid-html401" alt="Valid HTML 4.01 Strict" height="31" width="88"></a></p>

</body>
</html>
