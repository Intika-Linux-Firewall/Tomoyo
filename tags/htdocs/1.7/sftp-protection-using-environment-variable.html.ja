<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="ja-JP">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<title>環境変数を用いてダウンロード専用ＳＦＴＰとアップロードも可能なＳＦＴＰを単一アカウントで実現する</title>
<link rel="stylesheet" href="http://tomoyo.sourceforge.jp/tomoyo.css" media="all" type="text/css">
</head>
<body>
<p>Info: Version <a href="../1.8/">1.8.x</a> is available.</p>
<p style="text-align:right;"><a href="sftp-protection-using-environment-variable.html.en">English Page</a></p>
<p style="text-align:right;">Last modified: $Date$</p>
<h1>環境変数を用いてダウンロード専用ＳＦＴＰとアップロードも可能なＳＦＴＰを単一アカウントで実現する</h1>

<h2>概要</h2>

<p>ＳＳＨクライアントから提供された環境変数の内容に応じて、ダウンロード専用のＳＦＴＰサービスとアップロードも可能なＳＦＴＰサービスの２種類を単一のアカウントで使い分け、また、環境変数が提供されなかった場合にはシェルの実行を許可しないようにする手順について紹介します。</p>

<hr>

<h2>ステップ１：アカウントの作成</h2>

<p>このページでは、ＳＦＴＰ用アカウントのユーザ名を sftp とします。</p>

<p>ＳＦＴＰ用アカウントのログインシェルを /bin/sftp-shell とします。</p>

<p>ＳＦＴＰ用のコンテンツを置くディレクトリを /var/sftp/ とします。</p>

<p>ＳＦＴＰサーバのパス名を /usr/libexec/openssh/sftp-server とします。</p>

<table border="1">
<tr><td>
useradd -s /bin/sftp-shell -d /var/sftp sftp<br>
passwd sftp
</td></tr>
</table>

<h2>ステップ２：使用するプログラムの作成</h2>

<p>以下の内容を /bin/sftp-shell として保存し、実行許可を与えます。</p>

<table border="1">
<tr><td><pre>
#! /bin/sh
[ "$sftp_type" == "ro-sftp" ] &amp;&amp; exec /bin/ro-sftp
[ "$sftp_type" == "rw-sftp" ] &amp;&amp; exec /bin/rw-sftp
exit 1
</pre></td></tr>
</table>

<p>以下の内容を /bin/rw-sftp および /bin/ro-sftp として保存し、実行許可を与えます。</p>

<table border="1">
<tr><td><pre>
#! /bin/sh
umask 0022
exec /usr/libexec/openssh/sftp-server
</pre></td></tr>
</table>

<h2>ステップ３：環境変数を渡すための設定</h2>

<p>サーバ側の /etc/ssh/sshd_config の末尾に環境変数名を指定します。</p>

<table border="1">
<tr><td>
AcceptEnv sftp_type
</td></tr>
</table>

<p>クライアント側の /etc/ssh/ssh_config の末尾に環境変数名を指定します。</p>

<table border="1">
<tr><td>
SendEnv sftp_type
</td></tr>
</table>

<h2>ステップ４： TOMOYO Linux のインストールと初期化</h2>

<p><a href="install.html.ja">TOMOYO Linux をインストール</a>してから、以下のコマンドを実行して初期設定を行ってください。</p>

<table border="1">
<tr><td>
/usr/lib/ccs/init_policy
</td></tr>
</table>

<p>その後、 TOMOYO Linux カーネルで再起動する前に以下の操作を行ってください。</p>

<p>/bin/sftp-shell が実行された場合にはドメイン遷移が初期化されるようにするために、 /etc/ccs/exception_policy.conf に以下の内容を追加します。</p>

<table border="1">
<tr><td>
initialize_domain /bin/sftp-shell
</td></tr>
</table>

<p>ＳＦＴＰコンテンツ用ディレクトリ以下をまとめて指定できるようにするために、 /etc/ccs/exception_policy.conf に以下の内容を追加します。</p>

<table border="1">
<tr><td>
path_group SFTP_DIRS /var/sftp/\{\*\}/<br>
path_group SFTP_FILES /var/sftp/\{\*\}/\*<br>
path_group SFTP_FILES /var/sftp/\*
</td></tr>
</table>

<p>ＳＦＴＰコンテンツの参照と更新ができるようにするために、 /etc/ccs/domain_policy.conf に以下の内容を追加します。</p>

<table border="1">
<tr><td>
&lt;kernel&gt; /bin/sftp-shell<br>
<br>
&lt;kernel&gt; /bin/sftp-shell /bin/ro-sftp /usr/libexec/openssh/sftp-server<br>
allow_read @SFTP_FILES<br>
<br>
&lt;kernel&gt; /bin/sftp-shell /bin/rw-sftp /usr/libexec/openssh/sftp-server<br>
allow_read/write @SFTP_FILES<br>
allow_create @SFTP_FILES 0644<br>
allow_unlink @SFTP_FILES<br>
allow_mkdir @SFTP_DIRS 0755<br>
allow_rmdir @SFTP_DIRS<br>
allow_rename @SFTP_FILES @SFTP_FILES<br>
allow_rename @SFTP_DIRS @SFTP_DIRS<br>
allow_truncate @SFTP_FILES
</td></tr>
</table>

<h2>ステップ５：学習と運用</h2>

<p>以上で準備は完了です。 TOMOYO Linux カーネルで再起動してください。</p>

<p>学習モードに切り替えます。</p>

<table border="1">
<tr><td>
/usr/sbin/ccs-setprofile -r 1 '&lt;kernel&gt; /bin/sftp-shell'
</td></tr>
</table>

<p>環境変数 sftp_type に ro-sftp を設定して、クライアントから sftp でアクセスしてください。このページでは、サーバのホスト名を server とします。</p>

<table border="1">
<tr><td>
export sftp_type="ro-sftp"<br>
sftp sftp@server
</td></tr>
</table>

<p>この時点では、プロセスには &lt;kernel&gt; /bin/sftp-shell /bin/ro-sftp /usr/libexec/openssh/sftp-server ドメインが割り当てられています。このドメインから適当に操作を行います。ただし、書込み操作は行わないでください。</p>

<p>環境変数 sftp_type に rw-sftp を設定して、クライアントから sftp でアクセスしてください。</p>

<table border="1">
<tr><td>
export sftp_type="rw-sftp"<br>
sftp sftp@server
</td></tr>
</table>

<p>この時点では、プロセスには &lt;kernel&gt; /bin/sftp-shell /bin/rw-sftp /usr/libexec/openssh/sftp-server ドメインが割り当てられています。このドメインから適当に操作を行います。書込み操作も行ってください。</p>

<p>強制モードに切り替えます。</p>

<table border="1">
<tr><td>
/usr/sbin/ccs-setprofile -r 3 '&lt;kernel&gt; /bin/sftp-shell'
</td></tr>
</table>

<p>ポリシーを保存します。</p>

<table border="1">
<tr><td>
/usr/sbin/ccs-savepolicy
</td></tr>
</table>

<h2>説明</h2>

<p>親ドメインが異なる２つの sftp-server 用のドメインを作成し、片方にだけ書き込み許可を与えています。このプログラムはサンプルなので判りやすいキーワードを利用していますが、実際に使用する場合にはパスワードの代わりとなるので推測されないキーワードを利用してください。</p>

<p>共有ライブラリなど例外ポリシーの allow_read で許可されているファイルへのアクセスを制限したい場合、 ignore_global_allow_read という指定を行うことができます。</p>

<h2>応用</h2>

<p>環境変数 SSH_CLIENT の内容に基づいて特定のＩＰアドレスやポート番号から接続してきたクライアントにはアップロードを許可し、それ以外のクライアントにはダウンロードのみ許可するという使い方もできます。</p>

<hr>

<p><a href="index.html.ja">目次へ戻る</a></p>
<p><a href="http://sourceforge.jp/"><img src="http://sourceforge.jp/sflogo.php?group_id=1973" width="96" height="31" alt="sflogo.php" title="SourceForge.jp"></a></p>
</body>
</html>
