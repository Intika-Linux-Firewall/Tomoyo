<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
<meta http-equiv="Content-Style-Type" content="text/css">
<title>The world of TOMOYO Linux</title>
<link rel="stylesheet" href="http://tomoyo.sourceforge.jp/tomoyo.css" media="all" type="text/css">
</head>
<body>
<p style="text-align:right;"><a href="tutorial-2.html.ja">Japanese Page</a></p>
<p style="text-align:right;">Last modified: $Date$</p>

<h1>Chapter 3: How does TOMOYO Linux work?</h1>

<p style="text-align:center;">Aim: to become familiar with the concepts involved in TOMOYO Linux and usage of the associated userspace tools.</p>

<hr>

<h2><a name="3.1">3.1: Understanding domains</a></h2>

<p>In TOMOYO Linux, the technique used to enforce MAC makes use of something called <b>"domains"</b>. This is an important concept. Every process in a system belongs to a domain, which is determined by its execution history. Broadly speaking, every time a process is executed, a new domain is created. Any particular domain is represented by a concatenation of all previously executed pathanames. This creation of a new domain can also be called a <b>"domain transition"</b>. Have a look at this diagram:</p>

<table border="1" summary="fig">
<tr><td>
<img src="tutorial/fig-3-1.png" alt="fig-3-1.png" width="800" height="600">
</td></tr>
</table>

<p>The kernel is always the first domain and is represented in TOMOYO Linux by <b>&lt;kernel&gt;</b>. In this example, the kernel then executes "/sbin/init". Because a process has been executed, a new domain is created which in this case is the domain <b>"&lt;kernel&gt; /sbin/init"</b>. The bootup scripts are then executed, which result in further domains being created.</p>

<p>The process execution history is important. Consider the following domains:</p>

<p>&lt;kernel&gt; /sbin/init <b>/etc/rc.d/rc</b><br>
&lt;kernel&gt; /sbin/init /etc/rc.d/rc.sysinit <b>/etc/rc.d/rc</b><p>

<p>In both cases, the script "/etc/rc.d/rc" is the process causing a new domain to be created. However, <b>because the process execution history is different, they are considered to be two separate domains</b>. This allows you to control what can be executed by any particular domain, and allows policy to be more flexible as you can apply different levels of restriction to a process depending on how it was executed. There is also the possibility to manage domain transition very precisely and for example apply the same restriction to a process without regard to how it was executed. This topic will be discussed later.</p>

<h3>View domains with the policy editor</h3>

<p>Let's have a look at the policy editor to get a better understanding of domains. This is the main tool used with TOMOYO Linux and it is important to become comfortable using it. The instructions on this page can be supplemented with this page describing <a href="tool-editpolicy.html.en">how to use the Policy Editor</a>.</p>

<p>Once the system has been rebooted into the TOMOYO Linux kernel, run the policy editor with "/etc/ccs/" option to edit policy files within "/etc/ccs/":</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# /usr/sbin/ccs-editpolicy /etc/ccs/
</td></tr>
</table>

<p>The policy editor provides a number of "screens" that each serve a different role. The default screen that greets the user is the <b>"Domain Transition Editor"</b>. The picture below describes the domain tree that should be visible after running the above command. As of now, only the "&lt;kernel&gt;" domain is defined:</p>

<p><img src="editpolicy-domain-list1.png" alt="editpolicy-domain-list1.png" width="720" height="400"></p>

<p>Since this is a newly initialized policy, the policy files in "/etc/ccs/" are empty. <b>There are two sets of policy involved in TOMOYO Linux: policy loaded in the kernel, and policy saved to "/etc/ccs/"</b>. Many sets of policies can be saved to "/etc/ccs/" and can be loaded into the kernel at boot or on demand. Saving policy to disk will be discussed in later. Press the "q" key to quit the policy editor.</p>

<p>Now run the policy editor again <b>without</b> the "/etc/ccs/" option in order to view the policy that is loaded in the kernel:</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# /usr/sbin/ccs-editpolicy
</td></tr>
</table>

<p>As the system runs, TOMOYO Linux will record the creation of new domains and add them to the tree. After running the above command, the domain tree should appear populated with all domains created since startup:</p>

<p><img src="editpolicy-domain-list2.png" alt="editpolicy-domain-list2.png" width="720" height="400"></p>

<p>The first line shows what screen you are on and how many domains are listed.<br>
The second line is the message area.<br>
The third line shows the domain name currently selected by the cursor.<br>
The fourth line and downwards are the domains currently defined.<p>

<p>Try executing some commands and see where new domains are created. You can do this while you still have the policy editor running.</p>

<p>You can scroll using the <b>arrow keys</b> and/or the <b>Home/End/PageUp/PageDown</b> keys.</br>
Press the <b>"r"</b> key to refresh the contents of the screen.<br>
Press the <b>"f"</b> key to find an entry.<br>
Press the <b>"?"</b> key to view the available commands. Press the "?" again to go back to the previous screen.</p>

<p>Note that a new domain is only created if it is unique, so executing the same command over and over again will not result in the creation of many domains.</p>

<hr>

<h2><a name="3.2">3.2: Understanding profiles</a></h2>

<p>Each domain can be restricted using TOMOYO Linux by assigning a <b>"profile"</b>. These profiles can be assigned to any domain independently of others, which allows you to slowly build up the security in your system one domain at a time. This also allows you to create custom profiles for specific domains, but this is a more advanced topic for later on.</p>

<p>In the policy editor, look at the numbers in the second column of each line:</p>

<p><img src="editpolicy-domain-profile-number.png" alt="editpolicy-domain-profile-number.png" width="720" height="400"></p>

<p>This number is called the <b>"profile number"</b>. A profile number is an integer value which takes between 0 and 255. The default profile number is "0", also known as "Disabled Mode", in which the domain is completely unrestricted.</p>

<p>Press the <b>"w"</b> key to list the different "screens" that can be viewed using the policy editor:</p>

<p><img src="editpolicy-window-list.png" alt="editpolicy-window-list.png" width="720" height="400"></p>

<br>

<p>Press the <b>"p"</b> key to select the <b>"Profile Editor"</b>, and you will see the list of profiles:</p>

<p><img src="editpolicy-profile-list.png" alt="editpolicy-profile-list.png" width="720" height="400"></p>

<br>

<table border="1">
<tr><td>Name</td><td>Control</td></tr>
<tr>
<td>COMMENT</td>
<td>Description of the profile.</td>
</tr>
<tr>
<td>CONFIG</td>
<td>Configuration of operation mode.</td>
</tr>
<tr>
<td>PREFERENCE</td>
<td>Configuration of various options.</td>
</tr>
</table>
<p>The "mode=" parameter of the CONFIG line can contain one of the following values:</p>
<table border="1">
<tr>
<td>Value</td>
<td>Meaning</td>
</tr>
<tr>
<td>disabled</td>
<td>Works as if a regular kernel.</td>
</tr>
<tr>
<td>learning</td>
<td>Do not reject an access request if the request violates policy. Append the request to policy.</td>
</tr>
<tr>
<td>permissive</td>
<td>Do not reject an access request if the request violates policy. Do not append the request to policy.</td>
</tr>
<tr>
<td>enforcing</td>
<td>Reject an access request if the request violates policy. Do not append the request to policy.</td>
</tr>
</table>

<br>

<p>Thus, there are four default profiles that each play a different role:</p>

<table border="1">
<tr><td>
<img src="tutorial/fig-2-5-en.png" alt="fig-2-5-en.png" width="640" height="320">
</td></tr>
</table>

<br>

<p>Each of these profiles can be assigned to a domain:</p>

<table border="1">
<tr><td>
<p><img src="tutorial/fig-2-6.png" alt="fig-2-6.png" width="800" height="600"></p>
</td></tr>
</table>

<br>

<p>The "Learning Mode" profile is the feature of TOMOYO Linux that makes developing policy very easy. This mode will automatically generate policy for any domain that has this profile selected. The other profiles, "Permissive Mode" and "Enforcing Mode", are for later on when a domain is ready to be restricted.</p>

<hr>

<h2><a name="3.3">3.3: Understanding domain policy</a></h2>

<p>The restrictions of each domain can be viewed using the <b>"Domain Policy Editor"</b> screen, which can be accessed by selecting a domain in the "Domain Transition" screen, and then pressing the "Enter" key. Since no policy has been developed yet, the screen is empty. This is an example of domain policy for Apache:</p>

<p><a href="editpolicy-httpd-full.png">(Click to view complete screen.)<br><img src="editpolicy-httpd-acl1.png" alt="editpolicy-httpd-acl1.png" width="720" height="400"></a></p>

<p>The permissions in domain policy are represented here with directives such as "file read" and "file write". Once the domain is placed in "Enforcing Mode", only the permissions defined in domain policy will be allowed, as well as the permissions defined in exception policy (see <a href="tutorial-3.html.en#3.4">3.4: Understanding exception policy</a>). In order to develop a policy of least privilege that still allows normal usage, the "Learning Mode" and "Permissive Mode" can be used. The directives available are described in detail in the <a href="policy-reference.html.en#domain_policy">Domain Policy Specification</a>. However, it is recommended that you <b>continue with this tutorial rather than try to master these directives</b>. It will become clearer later on how these directives can be used.</p>

<hr>

<h2><a name="3.4">3.4: Understanding exception policy</a></h2>

<p>Press the "w" key, then press the "e" key, and you will see the <b>"Exception Policy Editor"</b> screen:</p>

<p><a href="editpolicy-exception-full.png">(Click to view complete screen.)<br><img src="editpolicy-exception-list1.png" alt="editpolicy-exception-list1.png" width="720" height="400"></a></p>

<p>You can scroll this window using the arrow keys and/or the Home/End/PageUp/PageDown keys.</p>

<p>The permissions here are similar to those in the domain policy, but apply to all domains. Permissions defined here will not be displayed in domain policy, and access requests from any domain that match a permission in exception policy will be automatically accepted. The exception policy can also be used to shorten and simplify domain policy for each domain by using the group directives.</p>

<p>For in depth details on the directives that can be used in exception policy, see the <a href="policy-reference.html.en#exception_policy">Exception Policy Specifications</a>. However, it is recommended that you <b>continue with this tutorial rather than try to master these directives</b>. It will become clearer later on how these directives can be used.</p>

<br>

<p>Proceed to the <a href="tutorial-4.html.en">Chapter 4</a>, where we talk about how to manage domains!</p>

<div class=navfooter>
<hr align="left" width="100%">
<table summary="Footer navigation table" width="100%" border="0" cellpadding="0" cellspacing="0">
<tr>
<td width="33%" align="left" valign="top">
<a href="tutorial-2.html.en">Prev</a>
</td>
<td width="34%" align="center" valign="top">
<a href="tutorial-index.html.en">Index</a>
</td>
<td width="33%" align="right" valign="top">
<a href="tutorial-4.html.en">Next</a>
</td></tr>
<tr><td width="33%" align="left" valign="top">
Chapter 2: How do I install TOMOYO Linux?
</td>
<td width="34%" align="center" valign="top">
<a href="http://tomoyo.sourceforge.jp/">Home</a>
</td>
<td width="33%" align="right" valign="top">
Chapter 4: How do I manage domains?
</td>
</tr>
</table>
</div>

<p><a href="http://sourceforge.jp/"><img src="http://sourceforge.jp/sflogo.php?group_id=1973" width="96" height="31" alt="SourceForge.jp"></a></p>
</body>
</html>
