<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="ja-JP">
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="content-style-type" content="text/css">
<link rel="stylesheet" href="../media/tomoyolinux.css" media="all" type="text/css">
<title>TOMOYO Linux 2.6.x : 導入ガイド : Chapter 3</title>
</head>

<body>

<div id="titlebar">
<a href="../index.html.ja"><img src="../media/tomoyotitle.png" alt="tomoyotitle.png" width="320" height="40" border="0" align="left" title="TOMOYO Linux"></a>
</div>

<div id="navbar" class="tomoyo-documentation">
<ul id="navbarlist">
<li id="tomoyo-home"><a href="../index.html.ja" title="TOMOYO Linux ホーム">ホーム</a></li>
<li id="tomoyo-about"><a href="../about.html.ja" title="TOMOYO Linux の詳細">詳細</a></li>
<li id="tomoyo-download"><a href="../download.html.ja" title="TOMOYO Linux を入手">ダウンロード</a></li>
<li id="tomoyo-changelogs"><a href="../changelogs.html.ja" title="TOMOYO Linux 変更履歴">変更履歴</a></li>
<li id="tomoyo-documentation"><a href="../documentation.html.ja" title="公式ドキュメント">ドキュメント</a></li>
<li id="tomoyo-support"><a href="../support.html.ja" title="サポート情報">サポート</a></li>
<li id="tomoyo-links"><a href="../links.html.ja" title="Links">リンク</a></li>
</ul>
<ul id="switch-language">
<li id="tomoyo-switch-language"><a href="chapter-3.html.en" title="Go to English page">English page</a></li>
</ul>
</div>

<div id="content">

<div id="documentation">

<div class="navheader">
<p><a href="chapter-2.html.ja">&lt;前&gt;</a> <a href="index.html.ja">&lt;目次&gt;</a> <a href="chapter-4.html.ja">&lt;次&gt;</a></p>
</div>

<h2>Chapter 3: どうすれば TOMOYO Linux をインストールできますか？</h2>

<h3><a name="3.1">3.1. カーネルのインストール</a></h3>

<h4><a name="3.1.1">3.1.1. 既に TOMOYO Linux 対応カーネルであるかどうか判断する</a></h4>

<p>TOMOYO Linux 2.6 はメインラインカーネルのソースに既に含まれていますが、特定のカーネルコンフィグオプションを有効にしないと利用できません。以下の手順により利用中のカーネルで TOMOYO Linux を利用できるかどうかを判断することができます。</p>

<pre class="command">
$ grep tomoyo_write_inet_network /proc/kallsyms
</pre>
<pre class="output">
ffffffff8115e460 T tomoyo_write_inet_network
</pre>

<p>/proc/kallsyms の中に tomoyo_write_inet_network を含む行が存在していた場合、既に TOMOYO Linux 対応カーネルですので、 <a href="#3.2">3.2. 管理ツールのインストール</a>へと進んでください。</p>

<p>存在しない場合、 TOMOYO Linux 対応カーネルを作成する必要がありますので、以下の手順に従ってインストールしてください。</p>

<p>ただし、カーネルのコンパイルをせずに TOMOYO Linux の機能の主要部分を使いたい場合には、 AKARI というカーネルモジュールを利用することができます。このモジュールは TOMOYO 2.x よりも豊富な機能を提供していますが、 TOMOYO 1.x の機能の一部は使えません。「カーネルがどのようなコンパイルオプションでコンパイルされたか」と「ＣＰＵアーキテクチャ」に依存するという制限がありますが、カーネル 2.6.0 以降の全てのバージョンに対応しており、簡単に利用できます。 <a href="https://akari.osdn.jp/comparison.html.ja">機能比較表</a>で AKARI と TOMOYO 1.x と TOMOYO 2.x の違いについて詳細に説明されています。もし、 AKARI を使うのであれば、 <a href="https://akari.osdn.jp/">AKARI のウェブサイト</a>へと移動してください。</p>

<h4><a name="3.1.2">3.1.2. 依存するパッケージのインストール</a></h4>

<p>カーネルと管理ツールをコンパイルするために以下のパッケージが必要になります：</p>
<ul>
<li><strong>wget</strong> ：ソースコードをダウンロードするのに必要です。</li>
<li><strong>patch</strong> ：カーネルにパッチを当てるのに必要です。</li>
<li><strong>gcc</strong> ：カーネルおよび管理ツールをコンパイルするのに必要です。</li>
<li><strong>make</strong> ：カーネルおよび管理ツールをコンパイルするのに必要です。</li>
<li><strong>ncurses-devel</strong> または <strong>libncurses-dev</strong> ：管理ツールをコンパイルするのに必要です。</li>
</ul>

<p>これらのパッケージは以下のコマンドを実行することでインストールできます：</p>

<p><strong>RedHat 系の場合</strong></p>
<pre class="command">
# yum -y install wget patch gcc make ncurses-devel
</pre>
<p><strong>Debian 系の場合</strong></p>
<pre class="command">
# apt-get -y install wget patch gcc make libncurses-dev
</pre>
<p><strong>SUSE 系の場合</strong></p>
<pre class="command">
# yast -i wget patch gcc make ncurses-devel
</pre>

<h4><a name="3.1.3">3.1.3. カーネルソースの入手</a></h4>

<p>カーネルのソースを "<a href="https://www.kernel.org/pub/linux/kernel/v5.x/">linux-5</a>" または "<a href="https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git">linux git tree</a>" からダウンロードして展開してください。<br>
カーネル 5.1 以降に対応しています。</p>

<p>カーネルのソースを展開して、そのディレクトリに移動してください。</p>

<h4><a name="3.1.4">3.1.4. カーネルコンパイルオプションの設定</a></h4>

<pre class="command">
$ make -s menuconfig
</pre>

<p>Security options の画面に移動して、以下のオプションを選択してください。</p>

<pre>
[*] Enable different security models
-*- Enable the securityfs filesystem
-*- Security hooks for pathname based access control
[*] TOMOYO Linux Support
(2048) Default maximal count for learning mode
(1024) Default maximal count for audit log
[ ]   Activate without calling userspace policy loader.
(/sbin/tomoyo-init) Location of userspace policy loader
(/sbin/init) Trigger for calling userspace policy loader
</pre>

<p>TOMOYO のポリシーは２種類存在します。前者はカーネル内に埋め込まれ、後者はファイルシステム上（ /etc/tomoyo/ ディレクトリ内）のファイルとして保存されます。前者のポリシーを変更する場合にはカーネルの再コンパイルが必要になりますが、ポリシーローダ（例： /sbin/tomoyo-init ）を使用せずにポリシーをロードできるようになります。後者は TOMOYO のアクセス制御が有効になる（例： /sbin/init が実行される）直前にポリシーローダを実行することで読み込まれます。 <em>Activate without calling userspace policy loader.</em> オプションを選択した場合、前者のポリシーだけをロードした時点で TOMOYO のアクセス制御が有効になります。このオプションは、（組込みシステムなど）ポリシーローダを実行することが困難な場合に便利です。</p>

<p><em>Location of userspace policy loader</em> オプションは、 <em>Activate without calling userspace policy loader.</em> オプションを選択しない場合のみ指定できます。このオプションにはポリシーローダとして使用するパス名のデフォルトを指定します。この設定は、カーネルのコマンドラインで TOMOYO_loader= オプションで上書きできます。</p>

<p><em>Trigger for calling userspace policy loader</em> オプションは、 <em>Activate without calling userspace policy loader.</em> オプションを選択しない場合のみ指定できます。このオプションにはアクセス制御を開始するトリガとして利用するパス名のデフォルトを指定します。この設定は、カーネルのコマンドラインで TOMOYO_trigger= オプションで上書きできます。例えば、 init=/usr/lib/systemd/systemd というオプションを指定する場合、 TOMOYO_trigger=/usr/lib/systemd/systemd というオプションも指定することになるでしょう。</p>

<h4><a name="3.1.5">3.1.5. カーネルのコンパイルおよびインストール</a></h4>

<p>カーネルコンパイルオプションの変更が終わったら、以下のコマンドを実行してカーネルをコンパイルしてください：</p>

<pre class="command">
$ make -s
$ su
# make -s modules_install install
</pre>

<p>必要であれば initrd/initramfs を作成してください。</p>

<h3><a name="3.2">3.2. 管理ツールのインストール</a></h3>

<h4><a name="3.2.1">3.2.1. バイナリパッケージが提供されているかどうか判断する</a></h4>

<p>tomoyo-tools あるいは tomoyotools というパッケージが提供されており、そのバージョンが 2.6 である場合、それを利用することができます。インストールして <a href="#3.3">3.3. 設定の初期化</a>へと進んでください。</p>

<h4><a name="3.2.2">3.2.2. ツールをソースからコンパイルする</a></h4>

<p>前述した依存するパッケージがインストールされていることを確認してください。以下のコマンドを実行することによりコンパイルおよびインストールできます。</p>

<pre class="command">
$ wget -O tomoyo-tools-2.5.0-20170102.tar.gz 'https://osdn.jp/frs/redir.php?m=jaist&amp;f=/tomoyo/53357/tomoyo-tools-2.5.0-20170102.tar.gz'
$ wget -O tomoyo-tools-2.5.0-20170102.tar.gz.asc 'https://osdn.jp/frs/redir.php?m=jaist&amp;f=/tomoyo/53357/tomoyo-tools-2.5.0-20170102.tar.gz.asc'
$ wget https://tomoyo.osdn.jp/kumaneko-key
$ gpg --import kumaneko-key
$ gpg tomoyo-tools-2.5.0-20170102.tar.gz.asc
$ tar -zxf tomoyo-tools-2.5.0-20170102.tar.gz
$ cd tomoyo-tools/
$ make -s USRLIBDIR=/usr/lib
$ su
# make -s USRLIBDIR=/usr/lib install
</pre>

<p>必要に応じて、 USRLIBDIR=/usr/lib を USRLIBDIR=/usr/lib64 （６４ビット用の場合）または USRLIBDIR=/usr/lib32 （３２ビット用の場合）に変更してください。</p>

<h3><a name="3.3">3.3. 設定の初期化</a></h3>

<p>管理ツールを実行するときに便利なように、管理ツールのインストールされているディレクトリ（ /usr/sbin ）を環境変数 PATH に追加したいと思うかもしれません。 bash を使用している場合、以下の行を ~/.bashrc に追加してください：</p>

<pre>
export PATH=$PATH:/usr/sbin
</pre>

<p>TOMOYO Linux を使うためには、初期設定の手順を行う必要があります。この手順により、ポリシーを保存するディレクトリが作成されます。全てのポリシーファイルは <strong>/etc/tomoyo/ ディレクトリに保存されます</strong>。</p>

<p><code>/usr/lib/tomoyo/init_policy</code> を実行することで、以下のような出力が表示される筈です：</p>

<pre class="command">
# /usr/lib/tomoyo/init_policy
</pre>
<pre class="output">
Creating policy directory... OK
Creating configuration directory... OK
Creating exception policy... OK
Creating domain policy... OK
Creating manager policy... OK
Creating default profile... OK
Creating stat policy... OK
Creating configuration file for tomoyo-editpolicy ... OK
Creating configuration file for tomoyo-auditd ... OK
Creating configuration file for tomoyo-patternize ... OK
Creating configuration file for tomoyo-notifyd ... OK
</pre>

<h3><a name="3.4">3.4. ブートローダの設定</a></h3>

<p>前述の手順でインストールされたカーネルをブートローダ（例えば GRUB など）から選択できるように、ブートローダの設定を行ってください。ディストリビューションにより、ブートローダの設定ファイルの場所が異なります。 GRUB バージョン１を利用している場合には /boot/grub/grub.conf または /boot/grub/menu.lst のどちらか、 GRUB バージョン２を利用している場合には /boot/grub/grub.cfg または /boot/grub2/grub.cfg のどちらかであると思います。詳しくはお使いのディストリビューションのドキュメントを参照してください。</p>

<p>TOMOYO Linux では、 TOMOYO_trigger というカーネルのコマンドラインオプションをサポートしています。このオプションは、最初に実行されるプログラムとして <code>/sbin/init</code> 以外を利用しているシステムにおいて便利です。例えば、 RHEL 7 では systemd を利用しているので、 <code>/usr/lib/systemd/systemd</code> が最初に実行されます。 <a href="#3.1.4">3.1.4. カーネルコンパイルオプションの設定</a>で /usr/lib/systemd/systemd を指定しなかった場合、 TOMOYO_trigger=/usr/lib/systemd/systemd という指定をする必要があります。</p>

<p>/boot/grub2/grub.cfg を直接編集するだけでも構いません。しかし、将来カーネルパッケージをアップデートする場合のために、以下のように <code>/etc/default/grub</code> の GRUB_CMDLINE_LINUX 行も編集しておくことを推奨します：</p>

<pre>
GRUB_CMDLINE_LINUX="vconsole.keymap=jp106 crashkernel=auto vconsole.font=latarcyrheb-sun16 rhgb quiet TOMOYO_trigger=/usr/lib/systemd/systemd"
</pre>

<h3><a name="3.5">3.5. システムの再起動</a></h3>

<p>ここまでで準備は完了です。（お疲れさまでした。）それでは、新しくインストールされたカーネルを使用してみましょう。システムを再起動し、 GRUB の画面（あるいは使用している他のブートローダの画面）で TOMOYO Linux カーネルを選択してください。正常にインストールが完了し、ブートローダの設定が適切に行われていれば、正常にカーネルがロードされる筈です。</p>

<p>正常に起動されたらログインして、 <code>/sys/kernel/security/lsm</code> の内容を確認してください。出力の中に tomoyo が含まれていれば、 TOMOYO Linux が有効な状態で起動されています。</p>

<pre class="command">
$ cat /sys/kernel/security/lsm
</pre>
<pre class="output">
capability,yama,loadpin,safesetid,selinux,tomoyo
</pre>

<p>出力の中に tomoyo が含まれていない場合、 TOMOYO Linux が無効な状態で起動されています。その場合、 <code>/sys/kernel/security/lsm</code> の出力に tomoyo を追加したものを、 lsm というカーネルのコマンドラインオプションを用いて指定してから再起動してください。</p>

<pre>
lsm=capability,yama,loadpin,safesetid,selinux,tomoyo
</pre>

<h3><a name="3.6">3.6. どのようにすれば TOMOYO Linux を無効化またはアンインストールできますか？</a></h3>

<p>もし、このガイドに従って操作している間またはそれ以降にシステムが起動しなくなってしまった場合、ポリシーの設定が不適切である場合を含めて TOMOYO Linux に原因があるかもしれません。その場合、 <code>/sys/kernel/security/lsm</code> の出力から tomoyo を除外したものを、 lsm というカーネルのコマンドラインオプションを用いて指定してから再起動してください。</p>

<pre>
lsm=capability,yama,loadpin,safesetid,selinux
</pre>

</div><!-- documentation -->

</div><!-- content -->

<div id="navfooter">
<hr>
<table>
<tr>
<td class="docs-previous">
<a href="chapter-2.html.ja">前</a>
</td>
<td class="docs-index">
<a href="index.html.ja">目次</a>
</td>
<td class="docs-next">
<a href="chapter-4.html.ja">次</a>
</td>
</tr>
<tr>
<td class="docs-previous-description">
<p>Chapter 2: なぜ TOMOYO Linux が必要なのですか？</p>
</td>
<td class="docs-home">
</td>
<td class="docs-next-description">
<p>Chapter 4: TOMOYO Linux はどのように動きますか？</p>
</td>
</tr>
</table>
</div>

<div id="footer">
<p class="language">Go to <a href="chapter-3.html.en">English page</a>.</p>
<p class="timestamp">Last modified: $Date$</p>
<p class="trademark">Linux&reg; は世界各国における Linus Torvalds の登録商標です。 TOMOYO&reg; は<a href="http://www.nttdata.co.jp/">株式会社ＮＴＴデータ</a>の登録商標です。</p>
<p><a href="https://osdn.jp/"><img src="https://osdn.jp/sflogo.php?group_id=1973" width="96" height="31" alt="sflogo.php" title="SourceForge.jp"></a></p>
</div>

</body>
</html>
