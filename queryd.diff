Index: ccstools.src/ccs-queryd.c
===================================================================
--- ccstools.src/ccs-queryd.c	(revision 1859)
+++ ccstools.src/ccs-queryd.c	(working copy)
@@ -10,6 +10,29 @@
  */
 #include "ccstools.h"
 
+static void _printw(const char *fmt, ...)
+	__attribute__ ((format(printf, 1, 2)));
+
+static void _printw(const char *fmt, ...)
+{
+	va_list args;
+	int i;
+	int len;
+	char *buffer;
+	va_start(args, fmt);
+	len = vsnprintf((char *) &i, sizeof(i) - 1, fmt, args) + 16;
+	va_end(args);
+	buffer = malloc(len);
+	if (!buffer)
+		return;
+	va_start(args, fmt);
+	len = vsnprintf(buffer, len, fmt, args);
+	va_end(args);
+	for (i = 0; i < len; i++)
+		addch(buffer[i]);
+	free(buffer);
+}
+
 static bool has_retry_counter = false;
 static unsigned short int retries = 0;
 
@@ -136,13 +159,13 @@
 			fprintf(fp, KEYWORD_DELETE);
 		fprintf(fp, KEYWORD_ALLOW_READ "%s\n", pathname + 1);
 		fflush(fp);
-		printw("The pathname %s was %s globally readable file.\n\n",
+		_printw("The pathname %s was %s globally readable file.\n\n",
 		       pathname + 1, (pathname[0] == '-') ?
 		       "deleted. Deleted from" : "created. Appended to");
 		refresh();
 		return;
 	}
-	printw("The pathname %s was %s globally readable file? ('Y'es/'N'o):",
+	_printw("The pathname %s was %s globally readable file? ('Y'es/'N'o):",
 	       pathname + 1, (pathname[0] == '-') ?
 	       "deleted. Delete from" : "created. Append to");
 	refresh();
@@ -152,7 +175,7 @@
 			break;
 		write(query_fd, "\n", 1);
 	}
-	printw("%c\n", c);
+	_printw("%c\n", c);
 	refresh();
 	if (c == 'Y' || c == 'y') {
 		if (pathname[0] == '-')
@@ -160,7 +183,7 @@
 		fprintf(fp, KEYWORD_ALLOW_READ "%s\n", pathname + 1);
 		fflush(fp);
 	}
-	printw("\n");
+	_printw("\n");
 	refresh();
 }
 
@@ -267,12 +290,12 @@
 	time_t stamp;
 	char *cp = strstr(buffer, " pid=");
 	if (!cp || sscanf(cp + 5, "%u", &pid) != 1) {
-		printw("ERROR: Unsupported query.\n");
+		_printw("ERROR: Unsupported query.\n");
 		return false;
 	}
 	cp = strchr(buffer, '\0');
 	if (*(cp - 1) != '\n') {
-		printw("ERROR: Unsupported query.\n");
+		_printw("ERROR: Unsupported query.\n");
 		return false;
 	}
 	*(cp - 1) = '\0';
@@ -282,24 +305,24 @@
 	}
 	if (pid != prev_pid) {
 		if (prev_pid)
-			printw("----------------------------------------\n");
+			_printw("----------------------------------------\n");
 		prev_pid = pid;
 	}
 	if (sscanf(buffer, "#timestamp=%lu", &stamp) == 1) {
 		cp = strchr(buffer, ' ');
 		if (cp) {
 			struct tm *tm = localtime(&stamp);
-			printw("#%04d-%02d-%02d %02d:%02d:%02d#",
+			_printw("#%04d-%02d-%02d %02d:%02d:%02d#",
 			       tm->tm_year + 1900, tm->tm_mon + 1, tm->tm_mday,
 			       tm->tm_hour, tm->tm_min, tm->tm_sec);
 			memmove(buffer, cp, strlen(cp) + 1);
 		}
 	}
-	printw("%s\n", buffer);
+	_printw("%s\n", buffer);
 	/* Is this domain query? */
 	if (strstr(buffer, "\n#"))
 		goto not_domain_query;
-	printw("Allow? ('Y'es/Yes and 'A'ppend to policy/'N'o%s):",
+	_printw("Allow? ('Y'es/Yes and 'A'ppend to policy/'N'o%s):",
 	       has_retry_counter ? "/'R'etry" : "");
 	refresh();
 	while (true) {
@@ -310,7 +333,7 @@
 			break;
 		write(query_fd, "\n", 1);
 	}
-	printw("%c\n", c);
+	_printw("%c\n", c);
 	refresh();
 
 	/* Append to domain policy. */
@@ -328,10 +351,10 @@
 	line = simple_readline(y, 0, "Enter new entry> ", readline_history,
 			       readline_history_count, 4000, 8);
 	scrollok(stdscr, TRUE);
-	printw("\n");
+	_printw("\n");
 	refresh();
 	if (!line || !*line) {
-		printw("None added.\n");
+		_printw("None added.\n");
 		goto not_append;
 	}
 	readline_history_count = simple_add_history(line, readline_history,
@@ -341,7 +364,7 @@
 	write(domain_policy_fd, "\n", 1);
 	write(domain_policy_fd, line, strlen(line));
 	write(domain_policy_fd, "\n", 1);
-	printw("Added '%s'.\n", line);
+	_printw("Added '%s'.\n", line);
 not_append:
 	refresh();
 	free(line);
@@ -355,11 +378,11 @@
 		c = 2;
 	snprintf(buffer, buffer_len - 1, "A%u=%u\n", serial, c);
 	write(query_fd, buffer, strlen(buffer));
-	printw("\n");
+	_printw("\n");
 	refresh();
 	return true;
 not_domain_query:
-	printw("Allow? ('Y'es/'N'o%s):", has_retry_counter ? "/'R'etry" : "");
+	_printw("Allow? ('Y'es/'N'o%s):", has_retry_counter ? "/'R'etry" : "");
 	refresh();
 	while (true) {
 		c = getch2();
@@ -368,7 +391,7 @@
 			break;
 		write(query_fd, "\n", 1);
 	}
-	printw("%c\n", c);
+	_printw("%c\n", c);
 	refresh();
 	goto write_answer;
 }
@@ -399,12 +422,12 @@
 	/* Check for same domain. */
 	*cp++ = '\0';
 	if (strcmp(buffer, prev_buffer)) {
-		printw("----------------------------------------\n");
+		_printw("----------------------------------------\n");
 		memmove(prev_buffer, buffer, strlen(buffer) + 1);
 	}
-	printw("%s\n", buffer);
-	printw("%s", cp);
-	printw("Allow? ('Y'es/Yes and 'A'ppend to policy/'N'o):");
+	_printw("%s\n", buffer);
+	_printw("%s", cp);
+	_printw("Allow? ('Y'es/Yes and 'A'ppend to policy/'N'o):");
 	refresh();
 	while (true) {
 		c = getch2();
@@ -413,7 +436,7 @@
 			break;
 		write(query_fd, "\n", 1);
 	}
-	printw("%c\n", c);
+	_printw("%c\n", c);
 	refresh();
 
 	/* Append to domain policy. */
@@ -431,10 +454,10 @@
 	line = simple_readline(y, 0, "Enter new entry> ", readline_history,
 			       readline_history_count, 4000, 8);
 	scrollok(stdscr, TRUE);
-	printw("\n");
+	_printw("\n");
 	refresh();
 	if (!line || !*line) {
-		printw("None added.\n");
+		_printw("None added.\n");
 		goto not_append;
 	}
 	readline_history_count = simple_add_history(line, readline_history,
@@ -444,12 +467,12 @@
 	write(domain_policy_fd, "\n", 1);
 	write(domain_policy_fd, line, strlen(line));
 	write(domain_policy_fd, "\n", 1);
-	printw("Added '%s'.\n", line);
+	_printw("Added '%s'.\n", line);
 not_append:
 	free(line);
 write_answer:
 	refresh();
-	printw("\n");
+	_printw("\n");
 	/* Write answer. */
 	if (c == 'Y' || c == 'y' || c == 'A' || c == 'a')
 		c = 1;
@@ -459,10 +482,10 @@
 	write(query_fd, buffer, strlen(buffer));
 	return true;
 not_domain_query:
-	printw("----------------------------------------\n");
+	_printw("----------------------------------------\n");
 	prev_buffer[0] = '\0';
-	printw("%s", buffer);
-	printw("Allow? ('Y'es/'N'o):");
+	_printw("%s", buffer);
+	_printw("Allow? ('Y'es/'N'o):");
 	refresh();
 	while (true) {
 		c = getch2();
@@ -470,7 +493,7 @@
 			break;
 		write(query_fd, "\n", 1);
 	}
-	printw("%c\n", c);
+	_printw("%c\n", c);
 	goto write_answer;
 }
 
