Subject: Remove static from may_create() and may_delete().

This patch allows LSM to use may_create() and may_delete().

Signed-off-by: Kentaro Takeda <takedakn@nttdata.co.jp>
Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Signed-off-by: Toshiharu Harada <haradats@nttdata.co.jp>
---
 fs/namei.c         |    5 ++---
 include/linux/fs.h |    2 ++
 2 files changed, 4 insertions(+), 3 deletions(-)

--- linux-2.6.25-mm1.orig/fs/namei.c
+++ linux-2.6.25-mm1/fs/namei.c
@@ -1470,7 +1470,7 @@ static inline int check_sticky(struct in
  * 10. We don't allow removal of NFS sillyrenamed files; it's handled by
  *     nfs_async_unlink().
  */
-static int may_delete(struct inode *dir,struct dentry *victim,int isdir)
+int may_delete(struct inode *dir, struct dentry *victim, int isdir)
 {
 	int error;
 
@@ -1510,8 +1510,7 @@ static int may_delete(struct inode *dir,
  *  3. We should have write and exec permissions on dir
  *  4. We can't do it if dir is immutable (done in permission())
  */
-static inline int may_create(struct inode *dir, struct dentry *child,
-			     struct nameidata *nd)
+int may_create(struct inode *dir, struct dentry *child, struct nameidata *nd)
 {
 	if (child->d_inode)
 		return -EEXIST;
--- linux-2.6.25-mm1.orig/include/linux/fs.h
+++ linux-2.6.25-mm1/include/linux/fs.h
@@ -1785,6 +1785,8 @@ extern void free_write_pipe(struct file 
 extern struct file *do_filp_open(int dfd, const char *pathname,
 		int open_flag, int mode);
 extern int may_open(struct nameidata *, int, int);
+extern int may_create(struct inode *, struct dentry *, struct nameidata *);
+extern int may_delete(struct inode *, struct dentry *, int);
 
 extern int kernel_read(struct file *, unsigned long, char *, unsigned long);
 extern struct file * open_exec(const char *);
