<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="ja-JP">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<title>TOMOYO Linux 導入手順書</title>
<link rel="stylesheet" href="http://tomoyo.sourceforge.jp/tomoyo.css" media="all" type="text/css">
</head>
<body>
<p>This page is for TOMOYO 2.3 (for Linux 2.6.36 and later kernels). Please jump to <a href="../2.2/">this page</a> for TOMOYO 2.2 (for Linux 2.6.30 - 2.6.35 kernels).</p>
<p style="text-align:right;"><a href="phase-4.html.en">English Page</a></p>
<p style="text-align:right;">Last modified: $Date$</p>
<h1>第４節：ポリシーを作成する</h1>

<p style="text-align:center;">目的：テンポラリファイルへの対処やアクセス許可の集約を行い、ドメインポリシーの単純化と減量を行います。</p>

<hr>

<h2><a name="4.1">ステップ４．１：テンポラリファイルに対処する</a></h2>

<p>特定のドメインでは、多数の資源に対して多数のアクセス許可を必要とすることがあります。「強制モード」では明示的に許可された資源へのアクセスだけが認められるため、必要な資源を全て網羅しておくことが重要です。網羅するために、アクセス許可をパターン化することができます。パターン化されたアクセス許可を使うと、多数のドメインポリシーのエントリを１個に集約することができます。</p>

<p>パターン化は、使い捨てのパス名が利用されるテンポラリファイルへの対処を行うのに有効です。以下に紹介する手順で対処することもできますし、ポリシーエディタを用いて対話的に対処することもできます。対話的に対処する手順の詳細については<a href="tool-editpolicy.html.ja#acl_editor">パターン化支援機能について</a>を参照してください。</p>

<p>/usr/sbin/tomoyo-findtemp コマンドを利用して、テンポラリファイルの可能性があるパス名を抽出します。</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# /usr/sbin/tomoyo-findtemp &lt; /sys/kernel/security/tomoyo/domain_policy<br>
/etc/mtab.tmp<br>
/etc/mtab~<br>
/etc/mtab~2302<br>
/etc/mtab~2328<br>
/etc/mtab~2329<br>
/etc/mtab~2330<br>
/etc/mtab~2331<br>
/etc/mtab~2332<br>
/etc/mtab~2339<br>
/etc/mtab~2383<br>
/halt<br>
/selinux/disable<br>
/selinux/enforce<br>
/selinux/policyvers<br>
/tmp/sh-thd-1163110572<br>
/tmp/sh-thd-1163113704<br>
/var/cache/samba/browse.dat.<br>
/var/lib/nfs/etab.tmp<br>
/var/lib/nfs/xtab.tmp<br>
/var/lock/mrtg/mrtg_l<br>
</td></tr>
</table>

<p>この例では、 /etc/mtab~数値 および /tmp/sh-thd-数値 がテンポラリファイルであると考えられます。そのため、これらのパス名をパターン化します。</p>

<p>最初に、どのようなパターンを利用するかを決めます。この例では、１０進数の数値が使用されていると考えられます。そのため、１桁以上の１０進数に一致する \$ が妥当だと考えられます。詳細については<a href="policy-reference.html.ja#wildcard_expression_rules">パターンの表記規則</a>を参照してください。</p>

<p>/usr/sbin/tomoyo-patternize コマンドを利用して、ドメインポリシーの中の「 /etc/mtab~数値 」および「 /tmp/sh-thd-数値」を「 /etc/mtab~\$ 」および「 /tmp/sh-thd-\$ 」に置換します。</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# /usr/sbin/tomoyo-savepolicy -d | /usr/sbin/tomoyo-patternize '/etc/mtab~\$' '/tmp/sh-thd-\$' | /usr/sbin/tomoyo-loadpolicy -d
</td></tr>
</table>

<p>必要であれば、学習する際に自動的にパターン化されるようにするために、例外ポリシーにパターンを登録しておくことができます。</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# echo 'file_pattern /etc/mtab~\$' | /usr/sbin/tomoyo-loadpolicy -e<br>
[root@tomoyo ~]# echo 'file_pattern /tmp/sh-thd-\$' | /usr/sbin/tomoyo-loadpolicy -e
</td></tr>
</table>

<hr>

<h2><a name="4.2">ステップ４．２：ファイルのパス名をパターン化する</a></h2>

<p>学習モードでは必ずしもアクセスされないファイルに対するアクセス許可を追加します。例えば、 WWW サーバがアクセスするコンテンツを扱うために、以下のようにパターン化を行うことができます。</p>

<table border="1">
<tr><td>修正前</td><td>修正後</td></tr>
<tr><td>
&lt;kernel&gt; /usr/sbin/httpd<br>
<br>
allow_read /var/www/html/index.html<br>
allow_read /var/www/html/blog/index.html<br>
allow_read /var/www/html/blog/page1.html<br>
allow_read /var/www/html/blog/page2.html<br>
allow_read /var/www/html/blog/page3.html<br>
allow_read /var/www/html/blog/image1.jpg<br>
allow_read /var/www/html/blog/image2.jpg
</td><td>
&lt;kernel&gt; /usr/sbin/httpd<br>
<br>
allow_read /var/www/html/\*.html<br>
allow_read /var/www/html/\{\*\}/\*.html<br>
allow_read /var/www/html/\{\*\}/\*.jpg<br>
<br>
<br>
<br>
<br>
</td></tr>
</table>

<p>例外ポリシーで以下のようなグループを定義しておくことにより、</p>

<table border="1">
<tr><td>
path_group WEB-CONTENTS /var/www/html/\*.html<br>
path_group WEB-CONTENTS /var/www/html/\{\*\}/\*.html<br>
path_group WEB-CONTENTS /var/www/html/\{\*\}/\*.jpg<br>
</td></tr>
</table>

<p>ドメインポリシーでの記述を以下のように単純化することができます。</p>

<table border="1">
<tr><td>
&lt;kernel&gt; /usr/sbin/httpd<br>
<br>
allow_read @WEB-CONTENTS
</td></tr>
</table>

<hr>

<h2><a name="4.3">ステップ４．３：収集されたアクセス許可を確認する</a></h2>

<p>Apache に許可したい操作を一通り行ったと判断したら、ポリシーエディタを実行してプロファイル番号を 2 に変更します。</p>

<p> Apache は（例えば /bin/sh /usr/bin/perl /usr/lib/sendmail のような）外部のプログラムを実行したことにより、 Apache に子ドメインや孫ドメインが作成されているかもしれません。 /usr/sbin/httpd のドメインだけでなくその子孫ドメインのプロファイル番号も変更するのを忘れないようにしてください。</p>

<p>対象となるドメインを選択して、 s キーを押し、 2 と入力してから Enter キーを押してください。</p>

<p><img src="editpolicy-httpd-set-profile2.png" alt="editpolicy-httpd-set-profile2.png" width="720" height="400"></p>

<p>/usr/sbin/httpd およびその子孫ドメインのプロファイル番号が 2 に変更されました。</p>

<p><img src="editpolicy-httpd-profile2.png" alt="editpolicy-httpd-profile2.png" width="720" height="400"></p>

<p>q キーを押してポリシーエディタを終了してください。その後、 Apache に対して許可したい操作を再度行ってください。</p>

<p>もしプロファイルで PREFERENCE::permissive={ verbose=yes } と設定されている場合（デフォルトでそうなっています）、ポリシーで許可されていない操作を行うと WARNING: というメッセージがコンソールに表示されます。</p>

<p><img src="permissive-warning.png" alt="permissive-warning.png" width="720" height="400"></p>

<p>カーネル内のメモリに存在しているポリシーを直接編集しているため、ディスク上に保存せずにシャットダウンすると変更内容は失われてしまいます。</p>

<p>/etc/tomoyo/exception_policy.conf および /etc/tomoyo/domain_poilicy.conf をディスク上に保存するには以下のコマンドを実行してください。</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# /usr/sbin/tomoyo-savepolicy a
</td></tr>
</table>

<p>TOMOYO Linux を使う目的が解析であれば、ここで解析は終了です。</p>

<p>TOMOYO Linux を使う目的が保護であれば、次の節へと進んでください。</p>

<div class=navfooter>
<hr align="left" width="100%">
<table summary="Footer navigation table" width="100%" border="0" cellpadding="0" cellspacing="0">
<tr>
<td width="33%" align="left" valign="top">
<a href="phase-3.html.ja">前節</a>
</td>
<td width="34%" align="center" valign="top">
<a href="index.html.ja">目次</a>
</td>
<td width="33%" align="right" valign="top">
<a href="phase-5.html.ja">次節</a>
</td></tr>
<tr><td width="33%" align="left" valign="top">
第３節：ドメインを解析する
</td>
<td width="34%" align="center" valign="top">
<a href="http://tomoyo.sourceforge.jp/">ホーム</a>
</td>
<td width="33%" align="right" valign="top">
第５節：ポリシーを適用する
</td>
</tr>
</table>
</div>

<p><a href="http://sourceforge.jp/"><img src="http://sourceforge.jp/sflogo.php?group_id=1973" width="96" height="31" alt="SourceForge.jp"></a></p>
</body>
</html>
